{"ast":null,"code":"import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\n// Create a reference to the storage service\nconst storage = getStorage();\n\n// Retrieve the image URL from Firebase Firestore or Realtime Database\n\nexport default {\n  async getCarsImages(data) {\n    try {\n      const carsImages = [];\n\n      // data.forEach((one) => {\n      // \tconst { id, pics } = one;\n      // \tconst urlList = [];\n      // \tpics.forEach((pic) => {\n      // \t\tconsole.log(pic,'foto')\n      // \t\tconst imageRef = ref(storage, pic);\n      // \t\tgetDownloadURL(imageRef)\n      // \t\t\t.then((url) => {\n      // \t\t\t\turlList.push(url);\n      // \t\t\t})\n      // \t\t\t.catch((error) => {\n      // \t\t\t\t// Handle any errors that occurred during fetching the image\n      // \t\t\t\tconsole.error(\"Error fetching image:\", error);\n      // \t\t\t});\n      // \t});\n      // \tcarsImages.push({ carId: id, carImagesUrl: urlList });\n      // });\n\n      // return carsImages;\n    } catch (error) {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["getStorage","ref","getDownloadURL","storage","getCarsImages","data","carsImages","error"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiCarsImages.js"],"sourcesContent":["import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n// Create a reference to the storage service\r\nconst storage = getStorage();\r\n\r\n// Retrieve the image URL from Firebase Firestore or Realtime Database\r\n\r\nexport default {\r\n\tasync getCarsImages(data) {\r\n\t\r\n\t\ttry {\r\n\t\t\tconst carsImages = [];\r\n\r\n\t\t\t// data.forEach((one) => {\r\n\t\t\t// \tconst { id, pics } = one;\r\n\t\t\t// \tconst urlList = [];\r\n\t\t\t// \tpics.forEach((pic) => {\r\n\t\t\t// \t\tconsole.log(pic,'foto')\r\n\t\t\t// \t\tconst imageRef = ref(storage, pic);\r\n\t\t\t// \t\tgetDownloadURL(imageRef)\r\n\t\t\t// \t\t\t.then((url) => {\r\n\t\t\t// \t\t\t\turlList.push(url);\r\n\t\t\t// \t\t\t})\r\n\t\t\t// \t\t\t.catch((error) => {\r\n\t\t\t// \t\t\t\t// Handle any errors that occurred during fetching the image\r\n\t\t\t// \t\t\t\tconsole.error(\"Error fetching image:\", error);\r\n\t\t\t// \t\t\t});\r\n\t\t\t// \t});\r\n\t\t\t// \tcarsImages.push({ carId: id, carImagesUrl: urlList });\r\n\t\t\t// });\r\n\r\n\t\t\t// return carsImages;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;;AAElE;AACA,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;;AAE5B;;AAEA,eAAe;EACd,MAAMI,aAAaA,CAACC,IAAI,EAAE;IAEzB,IAAI;MACH,MAAMC,UAAU,GAAG,EAAE;;MAErB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;IACD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}