{"ast":null,"code":"import { required, email } from \"vuelidate/lib/validators\";\nimport { mapActions, mapGetters, mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      submitted: false\n    };\n  },\n  validations: {\n    email: {\n      required,\n      email\n    }\n  },\n  methods: {\n    ...mapActions(\"auth\", [\"handleForgotPassword\"]),\n    ...mapMutations(\"auth\", [\"SET_ALERT_MSG\", \"TOGGLE_IS_LOADING\"]),\n    // adjustErrorMsg(error) {\n    // \tlet errorMsg;\n    // \tswitch (error) {\n    // \t\tcase \"auth/invalid-email\":\n    // \t\t\terrorMsg = \"Invalid email\";\n    // \t\t\tbreak;\n    // \t\tcase \"auth/user-not-found\":\n    // \t\t\terrorMsg = \"No account found with this email\";\n    // \t\t\tbreak;\n    // \t\tcase \"auth/wrong-password\":\n    // \t\t\terrorMsg = \"Incorrect password\";\n    // \t\t\tbreak;\n    // \t\tdefault:\n    // \t\t\terrorMsg = \"Email or password was incorrect\";\n    // \t\t\tbreak;\n    // \t}\n    // \treturn errorMsg;\n    // },\n\n    async tryPasswordReset() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      } else {\n        this.TOGGLE_IS_LOADING();\n        try {\n          const response = await this.handleForgotPassword({\n            email: this.email\n          });\n        } catch (error) {\n          // const errorMsg = this.adjustErrorMsg(error);\n          this.SET_ALERT_MSG({\n            type: \"error\",\n            title: \"Error\",\n            msg: error\n          });\n        } finally {\n          this.TOGGLE_IS_LOADING();\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(\"auth\", [\"isLoggedIn\"])\n  }\n};","map":{"version":3,"names":["required","email","mapActions","mapGetters","mapMutations","data","submitted","validations","methods","tryPasswordReset","$v","$touch","$invalid","TOGGLE_IS_LOADING","response","handleForgotPassword","error","SET_ALERT_MSG","type","title","msg","computed"],"sources":["src/views/authentication/forgot-password.vue"],"sourcesContent":["<script>\r\nimport { required, email } from \"vuelidate/lib/validators\";\r\nimport { mapActions, mapGetters, mapMutations } from \"vuex\";\r\n\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\temail: \"\",\r\n\t\t\tsubmitted: false,\r\n\t\t};\r\n\t},\r\n\tvalidations: {\r\n\t\temail: { required, email },\r\n\t},\r\n\r\n\tmethods: {\r\n\t\t...mapActions(\"auth\", [\"handleForgotPassword\"]),\r\n\t\t...mapMutations(\"auth\", [\"SET_ALERT_MSG\", \"TOGGLE_IS_LOADING\"]),\r\n\r\n\t\t// adjustErrorMsg(error) {\r\n\t\t// \tlet errorMsg;\r\n\t\t// \tswitch (error) {\r\n\t\t// \t\tcase \"auth/invalid-email\":\r\n\t\t// \t\t\terrorMsg = \"Invalid email\";\r\n\t\t// \t\t\tbreak;\r\n\t\t// \t\tcase \"auth/user-not-found\":\r\n\t\t// \t\t\terrorMsg = \"No account found with this email\";\r\n\t\t// \t\t\tbreak;\r\n\t\t// \t\tcase \"auth/wrong-password\":\r\n\t\t// \t\t\terrorMsg = \"Incorrect password\";\r\n\t\t// \t\t\tbreak;\r\n\t\t// \t\tdefault:\r\n\t\t// \t\t\terrorMsg = \"Email or password was incorrect\";\r\n\t\t// \t\t\tbreak;\r\n\t\t// \t}\r\n\t\t// \treturn errorMsg;\r\n\t\t// },\r\n\r\n\t\tasync tryPasswordReset() {\r\n\t\t\tthis.submitted = true;\r\n\t\t\t// stop here if form is invalid\r\n\t\t\tthis.$v.$touch();\r\n\r\n\t\t\tif (this.$v.$invalid) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthis.TOGGLE_IS_LOADING();\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await this.handleForgotPassword({\r\n\t\t\t\t\t\temail: this.email\r\n\t\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// const errorMsg = this.adjustErrorMsg(error);\r\n\t\t\t\t\tthis.SET_ALERT_MSG({ type: \"error\", title: \"Error\", msg: error });\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.TOGGLE_IS_LOADING();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters(\"auth\", [\"isLoggedIn\"]),\r\n\t},\r\n};\r\n</script>\r\n<template>\r\n\t<div>\r\n\t\t<form class=\"form\" @submit.prevent=\"tryPasswordReset\">\r\n\t\t\t<p>If email exist, a temporary password will be sent</p>\r\n\t\t\t<div class=\"form-field-container\">\r\n\t\t\t\t<label for=\"email\" class=\"form-label\">User email</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\tv-model=\"user.email\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t:class=\"[\r\n\t\t\t\t\t\t'form-input',\r\n\t\t\t\t\t\t{ 'is-invalid ': submitted && !$v.user.email.required },\r\n\t\t\t\t\t]\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-if=\"submitted && !$v.user.email.required\"\r\n\t\t\t\t\tclass=\"invalid-feedback\"\r\n\t\t\t\t>\r\n\t\t\t\t\tUsername is required.\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-else-if=\"submitted && !$v.user.email.email\"\r\n\t\t\t\t\tclass=\"invalid-feedback\"\r\n\t\t\t\t>\r\n\t\t\t\t\tEnter a valid email.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"submit-btn\">\r\n\t\t\t\t<button type=\"submit\" class=\"btn\">Send Reset</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.invalid-feedback {\r\n\tcolor: red;\r\n}\r\n.is-invalid {\r\n\tborder: 1px solid red;\r\n}\r\n.form {\r\n\tmargin: 1em;\r\n\tmin-height: 20em;\r\n}\r\n.form-label {\r\n\tfont: $font-text-bold;\r\n}\r\n.form-input {\r\n\theight: 3em;\r\n\tborder-radius: 5px;\r\n\tpadding-inline: 0.5em;\r\n\tfont: $font-text;\r\n}\r\n.form-field-container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin-bottom: 1em;\r\n\t//  font: $font-text;\r\n}\r\n</style>\r\n"],"mappings":"AACA,SAAAA,QAAA,EAAAC,KAAA;AACA,SAAAC,UAAA,EAAAC,UAAA,EAAAC,YAAA;AAEA;EACAC,KAAA;IACA;MACAJ,KAAA;MACAK,SAAA;IACA;EACA;EACAC,WAAA;IACAN,KAAA;MAAAD,QAAA;MAAAC;IAAA;EACA;EAEAO,OAAA;IACA,GAAAN,UAAA;IACA,GAAAE,YAAA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAAK,iBAAA;MACA,KAAAH,SAAA;MACA;MACA,KAAAI,EAAA,CAAAC,MAAA;MAEA,SAAAD,EAAA,CAAAE,QAAA;QACA;MACA;QACA,KAAAC,iBAAA;QACA;UACA,MAAAC,QAAA,cAAAC,oBAAA;YACAd,KAAA,OAAAA;UACA;QAGA,SAAAe,KAAA;UACA;UACA,KAAAC,aAAA;YAAAC,IAAA;YAAAC,KAAA;YAAAC,GAAA,EAAAJ;UAAA;QACA;UACA,KAAAH,iBAAA;QACA;MACA;IACA;EACA;EACAQ,QAAA;IACA,GAAAlB,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}