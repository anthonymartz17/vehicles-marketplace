{"ast":null,"code":"import apiProfile from \"../../helpers/apiProfile\";\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\nexport default {\n  namespaced: true,\n  state: {\n    profile: {}\n  },\n  mutations: {\n    SET(state, payload) {\n      state.profile = payload;\n    },\n    // CREATE(state, payload) {\n    // \tstate.ads.push(payload);\n    // },\n    UPDATE_PROFILE(state, payload) {\n      Object.assign(state.profile, payload);\n    }\n    // DELETE(state, id) {\n    // \tstate.user = {}\n    // },\n  },\n\n  // getters: {\n  // \tadsList(state) {\n  // \t\tif (state.ads) {\n  // \t\t\treturn state.ads;\n  // \t\t}\n  // \t},\n  // },\n\n  actions: {\n    async fetchProfile({\n      commit\n    }) {\n      // shows loading animation while getting the data\n      // commit(\"SWITCH_LOADING\");\n      try {\n        let data = await apiProfile.getProfile();\n        // fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\n        // let dataUrl = await apiCarsImages.getCarsImages(data);\n        // data.forEach((one) => {\n        // \tlet imagesUrl = dataUrl.find((x) => x.id == one.id).imagesUrl;\n        // \tone.carPicsUrls = imagesUrl;\n        // });\n        commit(\"SET\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async fetchByAuthId(_, authId) {\n      try {\n        let profile = await apiProfile.fetchByAuthId(authId);\n        // let imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\n        // vehicle.carPicsUrls = imagesUrl;\n        return profile;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async createProfile(_, data) {\n      try {\n        await apiProfile.createProfile(data);\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async update({\n      commit\n    }, profileData) {\n      try {\n        let updatedProfile = await apiProfile.updateProfile(profileData);\n        commit(\"UPDATE_PROFILE\", updatedProfile);\n        // let imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\n        // vehicle.carPicsUrls = imagesUrl;\n\n        return updatedProfile;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiProfile","apiCarsImages","namespaced","state","profile","mutations","SET","payload","UPDATE_PROFILE","Object","assign","actions","fetchProfile","commit","data","getProfile","error","fetchByAuthId","_","authId","createProfile","update","profileData","updatedProfile","updateProfile"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/modules/profile.js"],"sourcesContent":["import apiProfile from \"../../helpers/apiProfile\";\r\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\r\n\tstate: {\r\n\t\tprofile: {},\r\n\t},\r\n\tmutations: {\r\n\t\tSET(state, payload) {\r\n\t\t\tstate.profile = payload;\r\n\t\t},\r\n\t\t// CREATE(state, payload) {\r\n\t\t// \tstate.ads.push(payload);\r\n\t\t// },\r\n\t\tUPDATE_PROFILE(state, payload) {\r\n\t\t\tObject.assign(state.profile, payload);\r\n\t\t},\r\n\t\t// DELETE(state, id) {\r\n\t\t// \tstate.user = {}\r\n\t\t// },\r\n\t},\r\n\r\n\t// getters: {\r\n\t// \tadsList(state) {\r\n\t// \t\tif (state.ads) {\r\n\t// \t\t\treturn state.ads;\r\n\t// \t\t}\r\n\t// \t},\r\n\t// },\r\n\r\n\tactions: {\r\n\t\tasync fetchProfile({ commit }) {\r\n\t\t\t// shows loading animation while getting the data\r\n\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiProfile.getProfile();\r\n\t\t\t\t// fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\r\n\t\t\t\t// let dataUrl = await apiCarsImages.getCarsImages(data);\r\n\t\t\t\t// data.forEach((one) => {\r\n\t\t\t\t// \tlet imagesUrl = dataUrl.find((x) => x.id == one.id).imagesUrl;\r\n\t\t\t\t// \tone.carPicsUrls = imagesUrl;\r\n\t\t\t\t// });\r\n\t\t\t\tcommit(\"SET\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync fetchByAuthId(_, authId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet profile = await apiProfile.fetchByAuthId(authId);\r\n\t\t\t\t// let imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\r\n\t\t\t\t// vehicle.carPicsUrls = imagesUrl;\r\n\t\t\t\treturn profile;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync createProfile(_, data) {\r\n\t\t\ttry {\r\n\t\t\t\tawait apiProfile.createProfile(data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync update({ commit }, profileData) {\r\n\t\t\ttry {\r\n\t\t\t\tlet updatedProfile = await apiProfile.updateProfile(profileData);\r\n\t\t\t\tcommit(\"UPDATE_PROFILE\", updatedProfile);\r\n\t\t\t\t// let imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\r\n\t\t\t\t// vehicle.carPicsUrls = imagesUrl;\r\n\r\n\t\t\t\treturn updatedProfile;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,aAAa,MAAM,6BAA6B;AAEvD,eAAe;EACdC,UAAU,EAAE,IAAI;EAEhBC,KAAK,EAAE;IACNC,OAAO,EAAE,CAAC;EACX,CAAC;EACDC,SAAS,EAAE;IACVC,GAAGA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACnBJ,KAAK,CAACC,OAAO,GAAGG,OAAO;IACxB,CAAC;IACD;IACA;IACA;IACAC,cAAcA,CAACL,KAAK,EAAEI,OAAO,EAAE;MAC9BE,MAAM,CAACC,MAAM,CAACP,KAAK,CAACC,OAAO,EAAEG,OAAO,CAAC;IACtC;IACA;IACA;IACA;EACD,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAI,OAAO,EAAE;IACR,MAAMC,YAAYA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC9B;MACA;MACA,IAAI;QACH,IAAIC,IAAI,GAAG,MAAMd,UAAU,CAACe,UAAU,CAAC,CAAC;QACxC;QACA;QACA;QACA;QACA;QACA;QACAF,MAAM,CAAC,KAAK,EAAEC,IAAI,CAAC;QACnB,OAAOA,IAAI;MACZ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ,CAAC,SAAS;QACT;QACA;MAAA;IAEF,CAAC;IAED,MAAMC,aAAaA,CAACC,CAAC,EAAEC,MAAM,EAAE;MAC9B,IAAI;QACH,IAAIf,OAAO,GAAG,MAAMJ,UAAU,CAACiB,aAAa,CAACE,MAAM,CAAC;QACpD;QACA;QACA,OAAOf,OAAO;MACf,CAAC,CAAC,OAAOY,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ,CAAC,SAAS;QACT;QACA;MAAA;IAEF,CAAC;IACD,MAAMI,aAAaA,CAACF,CAAC,EAAEJ,IAAI,EAAE;MAC5B,IAAI;QACH,MAAMd,UAAU,CAACoB,aAAa,CAACN,IAAI,CAAC;MACrC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ,CAAC,SAAS;QACT;QACA;MAAA;IAEF,CAAC;IACD,MAAMK,MAAMA,CAAC;MAAER;IAAO,CAAC,EAAES,WAAW,EAAE;MACrC,IAAI;QACH,IAAIC,cAAc,GAAG,MAAMvB,UAAU,CAACwB,aAAa,CAACF,WAAW,CAAC;QAChET,MAAM,CAAC,gBAAgB,EAAEU,cAAc,CAAC;QACxC;QACA;;QAEA,OAAOA,cAAc;MACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ,CAAC,SAAS;QACT;QACA;MAAA;IAEF;EACD;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}