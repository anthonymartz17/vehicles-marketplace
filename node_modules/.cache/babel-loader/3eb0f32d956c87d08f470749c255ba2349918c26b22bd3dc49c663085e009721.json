{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Your Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAwIN2cWNmZlb_jZBjhHeJVS3UymQAGc4M\",\n  authDomain: \"vehicles-marketplace.firebaseapp.com\",\n  projectId: \"vehicles-marketplace\",\n  storageBucket: \"vehicles-marketplace.appspot.com\",\n  messagingSenderId: \"775154818578\",\n  appId: \"1:775154818578:web:d182643d23d2c6c0d182cb\",\n  measurementId: \"G-5PT2T0VZB5\"\n};\n\n// Import the Firebase SDK and initialize Firebase app\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/storage\");\n\n// Initialize Firebase\nexport default initializeApp(firebaseConfig);\nconst auth = getAuth();\n// collection refference\n// const colRef = collection(db, \"cars\");\n\n// function uploadImages() {\n// \tconst imageContext = require.context(\n// \t\t\"../public/images/cars\",\n// \t\tfalse,\n// \t\t/\\.(png|jpe?g|gif|svg)$/\n// \t);\n// \tconst imageFiles = imageContext.keys().map((key) => key.replace(\"./\", \"\"));\n// \tlet uniqueFilenames = [];\n// \timageFiles.forEach((filename) => {\n// \t\tconst uniqueId = uuidv4();\n// \t\tconst originalImageName = filename.split('.').shift()\n// \t\tconst extension = filename.split(\".\").pop();\n\n// \t\tuniqueFilenames.push(`${originalImageName}_${uniqueId}.${extension}`);\n// \t});\n// \tconsole.log(uniqueFilenames)\n// \tlocalStorage.setItem('imageId',JSON.stringify(uniqueFilenames))\n\n// }\n// uploadImages();\n\n// Now you have an array of file names in the `imageFiles` variable\n// You can use this array to upload the images to Firebase Storage\n\n//get collection data\n\n// getDocs(colRef).then((snapshot) => {\n// \tsnapshot.docs.forEach((one) => {\n// \t\tconsole.log({ ...one.data(), id: one.id });\n// \t});\n// });\n\n// Function to add a car document to Firestore\n\n// const addDealer = async (car) => {\n// \ttry {\n// \t\tconst docRef = await addDoc(colRef, car);\n// \t\tconsole.log(\"Document written with ID: \", docRef.id);\n// \t} catch (error) {\n// \t\tconsole.error(\"Error adding document: \", error);\n// \t}\n// };\n// // // Fetch the JSON file\n// fetch(\"http://localhost:3000/cars\")\n// \t.then((response) => response.json())\n// \t.then((dealersData) => {\n// \t\tdealersData.forEach((dealer) => {\n// \t\t\taddDealer(dealer);\n// \t\t});\n// \t})\n// \t.catch((error) => {\n// \t\tconsole.error(\"Error fetching dealer data:\", error);\n// \t});","map":{"version":3,"names":["initializeApp","getAuth","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","require","auth"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Your Firebase configuration\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyAwIN2cWNmZlb_jZBjhHeJVS3UymQAGc4M\",\r\n\tauthDomain: \"vehicles-marketplace.firebaseapp.com\",\r\n\tprojectId: \"vehicles-marketplace\",\r\n\tstorageBucket: \"vehicles-marketplace.appspot.com\",\r\n\tmessagingSenderId: \"775154818578\",\r\n\tappId: \"1:775154818578:web:d182643d23d2c6c0d182cb\",\r\n\tmeasurementId: \"G-5PT2T0VZB5\",\r\n};\r\n\r\n// Import the Firebase SDK and initialize Firebase app\r\nconst firebase = require(\"firebase/app\");\r\nrequire(\"firebase/storage\");\r\n\r\n// Initialize Firebase\r\nexport default initializeApp(firebaseConfig);\r\n\r\nconst auth = getAuth()\r\n// collection refference\r\n// const colRef = collection(db, \"cars\");\r\n\r\n// function uploadImages() {\r\n// \tconst imageContext = require.context(\r\n// \t\t\"../public/images/cars\",\r\n// \t\tfalse,\r\n// \t\t/\\.(png|jpe?g|gif|svg)$/\r\n// \t);\r\n// \tconst imageFiles = imageContext.keys().map((key) => key.replace(\"./\", \"\"));\r\n// \tlet uniqueFilenames = [];\r\n// \timageFiles.forEach((filename) => {\r\n// \t\tconst uniqueId = uuidv4();\r\n// \t\tconst originalImageName = filename.split('.').shift()\r\n// \t\tconst extension = filename.split(\".\").pop();\r\n\r\n// \t\tuniqueFilenames.push(`${originalImageName}_${uniqueId}.${extension}`);\r\n// \t});\r\n// \tconsole.log(uniqueFilenames)\r\n// \tlocalStorage.setItem('imageId',JSON.stringify(uniqueFilenames))\r\n\r\n// }\r\n// uploadImages();\r\n\r\n// Now you have an array of file names in the `imageFiles` variable\r\n// You can use this array to upload the images to Firebase Storage\r\n\r\n//get collection data\r\n\r\n// getDocs(colRef).then((snapshot) => {\r\n// \tsnapshot.docs.forEach((one) => {\r\n// \t\tconsole.log({ ...one.data(), id: one.id });\r\n// \t});\r\n// });\r\n\r\n// Function to add a car document to Firestore\r\n\r\n// const addDealer = async (car) => {\r\n// \ttry {\r\n// \t\tconst docRef = await addDoc(colRef, car);\r\n// \t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n// \t} catch (error) {\r\n// \t\tconsole.error(\"Error adding document: \", error);\r\n// \t}\r\n// };\r\n// // // Fetch the JSON file\r\n// fetch(\"http://localhost:3000/cars\")\r\n// \t.then((response) => response.json())\r\n// \t.then((dealersData) => {\r\n// \t\tdealersData.forEach((dealer) => {\r\n// \t\t\taddDealer(dealer);\r\n// \t\t});\r\n// \t})\r\n// \t.catch((error) => {\r\n// \t\tconsole.error(\"Error fetching dealer data:\", error);\r\n// \t});\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;;AAEvC;;AAEA;AACA,MAAMC,cAAc,GAAG;EACtBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,sCAAsC;EAClDC,SAAS,EAAE,sBAAsB;EACjCC,aAAa,EAAE,kCAAkC;EACjDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AAChB,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxCA,OAAO,CAAC,kBAAkB,CAAC;;AAE3B;AACA,eAAeX,aAAa,CAACE,cAAc,CAAC;AAE5C,MAAMU,IAAI,GAAGX,OAAO,CAAC,CAAC;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}