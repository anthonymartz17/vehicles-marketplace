{"ast":null,"code":"import { getFirestore, collection, doc, getDoc, getDocs, addDoc, updateDoc } from \"firebase/firestore\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n//initialize service\nconst db = getFirestore();\nexport default {\n  // async getProfile() {\n  //   try {\n\n  //     let data = {}\n  //     const colRef = collection(db, \"dealer\");\n  //     const snapshot = await getDocs(colRef)\n  //     snapshot.docs.forEach(doc => {\n  //       data.push({\n  //         id: doc.id,\n  //         ...doc.data()\n  //       })\n  //     })\n  //     return data\n  //   } catch (error) {\n  //     throw error;\n  //   }\n\n  // },\n  async getProfileById(dealerId) {\n    try {\n      const carDocRef = doc(db, \"dealers\", dealerId);\n      const carDocSnapshot = await getDoc(carDocRef);\n      if (carDocSnapshot.exists()) {\n        return {\n          id: carDocSnapshot.id,\n          ...carDocSnapshot.data()\n        };\n      } else {\n        throw new Error(\"Vehicle not found.\");\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n  async createProfile(data) {\n    try {\n      const colRef = doc(db, \"dealers\");\n      const response = await addDoc(colRef, data);\n      const profile = {\n        id: response.id,\n        ...response.data()\n      };\n      console.log(\"Item created successfully!\");\n      return profile;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async updateProfile(dealerId, updateData) {\n    try {\n      const colRef = doc(db, \"dealers\", dealerId);\n      await updateDoc(colRef, updateData);\n      console.log(\"Item updated successfully!\");\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // async getDealers() {\n  //   try {\n\n  //     let dealersData = []\n  //     const colRef = collection(db, \"dealers\");\n  //     const snapshot = await getDocs(colRef)\n  //     snapshot.docs.forEach(doc => {\n  //       dealersData.push({\n  //         id: doc.id,\n  //         ...doc.data()\n  //       })\n  //     })\n  //     return dealersData\n  //   } catch (error) {\n  //     throw error;\n  //   }\n\n  // },\n  // async getDealerById(dealerId) {\n  //   console.log(dealerId,'el dealer')\n  //   try {\n  //     const dealerDocRef = doc(db, \"dealers\", dealerId);\n  //     const dealerDocSnapshot = await getDoc(dealerDocRef);\n\n  //     if (dealerDocSnapshot.exists()) {\n  //       return {\n  //         id: dealerDocSnapshot.id,\n  //         ...dealerDocSnapshot.data()\n  //       };\n  //     } else {\n  //       throw new Error(\"Dealer not found.\");\n  //     }\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // }\n};\n// collection refference","map":{"version":3,"names":["getFirestore","collection","doc","getDoc","getDocs","addDoc","updateDoc","db","getProfileById","dealerId","carDocRef","carDocSnapshot","exists","id","data","Error","error","createProfile","colRef","response","profile","console","log","updateProfile","updateData"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiProfile.js"],"sourcesContent":["import {\r\n\tgetFirestore,\r\n\tcollection,\r\n\tdoc,\r\n\tgetDoc,\r\n\tgetDocs,\r\n\taddDoc,\r\n\tupdateDoc,\r\n} from \"firebase/firestore\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n//initialize service\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n\t// async getProfile() {\r\n\t//   try {\r\n\r\n\t//     let data = {}\r\n\t//     const colRef = collection(db, \"dealer\");\r\n\t//     const snapshot = await getDocs(colRef)\r\n\t//     snapshot.docs.forEach(doc => {\r\n\t//       data.push({\r\n\t//         id: doc.id,\r\n\t//         ...doc.data()\r\n\t//       })\r\n\t//     })\r\n\t//     return data\r\n\t//   } catch (error) {\r\n\t//     throw error;\r\n\t//   }\r\n\r\n\t// },\r\n\tasync getProfileById(dealerId) {\r\n\t\ttry {\r\n\t\t\tconst carDocRef = doc(db, \"dealers\", dealerId);\r\n\r\n\t\t\tconst carDocSnapshot = await getDoc(carDocRef);\r\n\r\n\t\t\tif (carDocSnapshot.exists()) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: carDocSnapshot.id,\r\n\t\t\t\t\t...carDocSnapshot.data(),\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Vehicle not found.\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\tasync createProfile(data) {\r\n\t\ttry {\r\n\t\t\tconst colRef = doc(db, \"dealers\");\r\n\t\t\tconst response = await addDoc(colRef, data);\r\n      const profile = { id: response.id, ...response.data() };\r\n\t\t\tconsole.log(\"Item created successfully!\");\r\n      return profile\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\tasync updateProfile(dealerId, updateData) {\r\n\t\ttry {\r\n\t\t\tconst colRef = doc(db, \"dealers\", dealerId);\r\n\t\t\tawait updateDoc(colRef, updateData);\r\n\t\t\tconsole.log(\"Item updated successfully!\");\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\r\n\t// async getDealers() {\r\n\t//   try {\r\n\r\n\t//     let dealersData = []\r\n\t//     const colRef = collection(db, \"dealers\");\r\n\t//     const snapshot = await getDocs(colRef)\r\n\t//     snapshot.docs.forEach(doc => {\r\n\t//       dealersData.push({\r\n\t//         id: doc.id,\r\n\t//         ...doc.data()\r\n\t//       })\r\n\t//     })\r\n\t//     return dealersData\r\n\t//   } catch (error) {\r\n\t//     throw error;\r\n\t//   }\r\n\r\n\t// },\r\n\t// async getDealerById(dealerId) {\r\n\t//   console.log(dealerId,'el dealer')\r\n\t//   try {\r\n\t//     const dealerDocRef = doc(db, \"dealers\", dealerId);\r\n\t//     const dealerDocSnapshot = await getDoc(dealerDocRef);\r\n\r\n\t//     if (dealerDocSnapshot.exists()) {\r\n\t//       return {\r\n\t//         id: dealerDocSnapshot.id,\r\n\t//         ...dealerDocSnapshot.data()\r\n\t//       };\r\n\t//     } else {\r\n\t//       throw new Error(\"Dealer not found.\");\r\n\t//     }\r\n\t//   } catch (error) {\r\n\t//     throw error;\r\n\t//   }\r\n\t// }\r\n};\r\n// collection refference\r\n"],"mappings":"AAAA,SACCA,YAAY,EACZC,UAAU,EACVC,GAAG,EACHC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,SAAS,QACH,oBAAoB;AAC3B;;AAEA;AACA,MAAMC,EAAE,GAAGP,YAAY,CAAC,CAAC;AAEzB,eAAe;EACd;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMQ,cAAcA,CAACC,QAAQ,EAAE;IAC9B,IAAI;MACH,MAAMC,SAAS,GAAGR,GAAG,CAACK,EAAE,EAAE,SAAS,EAAEE,QAAQ,CAAC;MAE9C,MAAME,cAAc,GAAG,MAAMR,MAAM,CAACO,SAAS,CAAC;MAE9C,IAAIC,cAAc,CAACC,MAAM,CAAC,CAAC,EAAE;QAC5B,OAAO;UACNC,EAAE,EAAEF,cAAc,CAACE,EAAE;UACrB,GAAGF,cAAc,CAACG,IAAI,CAAC;QACxB,CAAC;MACF,CAAC,MAAM;QACN,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACtC;IACD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD,CAAC;EACD,MAAMC,aAAaA,CAACH,IAAI,EAAE;IACzB,IAAI;MACH,MAAMI,MAAM,GAAGhB,GAAG,CAACK,EAAE,EAAE,SAAS,CAAC;MACjC,MAAMY,QAAQ,GAAG,MAAMd,MAAM,CAACa,MAAM,EAAEJ,IAAI,CAAC;MACxC,MAAMM,OAAO,GAAG;QAAEP,EAAE,EAAEM,QAAQ,CAACN,EAAE;QAAE,GAAGM,QAAQ,CAACL,IAAI,CAAC;MAAE,CAAC;MAC1DO,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACtC,OAAOF,OAAO;IAClB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD,CAAC;EACD,MAAMO,aAAaA,CAACd,QAAQ,EAAEe,UAAU,EAAE;IACzC,IAAI;MACH,MAAMN,MAAM,GAAGhB,GAAG,CAACK,EAAE,EAAE,SAAS,EAAEE,QAAQ,CAAC;MAC3C,MAAMH,SAAS,CAACY,MAAM,EAAEM,UAAU,CAAC;MACnCH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC1C,CAAC,CAAC,OAAON,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAAC;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}