{"ast":null,"code":"import { required } from \"vuelidate/lib/validators\";\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      user: {},\n      submitted: false\n    };\n  },\n  validations: {\n    user: {\n      username: {\n        required\n      },\n      password: {\n        required\n      }\n    }\n  },\n  methods: {\n    ...mapActions(\"auth\", [\"signIn\"]),\n    async tryToLogIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      } else {\n        try {\n          let user = await this.$store.dispatch(\"auth/signIn\", {\n            username: this.user.username,\n            password: this.user.password\n          });\n          if (Object.keys(userData).length == 0) {\n            let response = await ApiUser.createUser({\n              user_name: this.user.user_name,\n              email: user.attributes.email,\n              cog_id: cog_id,\n              Confirmed: 1\n            });\n            console.log(response, \"after created\");\n            allowed = true;\n          } else {\n            if (userData.active == 1 && userData.Confirmed == 1) {\n              allowed = true;\n            }\n          }\n          if (allowed) {\n            this.$router.replace({\n              name: \"dashboard\"\n            });\n          } else {\n            this.$store.dispatch(\"auth/signOut\");\n            this.$store.commit(\"auth/ALERT\", {\n              isSuccess: false,\n              isError: true,\n              alertMsg: \"account may be cancelled, unconfirmed, or it doesn't exist\"\n            });\n          }\n        } catch (error) {\n          this.$store.commit(\"auth/ALERT\", {\n            isSuccess: false,\n            isError: true,\n            alertMsg: error\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["required","mapActions","data","user","submitted","validations","username","password","methods","tryToLogIn","$v","$touch","$invalid","$store","dispatch","Object","keys","userData","length","response","ApiUser","createUser","user_name","email","attributes","cog_id","Confirmed","console","log","allowed","active","$router","replace","name","commit","isSuccess","isError","alertMsg","error"],"sources":["src/views/authentication/login-page.vue"],"sourcesContent":["<script>\r\nimport { required } from \"vuelidate/lib/validators\";\r\nimport { mapActions } from 'vuex';\r\n\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tuser: {},\r\n\t\t\tsubmitted: false,\r\n\t\t};\r\n\t},\r\n\tvalidations: {\r\n\t\tuser: {\r\n\t\t\tusername: { required },\r\n\t\t\tpassword: { required },\r\n\t\t},\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions(\"auth\", [\"signIn\"]),\r\n\t\t\r\n\t\tasync tryToLogIn() {\r\n\t\t\tthis.submitted = true;\r\n\t\t\t// stop here if form is invalid\r\n\t\t\tthis.$v.$touch();\r\n\r\n\t\t\tif (this.$v.$invalid) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet user = await this.$store.dispatch(\"auth/signIn\", {\r\n\t\t\t\t\t\tusername: this.user.username,\r\n\t\t\t\t\t\tpassword: this.user.password,\r\n\t\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\tif (Object.keys(userData).length == 0) {\r\n\t\t\t\t\t\tlet response = await ApiUser.createUser({\r\n\t\t\t\t\t\t\tuser_name: this.user.user_name,\r\n\t\t\t\t\t\t\temail: user.attributes.email,\r\n\t\t\t\t\t\t\tcog_id: cog_id,\r\n\t\t\t\t\t\t\tConfirmed: 1,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(response, \"after created\");\r\n\t\t\t\t\t\tallowed = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (userData.active == 1 && userData.Confirmed == 1) {\r\n\t\t\t\t\t\t\tallowed = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (allowed) {\r\n\t\t\t\t\t\tthis.$router.replace({ name: \"dashboard\" });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$store.dispatch(\"auth/signOut\");\r\n\t\t\t\t\t\tthis.$store.commit(\"auth/ALERT\", {\r\n\t\t\t\t\t\t\tisSuccess: false,\r\n\t\t\t\t\t\t\tisError: true,\r\n\t\t\t\t\t\t\talertMsg:\r\n\t\t\t\t\t\t\t\t\"account may be cancelled, unconfirmed, or it doesn't exist\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tthis.$store.commit(\"auth/ALERT\", {\r\n\t\t\t\t\t\tisSuccess: false,\r\n\t\t\t\t\t\tisError: true,\r\n\t\t\t\t\t\talertMsg: error,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n<template>\r\n\t<div>\r\n\t\t<form class=\"form\" @submit.prevent=\"tryToLogIn\">\r\n\t\t\t<div class=\"form-field-container\">\r\n\t\t\t\t<label for=\"username\" class=\"form-label\">User Name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"username-1\"\r\n\t\t\t\t\tv-model=\"user.username\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Enter username\"\r\n\t\t\t\t\t:class=\"[\r\n\t\t\t\t\t\t'form-input',\r\n\t\t\t\t\t\t{ 'is-invalid ': submitted && !$v.user.username.required },\r\n\t\t\t\t\t]\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tv-if=\"submitted && !$v.user.username.required\"\r\n\t\t\t\t\tclass=\"invalid-feedback\"\r\n\t\t\t\t>\r\n\t\t\t\t\tUsername is required.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"form-field-container\">\r\n\t\t\t\t<label for=\"input-2\" class=\"form-label\">Password</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"input-2\"\r\n\t\t\t\t\tv-model=\"user.password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t:class=\"[\r\n\t\t\t\t\t\t'form-input',\r\n\t\t\t\t\t\t{ 'is-invalid': submitted && !$v.user.password.required },\r\n\t\t\t\t\t]\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div v-if=\"submitted && !$v.user.password.required\" class=\"invalid-feedback\">\r\n\t\t\t\t\tPassword is required.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- <div class=\"form-check mb-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclass=\"form-check-input\"\r\n\t\t\t\t\tid=\"customControlInline\"\r\n\t\t\t\t\tname=\"checkbox-1\"\r\n\t\t\t\t\tvalue=\"accepted\"\r\n\t\t\t\t\t:unchecked-value=\"not_accepted\"\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label class=\"form-check-label\" for=\"customControlInline\">\r\n\t\t\t\t\tRemember me\r\n\t\t\t\t</label>\r\n\t\t\t</div> -->\r\n\t\t\t<div class=\"submit-btn\">\r\n\t\t\t\t<button type=\"submit\" class=\"btn\">Login</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.invalid-feedback {\r\n\tcolor: red;\r\n}\r\n.is-invalid {\r\n\tborder: 1px solid red;\r\n}\r\n.form {\r\n\tmargin: 1em;\r\n\tmin-height: 20em;\r\n}\r\n.form-label {\r\n\tfont: $font-text-bold;\r\n}\r\n.form-input {\r\n\theight: 3em;\r\n\tborder-radius: 5px;\r\n\tpadding-inline: 0.5em;\r\n\tfont: $font-text;\r\n}\r\n.form-field-container {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin-bottom: 1em;\r\n\t//  font: $font-text;\r\n}\r\n</style>\r\n"],"mappings":"AACA,SAAAA,QAAA;AACA,SAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,SAAA;IACA;EACA;EACAC,WAAA;IACAF,IAAA;MACAG,QAAA;QAAAN;MAAA;MACAO,QAAA;QAAAP;MAAA;IACA;EACA;EACAQ,OAAA;IACA,GAAAP,UAAA;IAEA,MAAAQ,WAAA;MACA,KAAAL,SAAA;MACA;MACA,KAAAM,EAAA,CAAAC,MAAA;MAEA,SAAAD,EAAA,CAAAE,QAAA;QACA;MACA;QACA;UACA,IAAAT,IAAA,cAAAU,MAAA,CAAAC,QAAA;YACAR,QAAA,OAAAH,IAAA,CAAAG,QAAA;YACAC,QAAA,OAAAJ,IAAA,CAAAI;UACA;UAEA,IAAAQ,MAAA,CAAAC,IAAA,CAAAC,QAAA,EAAAC,MAAA;YACA,IAAAC,QAAA,SAAAC,OAAA,CAAAC,UAAA;cACAC,SAAA,OAAAnB,IAAA,CAAAmB,SAAA;cACAC,KAAA,EAAApB,IAAA,CAAAqB,UAAA,CAAAD,KAAA;cACAE,MAAA,EAAAA,MAAA;cACAC,SAAA;YACA;YACAC,OAAA,CAAAC,GAAA,CAAAT,QAAA;YACAU,OAAA;UACA;YACA,IAAAZ,QAAA,CAAAa,MAAA,SAAAb,QAAA,CAAAS,SAAA;cACAG,OAAA;YACA;UACA;UACA,IAAAA,OAAA;YACA,KAAAE,OAAA,CAAAC,OAAA;cAAAC,IAAA;YAAA;UACA;YACA,KAAApB,MAAA,CAAAC,QAAA;YACA,KAAAD,MAAA,CAAAqB,MAAA;cACAC,SAAA;cACAC,OAAA;cACAC,QAAA,EACA;YACA;UACA;QACA,SAAAC,KAAA;UACA,KAAAzB,MAAA,CAAAqB,MAAA;YACAC,SAAA;YACAC,OAAA;YACAC,QAAA,EAAAC;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}