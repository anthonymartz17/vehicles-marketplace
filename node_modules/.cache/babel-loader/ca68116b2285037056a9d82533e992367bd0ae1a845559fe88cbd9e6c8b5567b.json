{"ast":null,"code":"import { getFirestore, collection, doc, getDoc, getDocs, addDoc, updateDoc, query, where } from \"firebase/firestore\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n//initialize service\nconst db = getFirestore();\nexport default {\n  // async getProfile() {\n  //   try {\n\n  //     let data = {}\n  //     const colRef = collection(db, \"dealer\");\n  //     const snapshot = await getDocs(colRef)\n  //     snapshot.docs.forEach(doc => {\n  //       data.push({\n  //         id: doc.id,\n  //         ...doc.data()\n  //       })\n  //     })\n  //     return data\n  //   } catch (error) {\n  //     throw error;\n  //   }\n\n  // },\n  async getProfileById(dealerId) {\n    try {\n      const carDocRef = doc(db, \"dealers\", dealerId);\n      const carDocSnapshot = await getDoc(carDocRef);\n      if (carDocSnapshot.exists()) {\n        return {\n          id: carDocSnapshot.id,\n          ...carDocSnapshot.data()\n        };\n      } else {\n        throw new Error(\"Profile not found.\");\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n  async getByAuthId(authId) {\n    try {\n      const colRef = collection(db, \"dealers\");\n      const q = query(colRef, where(\"auth_id\", \"==\", authId));\n      const snapshot = await getDocs(q);\n      const data = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async createProfile(data) {\n    try {\n      const colRef = collection(db, \"dealers\");\n      const response = await addDoc(colRef, data);\n      return response;\n\n      // return profile\n    } catch (error) {\n      throw error;\n    }\n  },\n  async updateProfile({\n    dealerId,\n    profileData\n  }) {\n    try {\n      const colRef = doc(db, \"dealers\", dealerId);\n      console.log(colRef, \"elred\");\n      //updateDoc returns undefined after successfully updating, it s intended behaviour\n      await updateDoc(colRef, profileData);\n      const updatedDocSnapshot = await getDoc(colRef);\n      const updatedData = updatedDocSnapshot.data();\n      console.log(test, \"Item updated successfully!\");\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // async getDealers() {\n  //   try {\n\n  //     let dealersData = []\n  //     const colRef = collection(db, \"dealers\");\n  //     const snapshot = await getDocs(colRef)\n  //     snapshot.docs.forEach(doc => {\n  //       dealersData.push({\n  //         id: doc.id,\n  //         ...doc.data()\n  //       })\n  //     })\n  //     return dealersData\n  //   } catch (error) {\n  //     throw error;\n  //   }\n\n  // },\n  // async getDealerById(dealerId) {\n  //   console.log(dealerId,'el dealer')\n  //   try {\n  //     const dealerDocRef = doc(db, \"dealers\", dealerId);\n  //     const dealerDocSnapshot = await getDoc(dealerDocRef);\n\n  //     if (dealerDocSnapshot.exists()) {\n  //       return {\n  //         id: dealerDocSnapshot.id,\n  //         ...dealerDocSnapshot.data()\n  //       };\n  //     } else {\n  //       throw new Error(\"Dealer not found.\");\n  //     }\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // }\n};\n// collection refference","map":{"version":3,"names":["getFirestore","collection","doc","getDoc","getDocs","addDoc","updateDoc","query","where","db","getProfileById","dealerId","carDocRef","carDocSnapshot","exists","id","data","Error","error","getByAuthId","authId","colRef","q","snapshot","docs","map","createProfile","response","updateProfile","profileData","console","log","updatedDocSnapshot","updatedData","test"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiProfile.js"],"sourcesContent":["import {\r\n\tgetFirestore,\r\n\tcollection,\r\n\tdoc,\r\n\tgetDoc,\r\n\tgetDocs,\r\n\taddDoc,\r\n\tupdateDoc,\r\n\tquery,\r\n\twhere,\r\n} from \"firebase/firestore\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n//initialize service\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n\t// async getProfile() {\r\n\t//   try {\r\n\r\n\t//     let data = {}\r\n\t//     const colRef = collection(db, \"dealer\");\r\n\t//     const snapshot = await getDocs(colRef)\r\n\t//     snapshot.docs.forEach(doc => {\r\n\t//       data.push({\r\n\t//         id: doc.id,\r\n\t//         ...doc.data()\r\n\t//       })\r\n\t//     })\r\n\t//     return data\r\n\t//   } catch (error) {\r\n\t//     throw error;\r\n\t//   }\r\n\r\n\t// },\r\n\tasync getProfileById(dealerId) {\r\n\t\ttry {\r\n\t\t\tconst carDocRef = doc(db, \"dealers\", dealerId);\r\n\r\n\t\t\tconst carDocSnapshot = await getDoc(carDocRef);\r\n\r\n\t\t\tif (carDocSnapshot.exists()) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: carDocSnapshot.id,\r\n\t\t\t\t\t...carDocSnapshot.data(),\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Profile not found.\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\tasync getByAuthId(authId) {\r\n\t\ttry {\r\n\t\t\tconst colRef = collection(db, \"dealers\");\r\n\t\t\tconst q = query(colRef, where(\"auth_id\", \"==\", authId));\r\n\t\t\tconst snapshot = await getDocs(q);\r\n\t\t\tconst data = snapshot.docs.map((doc) => ({\r\n\t\t\t\tid: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\tasync createProfile(data) {\r\n\t\ttry {\r\n\t\t\tconst colRef = collection(db, \"dealers\");\r\n\t\t\tconst response = await addDoc(colRef, data);\r\n\r\n\t\t\treturn response;\r\n\r\n\t\t\t// return profile\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\tasync updateProfile({ dealerId, profileData }) {\r\n\t\ttry {\r\n\t\t\tconst colRef = doc(db, \"dealers\", dealerId);\r\n\t\t\tconsole.log(colRef, \"elred\");\r\n\t\t\t//updateDoc returns undefined after successfully updating, it s intended behaviour\r\n\t\t\tawait updateDoc(colRef, profileData);\r\n\t\t\tconst updatedDocSnapshot = await getDoc(colRef);\r\n    const updatedData = updatedDocSnapshot.data();\r\n\t\t\tconsole.log(test, \"Item updated successfully!\");\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\r\n\t// async getDealers() {\r\n\t//   try {\r\n\r\n\t//     let dealersData = []\r\n\t//     const colRef = collection(db, \"dealers\");\r\n\t//     const snapshot = await getDocs(colRef)\r\n\t//     snapshot.docs.forEach(doc => {\r\n\t//       dealersData.push({\r\n\t//         id: doc.id,\r\n\t//         ...doc.data()\r\n\t//       })\r\n\t//     })\r\n\t//     return dealersData\r\n\t//   } catch (error) {\r\n\t//     throw error;\r\n\t//   }\r\n\r\n\t// },\r\n\t// async getDealerById(dealerId) {\r\n\t//   console.log(dealerId,'el dealer')\r\n\t//   try {\r\n\t//     const dealerDocRef = doc(db, \"dealers\", dealerId);\r\n\t//     const dealerDocSnapshot = await getDoc(dealerDocRef);\r\n\r\n\t//     if (dealerDocSnapshot.exists()) {\r\n\t//       return {\r\n\t//         id: dealerDocSnapshot.id,\r\n\t//         ...dealerDocSnapshot.data()\r\n\t//       };\r\n\t//     } else {\r\n\t//       throw new Error(\"Dealer not found.\");\r\n\t//     }\r\n\t//   } catch (error) {\r\n\t//     throw error;\r\n\t//   }\r\n\t// }\r\n};\r\n// collection refference\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}