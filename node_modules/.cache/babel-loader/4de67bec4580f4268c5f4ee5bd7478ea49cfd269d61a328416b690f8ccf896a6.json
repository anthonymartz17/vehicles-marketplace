{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\n// Create a reference to the storage service\nconst storage = getStorage();\n\n// Retrieve the image URL from Firebase Firestore or Realtime Database\n\nexport default {\n  async getCarsImages(data) {\n    const carsImages = [];\n    const urlList = [];\n    try {\n      data.forEach(one => {\n        const {\n          id,\n          pics\n        } = one;\n        pics.forEach(pic => {\n          const imageRef = ref(storage, pic);\n          getDownloadURL(imageRef).then(url => {\n            urlList.push(url);\n            console.log(urlList);\n          }).catch(error => {\n            // Handle any errors that occurred during fetching the image\n            console.error(\"Error fetching image:\", error);\n          });\n        });\n        console.log(urlList, 'eieie');\n        carsImages.push({\n          carId: id,\n          carImagesUrl: urlList\n        });\n      });\n      return carsImages;\n    } catch (error) {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["getStorage","ref","getDownloadURL","storage","getCarsImages","data","carsImages","urlList","forEach","one","id","pics","pic","imageRef","then","url","push","console","log","catch","error","carId","carImagesUrl"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiCarsImages.js"],"sourcesContent":["import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n// Create a reference to the storage service\r\nconst storage = getStorage();\r\n\r\n// Retrieve the image URL from Firebase Firestore or Realtime Database\r\n\r\nexport default {\r\n\tasync getCarsImages(data) {\r\n\t\r\n\t\tconst carsImages = [];\r\n\t\tconst urlList = [];\r\n\t\ttry {\r\n\r\n\t\t\tdata.forEach((one) => {\r\n\t\t\t\tconst { id, pics } = one;\r\n\t\t\t\tpics.forEach((pic) => {\r\n\t\t\t\t\tconst imageRef = ref(storage, pic);\r\n\r\n\t\t\t\t\tgetDownloadURL(imageRef)\r\n\t\t\t\t\t.then((url) => {\r\n\t\t\t\t\t\turlList.push(url);\r\n\t\t\t\t\t\tconsole.log(urlList)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t// Handle any errors that occurred during fetching the image\r\n\t\t\t\t\t\t\tconsole.error(\"Error fetching image:\", error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconsole.log(urlList,'eieie')\r\n\t\t\t\tcarsImages.push({ carId: id, carImagesUrl: urlList });\r\n\t\t\t});\r\n\r\n\t\t\treturn carsImages;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n};\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;;AAElE;AACA,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;;AAE5B;;AAEA,eAAe;EACd,MAAMI,aAAaA,CAACC,IAAI,EAAE;IAEzB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,OAAO,GAAG,EAAE;IAClB,IAAI;MAEHF,IAAI,CAACG,OAAO,CAAEC,GAAG,IAAK;QACrB,MAAM;UAAEC,EAAE;UAAEC;QAAK,CAAC,GAAGF,GAAG;QACxBE,IAAI,CAACH,OAAO,CAAEI,GAAG,IAAK;UACrB,MAAMC,QAAQ,GAAGZ,GAAG,CAACE,OAAO,EAAES,GAAG,CAAC;UAElCV,cAAc,CAACW,QAAQ,CAAC,CACvBC,IAAI,CAAEC,GAAG,IAAK;YACdR,OAAO,CAACS,IAAI,CAACD,GAAG,CAAC;YACjBE,OAAO,CAACC,GAAG,CAACX,OAAO,CAAC;UACpB,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAK;YACjB;YACAH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC9C,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFH,OAAO,CAACC,GAAG,CAACX,OAAO,EAAC,OAAO,CAAC;QAC5BD,UAAU,CAACU,IAAI,CAAC;UAAEK,KAAK,EAAEX,EAAE;UAAEY,YAAY,EAAEf;QAAQ,CAAC,CAAC;MACtD,CAAC,CAAC;MAEF,OAAOD,UAAU;IAClB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}