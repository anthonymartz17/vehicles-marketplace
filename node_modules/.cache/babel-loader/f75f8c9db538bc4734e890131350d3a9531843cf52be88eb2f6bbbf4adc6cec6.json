{"ast":null,"code":"import apiVehicles from \"../../helpers/apiVehicles\";\nexport default {\n  namespaced: true,\n  state: {\n    vehicles: []\n    // dealers: [],\n  },\n\n  mutations: {\n    SETCARS(state, payload) {\n      state.cars = payload;\n    }\n\n    // SETDEALERS(state, payload) {\n    // \tstate.dealers = payload;\n    // },\n\n    // SWITCH_LOADING(state) {\n    // \tstate.isLoading = !state.isLoading;\n    // },\n  },\n\n  getters: {\n    carsList(state) {\n      if (state.vehicles) {\n        return state.cars;\n      }\n    }\n  },\n  actions: {\n    async fetchCars({\n      commit,\n      state\n    }) {\n      // shows loading animation while getting the data\n      // commit(\"SWITCH_LOADING\");\n      try {\n        let data = await apiVehicles.getCars();\n        commit(\"SETCARS\", data);\n        console.log(state.cars, \"from state\");\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async create({\n      commit\n    }, {\n      agencyData,\n      countryName,\n      userName\n    }) {\n      try {\n        let data = await ApiAgency.createAgency(agencyData);\n        data.country_name = countryName;\n        data.user_name = userName;\n        commit(\"CREATE\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async fetchById(_, agencyId) {\n      // app status: loading\n      try {\n        let data = await ApiAgency.getAgencyById(agencyId);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n      // app status: ready\n    },\n\n    async update({\n      commit\n    }, {\n      agencyData,\n      countryName,\n      userName\n    }) {\n      // app status:  loading\n      try {\n        let data = await ApiAgency.updateAgency(agencyData);\n        data.country_name = countryName;\n        data.user_name = userName;\n        commit(\"UPDATE\", data);\n        // app status: ready\n      } catch (error) {\n        throw error;\n      }\n    },\n    async delete({\n      commit\n    }, id) {\n      try {\n        let data = await ApiAgency.deleteAgency(id);\n        commit(\"DELETE\", id);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiVehicles","namespaced","state","vehicles","mutations","SETCARS","payload","cars","getters","carsList","actions","fetchCars","commit","data","getCars","console","log","error","create","agencyData","countryName","userName","ApiAgency","createAgency","country_name","user_name","fetchById","_","agencyId","getAgencyById","update","updateAgency","delete","id","deleteAgency"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/modules/vehicles.js"],"sourcesContent":["import apiVehicles from \"../../helpers/apiVehicles\";\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate: {\r\n\t\tvehicles: [],\r\n\t\t// dealers: [],\r\n\t},\r\n\tmutations: {\r\n\t\tSETCARS(state, payload) {\r\n\t\t\tstate.cars = payload;\r\n\t\t},\r\n\r\n\t\t// SETDEALERS(state, payload) {\r\n\t\t// \tstate.dealers = payload;\r\n\t\t// },\r\n\r\n\t\t// SWITCH_LOADING(state) {\r\n\t\t// \tstate.isLoading = !state.isLoading;\r\n\t\t// },\r\n\t},\r\n\r\n\tgetters: {\r\n\t\tcarsList(state) {\r\n\t\t\tif (state.vehicles) {\r\n\t\t\t\treturn state.cars;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tactions: {\r\n\t\tasync fetchCars({ commit, state }) {\r\n\t\t\t// shows loading animation while getting the data\r\n\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiVehicles.getCars();\r\n\t\t\t\tcommit(\"SETCARS\", data);\r\n\t\t\t\tconsole.log(state.cars, \"from state\");\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync create({ commit }, { agencyData, countryName, userName }) {\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.createAgency(agencyData);\r\n\t\t\t\tdata.country_name = countryName;\r\n\t\t\t\tdata.user_name = userName;\r\n\t\t\t\tcommit(\"CREATE\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync fetchById(_, agencyId) {\r\n\t\t\t// app status: loading\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.getAgencyById(agencyId);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t\t// app status: ready\r\n\t\t},\r\n\r\n\t\tasync update({ commit }, { agencyData, countryName, userName }) {\r\n\t\t\t// app status:  loading\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.updateAgency(agencyData);\r\n\t\t\t\tdata.country_name = countryName;\r\n\t\t\t\tdata.user_name = userName;\r\n\t\t\t\tcommit(\"UPDATE\", data);\r\n\t\t\t\t// app status: ready\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync delete({ commit }, id) {\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.deleteAgency(id);\r\n\t\t\t\tcommit(\"DELETE\", id);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,2BAA2B;AAEnD,eAAe;EACdC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACNC,QAAQ,EAAE;IACV;EACD,CAAC;;EACDC,SAAS,EAAE;IACVC,OAAOA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACvBJ,KAAK,CAACK,IAAI,GAAGD,OAAO;IACrB;;IAEA;IACA;IACA;;IAEA;IACA;IACA;EACD,CAAC;;EAEDE,OAAO,EAAE;IACRC,QAAQA,CAACP,KAAK,EAAE;MACf,IAAIA,KAAK,CAACC,QAAQ,EAAE;QACnB,OAAOD,KAAK,CAACK,IAAI;MAClB;IACD;EACD,CAAC;EAEDG,OAAO,EAAE;IACR,MAAMC,SAASA,CAAC;MAAEC,MAAM;MAAEV;IAAM,CAAC,EAAE;MAClC;MACA;MACA,IAAI;QACH,IAAIW,IAAI,GAAG,MAAMb,WAAW,CAACc,OAAO,CAAC,CAAC;QACtCF,MAAM,CAAC,SAAS,EAAEC,IAAI,CAAC;QACvBE,OAAO,CAACC,GAAG,CAACd,KAAK,CAACK,IAAI,EAAE,YAAY,CAAC;MACtC,CAAC,CAAC,OAAOU,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ,CAAC,SAAS;QACT;QACA;MAAA;IAEF,CAAC;IAED,MAAMC,MAAMA,CAAC;MAAEN;IAAO,CAAC,EAAE;MAAEO,UAAU;MAAEC,WAAW;MAAEC;IAAS,CAAC,EAAE;MAC/D,IAAI;QACH,IAAIR,IAAI,GAAG,MAAMS,SAAS,CAACC,YAAY,CAACJ,UAAU,CAAC;QACnDN,IAAI,CAACW,YAAY,GAAGJ,WAAW;QAC/BP,IAAI,CAACY,SAAS,GAAGJ,QAAQ;QACzBT,MAAM,CAAC,QAAQ,EAAEC,IAAI,CAAC;QACtB,OAAOA,IAAI;MACZ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ;IACD,CAAC;IAED,MAAMS,SAASA,CAACC,CAAC,EAAEC,QAAQ,EAAE;MAC5B;MACA,IAAI;QACH,IAAIf,IAAI,GAAG,MAAMS,SAAS,CAACO,aAAa,CAACD,QAAQ,CAAC;QAClD,OAAOf,IAAI;MACZ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ;MACA;IACD,CAAC;;IAED,MAAMa,MAAMA,CAAC;MAAElB;IAAO,CAAC,EAAE;MAAEO,UAAU;MAAEC,WAAW;MAAEC;IAAS,CAAC,EAAE;MAC/D;MACA,IAAI;QACH,IAAIR,IAAI,GAAG,MAAMS,SAAS,CAACS,YAAY,CAACZ,UAAU,CAAC;QACnDN,IAAI,CAACW,YAAY,GAAGJ,WAAW;QAC/BP,IAAI,CAACY,SAAS,GAAGJ,QAAQ;QACzBT,MAAM,CAAC,QAAQ,EAAEC,IAAI,CAAC;QACtB;MACD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ;IACD,CAAC;IACD,MAAMe,MAAMA,CAAC;MAAEpB;IAAO,CAAC,EAAEqB,EAAE,EAAE;MAC5B,IAAI;QACH,IAAIpB,IAAI,GAAG,MAAMS,SAAS,CAACY,YAAY,CAACD,EAAE,CAAC;QAC3CrB,MAAM,CAAC,QAAQ,EAAEqB,EAAE,CAAC;QACpB,OAAOpB,IAAI;MACZ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ;IACD;EACD;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}