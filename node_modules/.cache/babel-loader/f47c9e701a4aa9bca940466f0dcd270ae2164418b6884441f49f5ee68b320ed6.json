{"ast":null,"code":"import { mapState, mapMutations } from \"vuex\";\nexport default {\n  methods: {\n    ...mapMutations(\"auth\", [\"SET_ALERT_MSG\"]),\n    emitLogin() {\n      this.$emit(\"CheckLoginOptionEvent\", \"login\");\n      //reset alert\n      this.SET_ALERT_MSG(null);\n    }\n  },\n  computed: {\n    ...mapState(\"auth\", [\"alert\"]),\n    headerBg() {\n      return this.alert.type == \"success\" ? {\n        \"success-alert\": true\n      } : {\n        \"error-alert\": true\n      };\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapMutations","methods","emitLogin","$emit","SET_ALERT_MSG","computed","headerBg","alert","type"],"sources":["src/components/utilities/alert-msg.vue"],"sourcesContent":["<script>\r\nimport {mapState, mapMutations } from \"vuex\";\r\nexport default {\r\n\tmethods: {\r\n\t\t...mapMutations(\"auth\", [\"SET_ALERT_MSG\"]),\r\n\t\temitLogin() {\r\n\t\t\tthis.$emit(\"CheckLoginOptionEvent\", \"login\");\r\n\t\t\t//reset alert\r\n\t\t\tthis.SET_ALERT_MSG(null);\r\n\t\t},\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\t...mapState(\"auth\",[\"alert\"]),\r\n\t\theaderBg() {\r\n\t\t\treturn this.alert.type == \"success\"\r\n\t\t\t\t? { \"success-alert\": true }\r\n\t\t\t\t: { \"error-alert\": true };\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n<template>\r\n\t<div @click=\"emitLogin()\" class=\"successful\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div :class=\"['card-header', headerBg]\">\r\n\t\t\t\t<h3 class=\"sub-title text-light\">{{ alert.title }}</h3>\r\n\t\t\t\t<h3 @click=\"emitLogin()\" class=\"sub-title text-light close\">X</h3>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<p >{{ alert.msg }}</p>\r\n\t\t\t\t<button class=\"card-btn\" v-show=\"alert.type == 'success'\" @click=\"emitLogin\">\r\n\t\t\t\t\tLogin now!!\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.successful {\r\n\tposition: absolute;\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\tbackground: rgba(5, 5, 5, 0.438);\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tz-index: 100;\r\n}\r\n.card {\r\n\tbackground: $light;\r\n\tmargin-bottom: 20em;\r\n\twidth: 20em;\r\n\tmin-height: 13em;\r\n\tborder-radius: 5px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n}\r\n.card-header {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 0.5em;\r\n}\r\n.success-alert {\r\n\tbackground: $success;\r\n}\r\n.error-alert {\r\n\tbackground: $primary;\r\n}\r\n.card-btn {\r\n\tfont: $font-text-bold;\r\n\tcolor: $lightDark;\r\n\tpadding: 0.5em 1em;\r\n\tcursor: pointer;\r\n}\r\n.card-body {\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\tgap: 1em;\r\n\tfont: $font-text-bold;\r\n\tcolor: $lightDark;\r\n\tmargin-block: 1em;\r\n}\r\n.close {\r\n\tcursor: pointer;\r\n}\r\n.card {\r\n\t@include breakpoint(tablet) {\r\n\t\twidth: 60%;\r\n\t\t.custom-btn {\r\n\t\t\twidth: 50%;\r\n\t\t}\r\n\t}\r\n\t@include breakpoint(desktop) {\r\n\t\twidth: 30%;\r\n\t\t.custom-btn {\r\n\t\t\twidth: 30%;\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n"],"mappings":"AACA,SAAAA,QAAA,EAAAC,YAAA;AACA;EACAC,OAAA;IACA,GAAAD,YAAA;IACAE,UAAA;MACA,KAAAC,KAAA;MACA;MACA,KAAAC,aAAA;IACA;EACA;EAEAC,QAAA;IACA,GAAAN,QAAA;IACAO,SAAA;MACA,YAAAC,KAAA,CAAAC,IAAA,gBACA;QAAA;MAAA,IACA;QAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}