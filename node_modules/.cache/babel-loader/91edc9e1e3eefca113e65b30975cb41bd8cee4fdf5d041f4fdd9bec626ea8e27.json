{"ast":null,"code":"import apiVehicles from \"../../helpers/apiVehicles\";\nexport default {\n  namespaced: true,\n  state: {\n    vehicles: [],\n    filters: {\n      make: \"\",\n      models: \"\",\n      priceFrom: 0,\n      priceTo: 0,\n      yearFrom: 0,\n      yearTo: 0,\n      carType: \"\",\n      carCondition: \"\",\n      fuel: \"\",\n      transmission: \"\",\n      driveTrain: \"\",\n      mileage: \"\",\n      engine: \"\",\n      color: \"\"\n    }\n  },\n  mutations: {\n    SETCARS(state, payload) {\n      state.vehicles = payload;\n    },\n    UPDATE_FILTERS(state, payload) {\n      state.filters = {\n        ...state.filters,\n        ...payload\n      };\n    }\n    // SETDEALERS(state, payload) {\n    // \tstate.dealers = payload;\n    // },\n\n    // SWITCH_LOADING(state) {\n    // \tstate.isLoading = !state.isLoading;\n    // },\n  },\n\n  getters: {\n    fileredVehilces(state) {\n      if (state.vehicles) {\n        return state.vehicles;\n      }\n    }\n  },\n  actions: {\n    async fetchCars({\n      commit,\n      state\n    }) {\n      // shows loading animation while getting the data\n      // commit(\"SWITCH_LOADING\");\n      try {\n        let data = await apiVehicles.getCars();\n        commit(\"SETCARS\", data);\n        console.log(state.cars, \"from state\");\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async create({\n      commit\n    }, {\n      agencyData,\n      countryName,\n      userName\n    }) {\n      try {\n        let data = await ApiAgency.createAgency(agencyData);\n        data.country_name = countryName;\n        data.user_name = userName;\n        commit(\"CREATE\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async fetchById(_, agencyId) {\n      // app status: loading\n      try {\n        let data = await ApiAgency.getAgencyById(agencyId);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n      // app status: ready\n    },\n\n    async update({\n      commit\n    }, {\n      agencyData,\n      countryName,\n      userName\n    }) {\n      // app status:  loading\n      try {\n        let data = await ApiAgency.updateAgency(agencyData);\n        data.country_name = countryName;\n        data.user_name = userName;\n        commit(\"UPDATE\", data);\n        // app status: ready\n      } catch (error) {\n        throw error;\n      }\n    },\n    async delete({\n      commit\n    }, id) {\n      try {\n        let data = await ApiAgency.deleteAgency(id);\n        commit(\"DELETE\", id);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiVehicles","namespaced","state","vehicles","filters","make","models","priceFrom","priceTo","yearFrom","yearTo","carType","carCondition","fuel","transmission","driveTrain","mileage","engine","color","mutations","SETCARS","payload","UPDATE_FILTERS","getters","fileredVehilces","actions","fetchCars","commit","data","getCars","console","log","cars","error","create","agencyData","countryName","userName","ApiAgency","createAgency","country_name","user_name","fetchById","_","agencyId","getAgencyById","update","updateAgency","delete","id","deleteAgency"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/modules/vehicles.js"],"sourcesContent":["import apiVehicles from \"../../helpers/apiVehicles\";\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate: {\r\n\t\tvehicles: [],\r\n\t\tfilters: {\r\n\t\t\tmake: \"\",\r\n\t\t\tmodels: \"\",\r\n\t\t\tpriceFrom: 0,\r\n\t\t\tpriceTo: 0,\r\n\t\t\tyearFrom: 0,\r\n\t\t\tyearTo: 0,\r\n\t\t\tcarType: \"\",\r\n\t\t\tcarCondition: \"\",\r\n\t\t\tfuel: \"\",\r\n\t\t\ttransmission: \"\",\r\n\t\t\tdriveTrain: \"\",\r\n\t\t\tmileage: \"\",\r\n\t\t\tengine: \"\",\r\n\t\t\tcolor: \"\",\r\n\t\t},\r\n\t},\r\n\tmutations: {\r\n\t\tSETCARS(state, payload) {\r\n\t\t\tstate.vehicles = payload;\r\n\t\t},\r\n\t\tUPDATE_FILTERS(state, payload) {\r\n\t\t\t state.filters = {...state.filters, ...payload}\r\n\t\t }\r\n\t\t// SETDEALERS(state, payload) {\r\n\t\t// \tstate.dealers = payload;\r\n\t\t// },\r\n\r\n\t\t// SWITCH_LOADING(state) {\r\n\t\t// \tstate.isLoading = !state.isLoading;\r\n\t\t// },\r\n\t},\r\n\r\n\tgetters: {\r\n\t\tfileredVehilces(state) {\r\n\t\t\tif (state.vehicles) {\r\n\t\t\t\treturn state.vehicles;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tactions: {\r\n\t\tasync fetchCars({ commit, state }) {\r\n\t\t\t// shows loading animation while getting the data\r\n\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiVehicles.getCars();\r\n\t\t\t\tcommit(\"SETCARS\", data);\r\n\t\t\t\tconsole.log(state.cars, \"from state\");\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync create({ commit }, { agencyData, countryName, userName }) {\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.createAgency(agencyData);\r\n\t\t\t\tdata.country_name = countryName;\r\n\t\t\t\tdata.user_name = userName;\r\n\t\t\t\tcommit(\"CREATE\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync fetchById(_, agencyId) {\r\n\t\t\t// app status: loading\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.getAgencyById(agencyId);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t\t// app status: ready\r\n\t\t},\r\n\r\n\t\tasync update({ commit }, { agencyData, countryName, userName }) {\r\n\t\t\t// app status:  loading\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.updateAgency(agencyData);\r\n\t\t\t\tdata.country_name = countryName;\r\n\t\t\t\tdata.user_name = userName;\r\n\t\t\t\tcommit(\"UPDATE\", data);\r\n\t\t\t\t// app status: ready\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync delete({ commit }, id) {\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await ApiAgency.deleteAgency(id);\r\n\t\t\t\tcommit(\"DELETE\", id);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}