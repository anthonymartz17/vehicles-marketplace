{"ast":null,"code":"import apiVehicles from \"../../helpers/apiVehicles\";\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\nexport default {\n  namespaced: true,\n  state: {\n    vehicles: [],\n    dealers: [],\n    filters: {\n      // make: \"\",\n      // models: \"\",\n      // priceFrom: 0,\n      // priceTo: 0,\n      // yearFrom: 0,\n      // yearTo: 0,\n      // carType: \"\",\n      // carCondition: \"\",\n      // fuel: \"\",\n      // transmission: \"\",\n      // driveTrain: \"\",\n      // mileage: \"\",\n      // engine: \"\",\n      // color: \"\",\n      // dealerId:\"\",\n    },\n    mobileMenuToggler: false\n  },\n  mutations: {\n    SET_VEHICLES(state, payload) {\n      state.vehicles = payload;\n    },\n    SET_DEALERS(state, payload) {\n      state.dealers = payload;\n    },\n    UPDATE_FILTERS(state, payload) {\n      state.filters = {\n        ...state.filters,\n        ...payload\n      };\n    },\n    FILTER_VEHICLES(state) {\n      let results = state.vehicles;\n      console.log('new filterssss', state.filters);\n      if (state.filters.carCondition !== \"\" && state.filters.carCondition !== \"New/Used\") {\n        results = results.filter(one => one.carCondition === state.filters.carCondition);\n      }\n      if (state.filters.fuel !== \"\" && state.filters.fuel !== \"All\") {\n        results = results.filter(one => one.fuel === state.filters.fuel);\n      }\n      if (state.filters.dealerId !== \"\" && state.filters.dealerId !== \"All\") {\n        results = results.filter(one => one.dealerId === state.filters.dealerId);\n        console.log(results, 'jdealers');\n      }\n      if (state.filters.transmission !== \"\" && state.filters.transmission !== \"All\") {\n        results = results.filter(one => one.transmission === state.filters.transmission);\n      }\n      if (state.filters.driveTrain !== \"\" && state.filters.driveTrain !== \"All\") {\n        results = results.filter(one => one.driveTrain === state.filters.driveTrain);\n      }\n      if (state.filters.engine !== \"\" && state.filters.engine !== \"All\") {\n        results = results.filter(one => {\n          if (one.engine != undefined && one.engine.toLowerCase().includes(state.filters.engine.toLowerCase())) {\n            return one;\n          }\n        });\n      }\n      if (state.filters.mileage !== \"\" && state.filters.mileage !== \"All\") {\n        let reg = /\\d+/g;\n        // finds the numbers in a string and returns them in an array.\n        let nums = state.filters.mileage.match(reg);\n        // setting numbers at position zero and one to min and max respectively and converting them to thousands.\n        let min = +nums[0] * 1000;\n        let max = +nums[1] * 1000;\n        results = results.filter(one => {\n          let miles = +one.miles.replace(\",\", \"\");\n          if (max) {\n            return miles > min && miles < max;\n          } else {\n            return miles > min;\n          }\n        });\n      }\n      if (state.filters.color !== \"\" && state.filters.color !== \"All\") {\n        results = results.filter(one => one.colorEx === state.filters.color);\n      }\n      if (state.filters.carType !== \"\") {\n        results = results.filter(one => one.carType.toLowerCase().includes(state.filters.carType.toLowerCase().trim()));\n\n        // state.inputTextUser = state.filters.carType;\n      }\n\n      if (state.filters.priceFrom != 0) {\n        results = results.filter(one => one.price >= state.filters.priceFrom);\n      }\n      if (state.filters.priceTo != 0) {\n        results = results.filter(one => one.price <= state.filters.priceTo);\n      }\n      if (state.filters.yearFrom > 0) {\n        results = results.filter(one => one.year >= state.filters.yearFrom);\n      }\n      if (state.filters.yearTo > 0) {\n        results = results.filter(one => one.year <= state.filters.yearTo);\n      }\n      // the following condition ensures to show selected make, and in case all makes is selected, it doesnt get into the condition which makes the program run as if nothing was selected and shows all makes avalables.\n      if (state.filters.make !== \"\" && state.filters.make !== \"All Makes\") {\n        results = results.filter(one => one.make.toLowerCase().includes(state.filters.make.toLowerCase().trim()));\n      }\n      if (state.filters.models != \"\" && state.filters.models != `All ${state.filters.make}`) {\n        results = results.filter(one => one.model.toLowerCase().includes(state.filters.models.toLowerCase().trim()));\n      }\n      console.log(results, 'end', state.filters);\n      localStorage.setItem(\"searchResults\", JSON.stringify(results));\n      state.showDropDownTextField = false;\n    },\n    clearFilters(state) {\n      state.filters = {\n        make: \"\",\n        models: \"\",\n        priceFrom: 0,\n        priceTo: 0,\n        yearFrom: 0,\n        yearTo: 0,\n        carType: \"\",\n        carCondition: \"\",\n        fuel: \"\",\n        transmission: \"\",\n        driveTrain: \"\",\n        mileage: \"\",\n        engine: \"\",\n        color: \"\"\n      };\n    },\n    TOGGLE_MOBILE_MENUE(state) {\n      state.mobileMenuToggler = !state.mobileMenuToggler;\n    }\n  },\n  getters: {\n    vehiclesList(state) {\n      if (state.vehicles) {\n        return state.vehicles;\n      }\n    },\n    dealersList(state) {\n      if (state.dealers) {\n        return state.dealers;\n      }\n    }\n  },\n  actions: {\n    async fetchVehicles({\n      commit\n    }) {\n      // shows loading animation while getting the data\n      // commit(\"SWITCH_LOADING\");\n      try {\n        let data = await apiVehicles.getVehicles();\n        // fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\n        let dataUrl = await apiCarsImages.getCarsImages(data);\n        data.forEach(one => {\n          let imagesUrl = dataUrl.find(x => x.id == one.id).imagesUrl;\n          one.carPicsUrls = imagesUrl;\n        });\n        commit(\"SET_VEHICLES\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async fetchVehicleById(_, vehicleId) {\n      try {\n        let vehicle = await apiVehicles.getVehicleById(vehicleId);\n        let imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\n        vehicle.carPicsUrls = imagesUrl;\n        return vehicle;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async fetchDealers({\n      commit\n    }) {\n      // shows loading animation while getting the data\n      // commit(\"SWITCH_LOADING\");\n      try {\n        let data = await apiVehicles.getDealers();\n        commit(\"SET_DEALERS\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async fetchDealerById(_, dealerId) {\n      try {\n        let dealer = await apiVehicles.getDealerById(dealerId);\n        return dealer;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiVehicles","apiCarsImages","namespaced","state","vehicles","dealers","filters","mobileMenuToggler","mutations","SET_VEHICLES","payload","SET_DEALERS","UPDATE_FILTERS","FILTER_VEHICLES","results","console","log","carCondition","filter","one","fuel","dealerId","transmission","driveTrain","engine","undefined","toLowerCase","includes","mileage","reg","nums","match","min","max","miles","replace","color","colorEx","carType","trim","priceFrom","price","priceTo","yearFrom","year","yearTo","make","models","model","localStorage","setItem","JSON","stringify","showDropDownTextField","clearFilters","TOGGLE_MOBILE_MENUE","getters","vehiclesList","dealersList","actions","fetchVehicles","commit","data","getVehicles","dataUrl","getCarsImages","forEach","imagesUrl","find","x","id","carPicsUrls","error","fetchVehicleById","_","vehicleId","vehicle","getVehicleById","getImagesById","pics","fetchDealers","getDealers","fetchDealerById","dealer","getDealerById"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/modules/vehicles.js"],"sourcesContent":["import apiVehicles from \"../../helpers/apiVehicles\";\r\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\r\n\tstate: {\r\n\t\tvehicles: [],\r\n\t\tdealers: [],\r\n\t\tfilters: {\r\n\t\t\t// make: \"\",\r\n\t\t\t// models: \"\",\r\n\t\t\t// priceFrom: 0,\r\n\t\t\t// priceTo: 0,\r\n\t\t\t// yearFrom: 0,\r\n\t\t\t// yearTo: 0,\r\n\t\t\t// carType: \"\",\r\n\t\t\t// carCondition: \"\",\r\n\t\t\t// fuel: \"\",\r\n\t\t\t// transmission: \"\",\r\n\t\t\t// driveTrain: \"\",\r\n\t\t\t// mileage: \"\",\r\n\t\t\t// engine: \"\",\r\n\t\t\t// color: \"\",\r\n\t\t\t// dealerId:\"\",\r\n\t\t},\r\n\t\tmobileMenuToggler: false,\r\n\t},\r\n\tmutations: {\r\n\t\tSET_VEHICLES(state, payload) {\r\n\t\t\tstate.vehicles = payload;\r\n\t\t},\r\n\t\tSET_DEALERS(state, payload) {\r\n\t\t\tstate.dealers = payload;\r\n\t\t},\r\n\r\n\t\tUPDATE_FILTERS(state, payload) {\r\n\t\t\tstate.filters = { ...state.filters, ...payload };\r\n\t\t},\r\n\t\tFILTER_VEHICLES(state) {\r\n\t\t\tlet results = state.vehicles;\r\n\t   console.log('new filterssss',state.filters)\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.carCondition !== \"\" &&\r\n\t\t\t\tstate.filters.carCondition !== \"New/Used\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.carCondition === state.filters.carCondition\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (state.filters.fuel !== \"\" && state.filters.fuel !== \"All\") {\r\n\t\t\t\tresults = results.filter((one) => one.fuel === state.filters.fuel);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (state.filters.dealerId !== \"\" && state.filters.dealerId !== \"All\") {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.dealerId === state.filters.dealerId\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(results,'jdealers')\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.transmission !== \"\" &&\r\n\t\t\t\tstate.filters.transmission !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.transmission === state.filters.transmission\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.driveTrain !== \"\" &&\r\n\t\t\t\tstate.filters.driveTrain !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.driveTrain === state.filters.driveTrain\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (state.filters.engine !== \"\" && state.filters.engine !== \"All\") {\r\n\t\t\t\tresults = results.filter((one) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tone.engine != undefined &&\r\n\t\t\t\t\t\tone.engine\r\n\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t.includes(state.filters.engine.toLowerCase())\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn one;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (state.filters.mileage !== \"\" && state.filters.mileage !== \"All\") {\r\n\t\t\t\tlet reg = /\\d+/g;\r\n\t\t\t\t// finds the numbers in a string and returns them in an array.\r\n\t\t\t\tlet nums = state.filters.mileage.match(reg);\r\n\t\t\t\t// setting numbers at position zero and one to min and max respectively and converting them to thousands.\r\n\t\t\t\tlet min = +nums[0] * 1000;\r\n\t\t\t\tlet max = +nums[1] * 1000;\r\n\r\n\t\t\t\tresults = results.filter((one) => {\r\n\t\t\t\t\tlet miles = +one.miles.replace(\",\", \"\");\r\n\r\n\t\t\t\t\tif (max) {\r\n\t\t\t\t\t\treturn miles > min && miles < max;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn miles > min;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (state.filters.color !== \"\" && state.filters.color !== \"All\") {\r\n\t\t\t\tresults = results.filter((one) => one.colorEx === state.filters.color);\r\n\t\t\t}\r\n\t\t\tif (state.filters.carType !== \"\") {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.carType\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(state.filters.carType.toLowerCase().trim())\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// state.inputTextUser = state.filters.carType;\r\n\t\t\t}\r\n\t\t\tif (state.filters.priceFrom != 0) {\r\n\t\t\t\tresults = results.filter((one) => one.price >= state.filters.priceFrom);\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tif (state.filters.priceTo != 0) {\r\n\t\t\t\tresults = results.filter((one) => one.price <= state.filters.priceTo);\r\n\t\t\t}\r\n\t\t\tif (state.filters.yearFrom > 0) {\r\n\t\t\t\tresults = results.filter((one) => one.year >= state.filters.yearFrom);\r\n\t\t\t}\r\n\t\t\tif (state.filters.yearTo > 0) {\r\n\t\t\t\tresults = results.filter((one) => one.year <= state.filters.yearTo);\r\n\t\t\t}\r\n\t\t\t// the following condition ensures to show selected make, and in case all makes is selected, it doesnt get into the condition which makes the program run as if nothing was selected and shows all makes avalables.\r\n\t\t\tif (state.filters.make !== \"\" && state.filters.make !== \"All Makes\") {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.make\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(state.filters.make.toLowerCase().trim())\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.models != \"\" &&\r\n\t\t\t\tstate.filters.models != `All ${state.filters.make}`\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.model\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(state.filters.models.toLowerCase().trim())\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconsole.log(results,'end',state.filters)\r\n\t\t\tlocalStorage.setItem(\"searchResults\", JSON.stringify(results));\r\n\t\t\tstate.showDropDownTextField = false;\r\n\t\t},\r\n\t\tclearFilters(state) {\r\n\t\t\tstate.filters = {\r\n\t\t\t\tmake: \"\",\r\n\t\t\t\tmodels: \"\",\r\n\t\t\t\tpriceFrom: 0,\r\n\t\t\t\tpriceTo: 0,\r\n\t\t\t\tyearFrom: 0,\r\n\t\t\t\tyearTo: 0,\r\n\t\t\t\tcarType: \"\",\r\n\t\t\t\tcarCondition: \"\",\r\n\t\t\t\tfuel: \"\",\r\n\t\t\t\ttransmission: \"\",\r\n\t\t\t\tdriveTrain: \"\",\r\n\t\t\t\tmileage: \"\",\r\n\t\t\t\tengine: \"\",\r\n\t\t\t\tcolor: \"\",\r\n\t\t\t};\r\n\t\t},\r\n\t\tTOGGLE_MOBILE_MENUE(state) {\r\n\t\t\tstate.mobileMenuToggler = !state.mobileMenuToggler;\r\n\t\t},\r\n\t},\r\n\r\n\tgetters: {\r\n\t\tvehiclesList(state) {\r\n\t\t\tif (state.vehicles) {\r\n\t\t\t\treturn state.vehicles;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdealersList(state) {\r\n\t\t\tif (state.dealers) {\r\n\t\t\t\treturn state.dealers;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tactions: {\r\n\t\tasync fetchVehicles({ commit }) {\r\n\t\t\t// shows loading animation while getting the data\r\n\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiVehicles.getVehicles();\r\n\t\t\t\t// fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\r\n\t\t\t\tlet dataUrl = await apiCarsImages.getCarsImages(data);\r\n\t\t\t\tdata.forEach((one) => {\r\n\t\t\t\t\tlet imagesUrl = dataUrl.find((x) => x.id == one.id).imagesUrl;\r\n\t\t\t\t\tone.carPicsUrls = imagesUrl;\r\n\t\t\t\t});\r\n\t\t\t\tcommit(\"SET_VEHICLES\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchVehicleById(_, vehicleId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet vehicle = await apiVehicles.getVehicleById(vehicleId);\r\n\t\t\t\tlet imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\r\n\t\t\t\tvehicle.carPicsUrls = imagesUrl;\r\n\t\t\t\treturn vehicle;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchDealers({ commit }) {\r\n\t\t\t// shows loading animation while getting the data\r\n\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiVehicles.getDealers();\r\n\t\t\t\tcommit(\"SET_DEALERS\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchDealerById(_, dealerId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet dealer = await apiVehicles.getDealerById(dealerId);\r\n\t\t\t\treturn dealer;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}