{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection } from \"firebase/firestore\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nexport default function initializeFirebase() {\n  // Your Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAwIN2cWNmZlb_jZBjhHeJVS3UymQAGc4M\",\n    authDomain: \"vehicles-marketplace.firebaseapp.com\",\n    projectId: \"vehicles-marketplace\",\n    storageBucket: \"vehicles-marketplace.appspot.com\",\n    messagingSenderId: \"775154818578\",\n    appId: \"1:775154818578:web:d182643d23d2c6c0d182cb\",\n    measurementId: \"G-5PT2T0VZB5\"\n  };\n\n  // Initialize Firebase\n  initializeApp(firebaseConfig);\n\n  //initialize service\n  return getFirestore();\n}\n\n// collection refference\n// const colRef = collection(db, \"cars\");\n\n// function uploadImages() {\n// \tconst imageContext = require.context(\n// \t\t\"../public/images/cars\",\n// \t\tfalse,\n// \t\t/\\.(png|jpe?g|gif|svg)$/\n// \t);\n// \tconst imageFiles = imageContext.keys().map((key) => key.replace(\"./\", \"\"));\n// \tlet uniqueFilenames = [];\n// \timageFiles.forEach((filename) => {\n// \t\tconst uniqueId = uuidv4();\n// \t\tconst originalImageName = filename.split('.').shift()\n// \t\tconst extension = filename.split(\".\").pop();\n\n// \t\tuniqueFilenames.push(`${originalImageName}_${uniqueId}.${extension}`);\n// \t});\n// \tconsole.log(uniqueFilenames)\n// \tlocalStorage.setItem('imageId',JSON.stringify(uniqueFilenames))\n\n// }\n// uploadImages();\n\n// Now you have an array of file names in the `imageFiles` variable\n// You can use this array to upload the images to Firebase Storage\n\n//get collection data\n\n// getDocs(colRef).then((snapshot) => {\n// \tsnapshot.docs.forEach((one) => {\n// \t\tconsole.log({ ...one.data(), id: one.id });\n// \t});\n// });\n\n// Function to add a car document to Firestore\n\n// const addDealer = async (car) => {\n// \ttry {\n// \t\tconst docRef = await addDoc(colRef, car);\n// \t\tconsole.log(\"Document written with ID: \", docRef.id);\n// \t} catch (error) {\n// \t\tconsole.error(\"Error adding document: \", error);\n// \t}\n// };\n// // // Fetch the JSON file\n// fetch(\"http://localhost:3000/cars\")\n// \t.then((response) => response.json())\n// \t.then((dealersData) => {\n// \t\tdealersData.forEach((dealer) => {\n// \t\t\taddDealer(dealer);\n// \t\t});\n// \t})\n// \t.catch((error) => {\n// \t\tconsole.error(\"Error fetching dealer data:\", error);\n// \t});","map":{"version":3,"names":["initializeApp","getFirestore","collection","initializeFirebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/firebase.config.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection } from \"firebase/firestore\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function initializeFirebase() {\r\n\t// Your Firebase configuration\r\n\tconst firebaseConfig = {\r\n\t\tapiKey: \"AIzaSyAwIN2cWNmZlb_jZBjhHeJVS3UymQAGc4M\",\r\n\t\tauthDomain: \"vehicles-marketplace.firebaseapp.com\",\r\n\t\tprojectId: \"vehicles-marketplace\",\r\n\t\tstorageBucket: \"vehicles-marketplace.appspot.com\",\r\n\t\tmessagingSenderId: \"775154818578\",\r\n\t\tappId: \"1:775154818578:web:d182643d23d2c6c0d182cb\",\r\n\t\tmeasurementId: \"G-5PT2T0VZB5\",\r\n\t};\r\n\r\n\t// Initialize Firebase\r\n\tinitializeApp(firebaseConfig);\r\n\r\n\t//initialize service\r\n\treturn getFirestore();\r\n}\r\n\r\n// collection refference\r\n// const colRef = collection(db, \"cars\");\r\n\r\n// function uploadImages() {\r\n// \tconst imageContext = require.context(\r\n// \t\t\"../public/images/cars\",\r\n// \t\tfalse,\r\n// \t\t/\\.(png|jpe?g|gif|svg)$/\r\n// \t);\r\n// \tconst imageFiles = imageContext.keys().map((key) => key.replace(\"./\", \"\"));\r\n// \tlet uniqueFilenames = [];\r\n// \timageFiles.forEach((filename) => {\r\n// \t\tconst uniqueId = uuidv4();\r\n// \t\tconst originalImageName = filename.split('.').shift()\r\n// \t\tconst extension = filename.split(\".\").pop();\r\n\r\n// \t\tuniqueFilenames.push(`${originalImageName}_${uniqueId}.${extension}`);\r\n// \t});\r\n// \tconsole.log(uniqueFilenames)\r\n// \tlocalStorage.setItem('imageId',JSON.stringify(uniqueFilenames))\r\n\r\n// }\r\n// uploadImages();\r\n\r\n// Now you have an array of file names in the `imageFiles` variable\r\n// You can use this array to upload the images to Firebase Storage\r\n\r\n//get collection data\r\n\r\n// getDocs(colRef).then((snapshot) => {\r\n// \tsnapshot.docs.forEach((one) => {\r\n// \t\tconsole.log({ ...one.data(), id: one.id });\r\n// \t});\r\n// });\r\n\r\n// Function to add a car document to Firestore\r\n\r\n// const addDealer = async (car) => {\r\n// \ttry {\r\n// \t\tconst docRef = await addDoc(colRef, car);\r\n// \t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n// \t} catch (error) {\r\n// \t\tconsole.error(\"Error adding document: \", error);\r\n// \t}\r\n// };\r\n// // // Fetch the JSON file\r\n// fetch(\"http://localhost:3000/cars\")\r\n// \t.then((response) => response.json())\r\n// \t.then((dealersData) => {\r\n// \t\tdealersData.forEach((dealer) => {\r\n// \t\t\taddDealer(dealer);\r\n// \t\t});\r\n// \t})\r\n// \t.catch((error) => {\r\n// \t\tconsole.error(\"Error fetching dealer data:\", error);\r\n// \t});\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,UAAU,QAAQ,oBAAoB;AAC7D;;AAEA,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC5C;EACA,MAAMC,cAAc,GAAG;IACtBC,MAAM,EAAE,yCAAyC;IACjDC,UAAU,EAAE,sCAAsC;IAClDC,SAAS,EAAE,sBAAsB;IACjCC,aAAa,EAAE,kCAAkC;IACjDC,iBAAiB,EAAE,cAAc;IACjCC,KAAK,EAAE,2CAA2C;IAClDC,aAAa,EAAE;EAChB,CAAC;;EAED;EACAX,aAAa,CAACI,cAAc,CAAC;;EAE7B;EACA,OAAOH,YAAY,CAAC,CAAC;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}