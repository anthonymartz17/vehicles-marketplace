{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapMutations, mapActions } from \"vuex\";\nexport default {\n  methods: {\n    ...mapMutations(\"auth\", [\"SET_ALERT_MSG\"]),\n    ...mapActions(\"adsCrud\", [\"deleteAd\"]),\n    async continueAction() {\n      if (this.alert.vehicleId) {\n        await this.deleteAd(this.alert.vehicleId);\n      }\n      if (this.alert.id == \"exit-edit\") {\n        console.log(this.alert, \"dfsfs\");\n        localStorage.removeItem(\"vehicle_id\");\n        localStorage.removeItem(\"vehicle_images\");\n        this.$store.dispatch(\"adsCrud/updateVehiclePost\", null);\n        this.$store.dispatch(\"adsCrud/updateVehiclePostImages\", null);\n        if (this.$route.name != \"create ad\") this.$router.push({\n          name: \"create ad\"\n        });\n      }\n\n      // else if (\n      // \tthis.$route.name == \"activationForm\" &&\n      // \tthis.alert.type == \"success\"\n      // ) {\n      // \tthis.$emit(\"CheckLoginOptionEvent\", \"login\");\n      // }\n      //reset alert\n      this.SET_ALERT_MSG({});\n    }\n  },\n  computed: {\n    ...mapState(\"auth\", [\"alert\", \"showAlert\"]),\n    ...mapState(\"adsCrud\", [\"vehiclePost\"]),\n    btnText() {\n      let text;\n      if (this.alert.type == \"warning\") {\n        text = \"Confirm\";\n      }\n      return text;\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapMutations","mapActions","methods","continueAction","alert","vehicleId","deleteAd","id","console","log","localStorage","removeItem","$store","dispatch","$route","name","$router","push","SET_ALERT_MSG","computed","btnText","text","type"],"sources":["src/components/utilities/alert-msg.vue"],"sourcesContent":["<script>\r\nimport { mapState, mapMutations, mapActions } from \"vuex\";\r\nexport default {\r\n\tmethods: {\r\n\t\t...mapMutations(\"auth\", [\"SET_ALERT_MSG\"]),\r\n\t\t...mapActions(\"adsCrud\", [\"deleteAd\"]),\r\n\t\tasync continueAction() {\r\n\t\t\tif (this.alert.vehicleId) {\r\n\t\t\t\tawait this.deleteAd(this.alert.vehicleId);\r\n\t\t\t}\r\n\t\t\tif (this.alert.id == \"exit-edit\") {\r\n\t\t\t\tconsole.log(this.alert, \"dfsfs\");\r\n\t\t\t\tlocalStorage.removeItem(\"vehicle_id\");\r\n\t\t\t\tlocalStorage.removeItem(\"vehicle_images\");\r\n\t\t\t\tthis.$store.dispatch(\"adsCrud/updateVehiclePost\", null);\r\n\t\t\t\tthis.$store.dispatch(\"adsCrud/updateVehiclePostImages\", null);\r\n\t\t\t\tif (this.$route.name != \"create ad\")\r\n\t\t\t\t\tthis.$router.push({ name: \"create ad\" });\r\n\t\t\t}\r\n\r\n\t\t\t// else if (\r\n\t\t\t// \tthis.$route.name == \"activationForm\" &&\r\n\t\t\t// \tthis.alert.type == \"success\"\r\n\t\t\t// ) {\r\n\t\t\t// \tthis.$emit(\"CheckLoginOptionEvent\", \"login\");\r\n\t\t\t// }\r\n\t\t\t//reset alert\r\n\t\t\tthis.SET_ALERT_MSG({});\r\n\t\t},\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\t...mapState(\"auth\", [\"alert\", \"showAlert\"]),\r\n\t\t...mapState(\"adsCrud\", [\"vehiclePost\"]),\r\n\r\n\t\tbtnText() {\r\n\t\t\tlet text;\r\n\t\t\tif (this.alert.type == \"warning\") {\r\n\t\t\t\ttext = \"Confirm\";\r\n\t\t\t}\r\n\r\n\t\t\treturn text;\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n<template>\r\n\t<div @click=\"SET_ALERT_MSG({})\" class=\"overlay\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div :class=\"['card-header', alert.type]\">\r\n\t\t\t\t<h3 class=\"sub-title text-light\">{{ alert.title }}</h3>\r\n\t\t\t\t<h3 @click=\"SET_ALERT_MSG({})\" class=\"sub-title text-light close\">X</h3>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<p>{{ alert.msg }}</p>\r\n\t\t\t\t<button\r\n\t\t\t\t\tv-show=\"alert.type == 'warning'\"\r\n\t\t\t\t\tclass=\"card-btn\"\r\n\t\t\t\t\t@click=\"continueAction()\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{{ btnText }}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.overlay {\r\n\tposition: absolute;\r\n   display: flex;\r\n\t justify-content: center;\r\n\t align-items: flex-start;\r\n\t padding-top: 10em;\r\n\tbackground: rgba(5, 5, 5, 0.438);\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tz-index: 100;\r\n}\r\n.card {\r\n\tbackground: $light;\r\n\tmargin-bottom: 20em;\r\n\twidth: 20em;\r\n\tmin-height: 13em;\r\n\tborder-radius: 5px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n}\r\n.card-header {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 0.5em;\r\n}\r\n.success {\r\n\tbackground: $success;\r\n}\r\n.warning {\r\n\tbackground: $warning;\r\n}\r\n.error {\r\n\tbackground: $primary;\r\n}\r\n.card-btn {\r\n\tfont: $font-text-bold;\r\n\tcolor: $lightDark;\r\n\tpadding: 0.5em 1em;\r\n\tcursor: pointer;\r\n}\r\n.card-body {\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\tgap: 1em;\r\n\tfont: $font-text-bold;\r\n\tcolor: $lightDark;\r\n\tmargin-block: 1em;\r\n\tpadding-inline: 1em;\r\n}\r\n.close {\r\n\tcursor: pointer;\r\n}\r\n.overlay {\r\n\t@include breakpoint(tablet) {\r\n\t\tdisplay: grid;\r\n\t\t// place-items: center;\r\n\t\tpadding-top: 0em;\r\n\t\t.card {\r\n\t\t\twidth: 60%;\r\n\t\t}\r\n\t\t.custom-btn {\r\n\t\t\twidth: 50%;\r\n\t\t}\r\n\t}\r\n\t@include breakpoint(desktop) {\r\n\t\twidth: 30%;\r\n\t\t.custom-btn {\r\n\t\t\twidth: 30%;\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n"],"mappings":";AACA,SAAAA,QAAA,EAAAC,YAAA,EAAAC,UAAA;AACA;EACAC,OAAA;IACA,GAAAF,YAAA;IACA,GAAAC,UAAA;IACA,MAAAE,eAAA;MACA,SAAAC,KAAA,CAAAC,SAAA;QACA,WAAAC,QAAA,MAAAF,KAAA,CAAAC,SAAA;MACA;MACA,SAAAD,KAAA,CAAAG,EAAA;QACAC,OAAA,CAAAC,GAAA,MAAAL,KAAA;QACAM,YAAA,CAAAC,UAAA;QACAD,YAAA,CAAAC,UAAA;QACA,KAAAC,MAAA,CAAAC,QAAA;QACA,KAAAD,MAAA,CAAAC,QAAA;QACA,SAAAC,MAAA,CAAAC,IAAA,iBACA,KAAAC,OAAA,CAAAC,IAAA;UAAAF,IAAA;QAAA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAG,aAAA;IACA;EACA;EAEAC,QAAA;IACA,GAAApB,QAAA;IACA,GAAAA,QAAA;IAEAqB,QAAA;MACA,IAAAC,IAAA;MACA,SAAAjB,KAAA,CAAAkB,IAAA;QACAD,IAAA;MACA;MAEA,OAAAA,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}