{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiAds from \"../../helpers/apiAds\";\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\nimport auth from \"./auth\";\nexport default {\n  namespaced: true,\n  state: {\n    ads: [],\n    vehiclePost: {}\n  },\n  mutations: {\n    UPDATE_VEHICLEPOST(state, newValue) {\n      state.vehiclePost = {\n        ...state.vehiclePost,\n        ...newValue\n      };\n    },\n    CLEAR_VEHICLEPOST(state, payload) {\n      state.vehiclePost = payload;\n    },\n    SET(state, payload) {\n      state.ads = payload;\n    },\n    CREATE(state, payload) {\n      state.ads.push(payload);\n    },\n    UPDATE(state, payload) {\n      state.ads.find(item => {\n        if (item.id == payload.id) {\n          Object.assign(item, payload);\n        }\n      });\n    },\n    DELETE(state, id) {\n      state.ads = state.ads.filter(x => x.id !== id);\n    }\n  },\n  getters: {\n    adsList(state) {\n      if (state.ads) {\n        return state.ads;\n      }\n    }\n  },\n  actions: {\n    async fetchAds({\n      commit\n    }, dealerId) {\n      try {\n        let data = await apiAds.getAds(dealerId);\n        // fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\n        let dataUrl = await apiCarsImages.getCarsImages(data);\n        console.log(dataUrl);\n        data.forEach(one => {\n          let imagesUrl = dataUrl.find(x => x.id == one.id).imagesUrl;\n          one.carPicsUrls = imagesUrl;\n        });\n        commit(\"SET\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async fetchVehicleById(_, vehicleId) {\n      try {\n        let vehicle = await apiVehicles.getVehicleById(vehicleId);\n        let imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\n        vehicle.carPicsUrls = imagesUrl;\n        return vehicle;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async createAd(_, {\n      vehicleData,\n      vehicleImages\n    }) {\n      try {\n        vehicleData.dealerId = auth.state.user.dealerId;\n        console.log(data.accessories);\n        vehicleData.accessories = vehicleData.accessories.split(\",\");\n        console.log(data.accessories);\n        const createdPost = await apiAds.createAd(data);\n        const uploadedImages = await apiAds.uploadImages({\n          imgFiles: [...data.pics],\n          carId: createdPost.id\n        });\n        //pics array is not being added to data.......................................\n        //creates array pics and spread list of img references\n        console.log(uploadedImages, \"hay img\");\n        data.pics = [...uploadedImages];\n        console.log(data, \"data\");\n        console.log(data.pics, \"agregada a data\");\n        const updateAd = await apiAds.updateAd({\n          data,\n          vehicleId: createdPost.id\n        });\n      } catch (error) {\n        throw error;\n      }\n    },\n    async uploadImages(_, data) {\n      try {\n        const response = await apiAds.uploadImages(data);\n        console.log(response, \"images uploaded, state\");\n      } catch (error) {\n        throw error;\n      }\n    },\n    async updateAd(_, data) {\n      try {\n        const response = await apiAds.updateAd(data);\n        console.log(response, \"images uploaded, state\");\n      } catch (error) {\n        throw error;\n      }\n    },\n    async fetchDealers({\n      commit\n    }) {\n      try {\n        let data = await apiVehicles.getDealers();\n        commit(\"SET_DEALERS\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async fetchDealerById(_, dealerId) {\n      try {\n        let dealer = await apiVehicles.getDealerById(dealerId);\n        return dealer;\n      } catch (error) {\n        throw error;\n      }\n    },\n    updateVehiclePost({\n      commit\n    }, newValue) {\n      commit(\"UPDATE_VEHICLEPOST\", newValue);\n    },\n    clearVehiclePost({\n      commit\n    }, payload) {\n      commit(\"CLEAR_VEHICLEPOST\", payload);\n    }\n  }\n};","map":{"version":3,"names":["apiAds","apiCarsImages","auth","namespaced","state","ads","vehiclePost","mutations","UPDATE_VEHICLEPOST","newValue","CLEAR_VEHICLEPOST","payload","SET","CREATE","push","UPDATE","find","item","id","Object","assign","DELETE","filter","x","getters","adsList","actions","fetchAds","commit","dealerId","data","getAds","dataUrl","getCarsImages","console","log","forEach","one","imagesUrl","carPicsUrls","error","fetchVehicleById","_","vehicleId","vehicle","apiVehicles","getVehicleById","getImagesById","pics","createAd","vehicleData","vehicleImages","user","accessories","split","createdPost","uploadedImages","uploadImages","imgFiles","carId","updateAd","response","fetchDealers","getDealers","fetchDealerById","dealer","getDealerById","updateVehiclePost","clearVehiclePost"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/modules/adsCrud.js"],"sourcesContent":["import apiAds from \"../../helpers/apiAds\";\r\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\r\nimport auth from \"./auth\";\r\nexport default {\r\n\tnamespaced: true,\r\n\r\n\tstate: {\r\n\t\tads: [],\r\n\t\tvehiclePost: {},\r\n\t},\r\n\tmutations: {\r\n\t\tUPDATE_VEHICLEPOST(state, newValue) {\r\n\t\t\tstate.vehiclePost = { ...state.vehiclePost, ...newValue };\r\n\t\t},\r\n\t\tCLEAR_VEHICLEPOST(state, payload) {\r\n\t\t\tstate.vehiclePost = payload;\r\n\t\t},\r\n\t\tSET(state, payload) {\r\n\t\t\tstate.ads = payload;\r\n\t\t},\r\n\t\tCREATE(state, payload) {\r\n\t\t\tstate.ads.push(payload);\r\n\t\t},\r\n\t\tUPDATE(state, payload) {\r\n\t\t\tstate.ads.find((item) => {\r\n\t\t\t\tif (item.id == payload.id) {\r\n\t\t\t\t\tObject.assign(item, payload);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tDELETE(state, id) {\r\n\t\t\tstate.ads = state.ads.filter((x) => x.id !== id);\r\n\t\t},\r\n\t},\r\n\r\n\tgetters: {\r\n\t\tadsList(state) {\r\n\t\t\tif (state.ads) {\r\n\t\t\t\treturn state.ads;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tactions: {\r\n\t\tasync fetchAds({ commit }, dealerId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiAds.getAds(dealerId);\r\n\t\t\t\t// fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\r\n\t\t\t\tlet dataUrl = await apiCarsImages.getCarsImages(data);\r\n\t\t\t\tconsole.log(dataUrl);\r\n\r\n\t\t\t\tdata.forEach((one) => {\r\n\t\t\t\t\tlet imagesUrl = dataUrl.find((x) => x.id == one.id).imagesUrl;\r\n\t\t\t\t\tone.carPicsUrls = imagesUrl;\r\n\t\t\t\t});\r\n\t\t\t\tcommit(\"SET\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchVehicleById(_, vehicleId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet vehicle = await apiVehicles.getVehicleById(vehicleId);\r\n\t\t\t\tlet imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\r\n\t\t\t\tvehicle.carPicsUrls = imagesUrl;\r\n\t\t\t\treturn vehicle;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tasync createAd(_, { vehicleData, vehicleImages }) {\r\n\t\t\ttry {\r\n\t\t\t\tvehicleData.dealerId = auth.state.user.dealerId;\r\n\t\t\t\tconsole.log(data.accessories);\r\n\t\t\t\tvehicleData.accessories = vehicleData.accessories.split(\",\");\r\n\t\t\t\tconsole.log(data.accessories);\r\n\r\n\t\t\t\tconst createdPost = await apiAds.createAd(data);\r\n\t\t\t\tconst uploadedImages = await apiAds.uploadImages({\r\n\t\t\t\t\timgFiles: [...data.pics],\r\n\t\t\t\t\tcarId: createdPost.id,\r\n\t\t\t\t});\r\n\t\t\t\t//pics array is not being added to data.......................................\r\n\t\t\t\t//creates array pics and spread list of img references\r\n\t\t\t\tconsole.log(uploadedImages, \"hay img\");\r\n\t\t\t\tdata.pics = [...uploadedImages];\r\n\r\n\t\t\t\tconsole.log(data, \"data\");\r\n\t\t\t\tconsole.log(data.pics, \"agregada a data\");\r\n\t\t\t\tconst updateAd = await apiAds.updateAd({\r\n\t\t\t\t\tdata,\r\n\t\t\t\t\tvehicleId: createdPost.id,\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync uploadImages(_, data) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await apiAds.uploadImages(data);\r\n\t\t\t\tconsole.log(response, \"images uploaded, state\");\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync updateAd(_, data) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await apiAds.updateAd(data);\r\n\t\t\t\tconsole.log(response, \"images uploaded, state\");\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchDealers({ commit }) {\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiVehicles.getDealers();\r\n\t\t\t\tcommit(\"SET_DEALERS\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchDealerById(_, dealerId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet dealer = await apiVehicles.getDealerById(dealerId);\r\n\t\t\t\treturn dealer;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateVehiclePost({ commit }, newValue) {\r\n\t\t\tcommit(\"UPDATE_VEHICLEPOST\", newValue);\r\n\t\t},\r\n\t\tclearVehiclePost({ commit }, payload) {\r\n\t\t\tcommit(\"CLEAR_VEHICLEPOST\", payload);\r\n\t\t},\r\n\t},\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}