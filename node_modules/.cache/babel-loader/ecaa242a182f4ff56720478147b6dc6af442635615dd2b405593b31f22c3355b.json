{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getFirestore, collection, doc, getDoc, getDocs, addDoc, query } from \"firebase/firestore\";\n\n//initialize service\nconst db = getFirestore();\nexport default {\n  async getAds(dealerId = \"jRYOADMZlECdVyuGuSbg\") {\n    console.log('fired api');\n    try {\n      const colRef = collection(db, \"cars\");\n      const query = query(colRef, where(\"dealerId\", \"==\", dealerId));\n      const snapshot = await getDocs(query);\n      const data = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      return data;\n      // let data = []\n      // const colRef = collection(db, \"cars\");\n      // const snapshot = await getDocs(colRef)\n      // snapshot.docs.forEach(doc => {\n      //   data.push({\n      //     id: doc.id,\n      //     ...doc.data()\n      //   })\n      // })\n      // return data.filter(x =>x.id == dealerId)\n    } catch (error) {\n      throw error;\n    }\n  },\n  async getVehicleById(vehicleId) {\n    console.log(vehicleId, \"el id\");\n    try {\n      const carDocRef = doc(db, \"cars\", vehicleId);\n      const carDocSnapshot = await getDoc(carDocRef);\n      if (carDocSnapshot.exists()) {\n        return {\n          id: carDocSnapshot.id,\n          ...carDocSnapshot.data()\n        };\n      } else {\n        throw new Error(\"Vehicle not found.\");\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n  async getDealers() {\n    try {\n      let dealersData = [];\n      const colRef = collection(db, \"dealers\");\n      const snapshot = await getDocs(colRef);\n      snapshot.docs.forEach(doc => {\n        dealersData.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      return dealersData;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async getDealerById(dealerId) {\n    console.log(dealerId, \"el dealer\");\n    try {\n      const dealerDocRef = doc(db, \"dealers\", dealerId);\n      const dealerDocSnapshot = await getDoc(dealerDocRef);\n      if (dealerDocSnapshot.exists()) {\n        return {\n          id: dealerDocSnapshot.id,\n          ...dealerDocSnapshot.data()\n        };\n      } else {\n        throw new Error(\"Dealer not found.\");\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n// collection refference","map":{"version":3,"names":["getFirestore","collection","doc","getDoc","getDocs","addDoc","query","db","getAds","dealerId","console","log","colRef","where","snapshot","data","docs","map","id","error","getVehicleById","vehicleId","carDocRef","carDocSnapshot","exists","Error","getDealers","dealersData","forEach","push","getDealerById","dealerDocRef","dealerDocSnapshot"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiAds.js"],"sourcesContent":["import {\r\n\tgetFirestore,\r\n\tcollection,\r\n\tdoc,\r\n\tgetDoc,\r\n\tgetDocs,\r\n\taddDoc,\r\n\tquery,\r\n} from \"firebase/firestore\";\r\n\r\n//initialize service\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n  async getAds(dealerId = \"jRYOADMZlECdVyuGuSbg\") {\r\n    console.log('fired api')\r\n\t\ttry {\r\n\t\t\tconst colRef = collection(db, \"cars\");\r\n\t\t\tconst query = query(colRef, where(\"dealerId\", \"==\", dealerId));\r\n\t\t\tconst snapshot = await getDocs(query);\r\n\t\t\tconst data = snapshot.docs.map((doc) => ({\r\n\t\t\t\tid: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\t\t\treturn data;\r\n\t\t\t// let data = []\r\n\t\t\t// const colRef = collection(db, \"cars\");\r\n\t\t\t// const snapshot = await getDocs(colRef)\r\n\t\t\t// snapshot.docs.forEach(doc => {\r\n\t\t\t//   data.push({\r\n\t\t\t//     id: doc.id,\r\n\t\t\t//     ...doc.data()\r\n\t\t\t//   })\r\n\t\t\t// })\r\n\t\t\t// return data.filter(x =>x.id == dealerId)\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\tasync getVehicleById(vehicleId) {\r\n\t\tconsole.log(vehicleId, \"el id\");\r\n\t\ttry {\r\n\t\t\tconst carDocRef = doc(db, \"cars\", vehicleId);\r\n\r\n\t\t\tconst carDocSnapshot = await getDoc(carDocRef);\r\n\r\n\t\t\tif (carDocSnapshot.exists()) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: carDocSnapshot.id,\r\n\t\t\t\t\t...carDocSnapshot.data(),\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Vehicle not found.\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\r\n\tasync getDealers() {\r\n\t\ttry {\r\n\t\t\tlet dealersData = [];\r\n\t\t\tconst colRef = collection(db, \"dealers\");\r\n\t\t\tconst snapshot = await getDocs(colRef);\r\n\t\t\tsnapshot.docs.forEach((doc) => {\r\n\t\t\t\tdealersData.push({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn dealersData;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\tasync getDealerById(dealerId) {\r\n\t\tconsole.log(dealerId, \"el dealer\");\r\n\t\ttry {\r\n\t\t\tconst dealerDocRef = doc(db, \"dealers\", dealerId);\r\n\t\t\tconst dealerDocSnapshot = await getDoc(dealerDocRef);\r\n\r\n\t\t\tif (dealerDocSnapshot.exists()) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: dealerDocSnapshot.id,\r\n\t\t\t\t\t...dealerDocSnapshot.data(),\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Dealer not found.\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n};\r\n// collection refference\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}