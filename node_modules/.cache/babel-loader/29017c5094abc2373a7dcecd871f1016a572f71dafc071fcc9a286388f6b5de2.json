{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport vehicles from './modules/vehicles';\nimport filters from './modules/filterOptions';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  modules: {\n    vehicles,\n    filters\n  },\n  state: {\n    // Global\n    searchMobileModal: false,\n    modalToggler: false,\n    optionsCardToggler: false,\n    searchBtnPosition: false,\n    fieldContent: null,\n    msg: true,\n    carsData: [],\n    dealersData: [],\n    vehiclesDisplay: [],\n    allModels: [],\n    // receives the data of the clicked car\n    carToView: {},\n    carToViewGeneralInfo: [],\n    carToViewDetails: [],\n    carToViewHistory: [],\n    carToViewDealer: {},\n    // sidebarsearch component\n    inputTextUser: \"\",\n    dropDownErrorMsg: \"\",\n    showDropDownTextField: false,\n    // End sidebarsearch component\n    pricesUnavailable: null,\n    yearsUnavailable: null,\n    //Search mobile component\n\n    searchMobileModalContent: null,\n    // endPoints\n    // endPoints: {\n    // \tcarsUrl: \"http://localhost:3000/car_selection\",\n    // \tdealersUrl: \"http://localhost:3000/dealers\",\n    // \tcarsInventoryUrl: \"http://localhost:3000/cars_inventory\",\n    // },\n\n    // mobile nav links\n    mobileMenuToggler: false,\n    // filter props\n    filters: {\n      make: {\n        id: \"make\",\n        type: [],\n        typeSelected: \"\"\n      },\n      models: {\n        id: \"model\",\n        type: [],\n        typeSelected: \"\"\n      },\n      priceFrom: {\n        id: \"priceFrom\",\n        type: [],\n        typeSelected: 0\n      },\n      priceTo: {\n        id: \"priceTo\",\n        type: [],\n        typeSelected: 0\n      },\n      yearFrom: {\n        id: \"yearFrom\",\n        type: [],\n        typeSelected: 0\n      },\n      yearTo: {\n        id: \"yearTo\",\n        type: [],\n        typeSelected: 0\n      },\n      carType: {\n        id: \"carType\",\n        type: [],\n        typeSelected: \"\"\n      },\n      carCondition: {\n        id: \"condition\",\n        type: [],\n        typeSelected: \"\"\n      },\n      fuel: {\n        id: \"fuel\",\n        type: [],\n        typeSelected: \"\"\n      },\n      transmission: {\n        id: \"transmission\",\n        type: [],\n        typeSelected: \"\"\n      },\n      driveTrain: {\n        id: \"driveTrain\",\n        type: [],\n        typeSelected: \"\"\n      },\n      mileage: {\n        id: \"mileage\",\n        type: [],\n        typeSelected: \"\"\n      },\n      engine: {\n        id: \"engine\",\n        type: [],\n        typeSelected: \"\"\n      },\n      color: {\n        id: \"color\",\n        type: [],\n        typeSelected: \"\"\n      }\n    },\n    // ends filter props\n\n    typeOfCar: \"All Vehicles\",\n    clickedFieldContent: {},\n    desktopNav: [{\n      link: \"Home\",\n      name: \"Home\",\n      icon: \"fas fa-home\"\n    }, {\n      link: \"Vehicles\",\n      name: \"searchResults\",\n      icon: \"fas fa-car\",\n      subList: [\"Carros\", \"Motores\", \"Barcos\", \"Vehiculos Pesados\", \"Otros\"]\n    }, {\n      link: \"Electric Cars\",\n      name: \"Electric\",\n      icon: \"fas fa-charging-station\"\n    }, {\n      link: \"Contacto\",\n      name: \"Contact\",\n      icon: \"fas fa-phone-volume\"\n    }]\n  },\n  mutations: {\n    // when the app is created, this function get the data  that is at the moment in the  searchResults prop in local storage and sets it to the vehicleDisplay prop that is in the state. this allows the data to stay rendered when the page is reloaded.\n    setDataInVehiclesDisplayFromLocal(state) {\n      state.vehiclesDisplay = JSON.parse(localStorage.getItem(\"searchResults\"));\n    },\n    set_typeOfCar(state, val) {\n      state.typeOfCar = val;\n    },\n    // bug. when in sidebarserach component, clicking the different makes on the left sidebar, program wont display them.\n    searchVehicles(state) {\n      let results = state.allModels;\n      if (state.filters.carCondition.typeSelected !== \"\" && state.filters.carCondition.typeSelected !== \"New/Used\") {\n        results = results.filter(one => one.carCondition === state.filters.carCondition.typeSelected);\n      }\n      if (state.filters.fuel.typeSelected !== \"\" && state.filters.fuel.typeSelected !== \"All\") {\n        results = results.filter(one => one.fuel === state.filters.fuel.typeSelected);\n      }\n      if (state.filters.transmission.typeSelected !== \"\" && state.filters.transmission.typeSelected !== \"All\") {\n        results = results.filter(one => one.transmission === state.filters.transmission.typeSelected);\n      }\n      if (state.filters.driveTrain.typeSelected !== \"\" && state.filters.driveTrain.typeSelected !== \"All\") {\n        results = results.filter(one => one.driveTrain === state.filters.driveTrain.typeSelected);\n      }\n      if (state.filters.engine.typeSelected !== \"\" && state.filters.engine.typeSelected !== \"All\") {\n        results = results.filter(one => {\n          if (one.engine != undefined && one.engine.toLowerCase().includes(state.filters.engine.typeSelected.toLowerCase())) {\n            return one;\n          }\n        });\n      }\n      if (state.filters.mileage.typeSelected !== \"\" && state.filters.mileage.typeSelected !== \"All\") {\n        let reg = /\\d+/g;\n        // finds the numbers in a string and returns them in an array.\n        let nums = state.filters.mileage.typeSelected.match(reg);\n        // setting numbers at position zero and one to min and max respectively and converting them to thousands.\n        let min = +nums[0] * 1000;\n        let max = +nums[1] * 1000;\n        results = results.filter(one => {\n          let miles = +one.miles.replace(\",\", \"\");\n          if (max) {\n            return miles > min && miles < max;\n          } else {\n            return miles > min;\n          }\n        });\n      }\n      if (state.filters.color.typeSelected !== \"\" && state.filters.color.typeSelected !== \"All\") {\n        results = results.filter(one => one.colorEx === state.filters.color.typeSelected);\n      }\n      if (state.filters.carType.typeSelected !== \"\") {\n        results = results.filter(one => one.carType.toLowerCase().includes(state.filters.carType.typeSelected.toLowerCase().trim()));\n\n        // state.inputTextUser = state.filters.carType.typeSelected;\n      }\n\n      if (state.filters.priceFrom.typeSelected != 0) {\n        results = results.filter(one => one.price >= state.filters.priceFrom.typeSelected);\n      }\n      if (state.filters.priceTo.typeSelected != 0) {\n        results = results.filter(one => one.price <= state.filters.priceTo.typeSelected);\n      }\n      if (state.filters.yearFrom.typeSelected > 0) {\n        results = results.filter(one => one.year >= state.filters.yearFrom.typeSelected);\n      }\n      if (state.filters.yearTo.typeSelected > 0) {\n        results = results.filter(one => one.year <= state.filters.yearTo.typeSelected);\n      }\n      // the following condition ensures to show selected make, and in case all makes is selected, it doesnt get into the condition which makes the program run as if nothing was selected and shows all makes avalables.\n      if (state.filters.make.typeSelected !== \"\" && state.filters.make.typeSelected !== \"All Makes\") {\n        results = results.filter(one => one.make.toLowerCase().includes(state.filters.make.typeSelected.toLowerCase().trim()));\n      }\n      if (state.filters.models.typeSelected != \"\" && state.filters.models.typeSelected != `All ${state.filters.make.typeSelected}`) {\n        results = results.filter(one => one.model.toLowerCase().includes(state.filters.models.typeSelected.toLowerCase().trim()));\n      }\n      localStorage.setItem(\"searchResults\", JSON.stringify(results));\n      state.showDropDownTextField = false;\n    },\n    //prepares user type in input on side search to be used in mutation assignValueToTypeSelected\n    searchByInputText(state, e) {\n      state.inputTextUser = e.target.value;\n      let make, model, type;\n      // finds the make model and type of car the user put in\n      state.allModels.find(one => {\n        if (state.inputTextUser.toLowerCase().includes(one.make.toLowerCase())) {\n          make = one.make;\n        }\n        if (state.inputTextUser.toLowerCase().includes(one.model.toLowerCase())) {\n          make = one.make;\n          model = one.model;\n        }\n        if (state.inputTextUser.toLowerCase().includes(one.carType.toLowerCase())) {\n          type = one.carType;\n        }\n      });\n      if (state.inputTextUser == \"\") {\n        state.vehiclesDisplay = state.allModels;\n        state.filters.make.typeSelected = \"\";\n        state.filters.models.type = [];\n        state.filters.carType.typeSelected = \"\";\n        state.dropDownErrorMsg = \"\";\n        state.showDropDownTextField = false;\n      } else {\n        state.filters.models.type = state.allModels.filter(one => {\n          if (make && !model) {\n            state.filters.make.typeSelected = make;\n            return one.make === make;\n          } else if (model) {\n            state.filters.make.typeSelected = make;\n            return one.model === model;\n          } else if (type) {\n            state.filters.carType.typeSelected = type;\n            return one.carType === type;\n          }\n        });\n        if (state.filters.models.type.length == 0) {\n          state.dropDownErrorMsg = \" Invalid Make | Model | Type\";\n        } else {\n          state.dropDownErrorMsg = \"\";\n        }\n        if (e.target.id === \"userInputId\") state.showDropDownTextField = true;\n      }\n    },\n    selectElectricCars(state, routeName) {\n      if (routeName == \"Electric\") {\n        let allModels = JSON.parse(localStorage.getItem(\"allModels\"));\n        state.vehiclesDisplay = allModels.filter(one => one.fuel == \"Electric\" || one.fuel == \"Hybrid\");\n      }\n    },\n    selectDealerInventory(state, routeName) {\n      if (routeName == \"dealerInventory\") {\n        let inventory = JSON.parse(localStorage.getItem(\"carToViewDealer\"));\n        state.vehiclesDisplay = inventory.inventory;\n      }\n    },\n    // receive the data of the current car selected and saves it to local storage\n    saveCarToViewToLocalStore(state, data) {\n      localStorage.setItem(data.name, JSON.stringify(data.data));\n    },\n    // get the data of current car from local storage and assigns it to the prop carToView.\n    getCarToViewFromLocalStore(state) {\n      state.carToView = [JSON.parse(localStorage.getItem(\"carToView\"))];\n    },\n    // saves all models availables to local storage when the app component is created\n    saveAllModelsToLocal(state, vehicles) {\n      // the nested loop gets all the models contained in the model array  of each car object\n      let allModels = [];\n      vehicles.forEach(one => {\n        one.model.forEach(one => {\n          allModels.push(one);\n        });\n      });\n      localStorage.setItem(\"allModels\", JSON.stringify(allModels));\n    },\n    // gets all models from local storage and set them in the state prop allModels when the app component is created\n    getAllModelsFromLocal(state) {\n      state.allModels = JSON.parse(localStorage.getItem(\"allModels\"));\n    },\n    // receives the data of the current car to view and sets the specifications in the setCarToViewGeneralInfo prop that is  in the state.\n    setCarToViewGeneralInfo(state) {\n      let owner, ownerIcon, fuelIcon, milesIcon;\n      if (state.carToView[0].owner == 0) {\n        owner = \"Never owned\";\n        ownerIcon = \"owner.svg\";\n      }\n      if (state.carToView[0].owner == 1) {\n        owner = `${state.carToView[0].owner} owner`;\n        ownerIcon = \"owner.svg\";\n      }\n      if (state.carToView[0].owner == 2) {\n        ownerIcon = \"owners2.svg\";\n      }\n      if (state.carToView[0].owner > 2) {\n        owner = `${state.carToView[0].owner} owners`;\n        ownerIcon = \"ownersMany.svg\";\n      }\n      if (state.carToView[0].fuel == \"Electric\") {\n        fuelIcon = \"battery.svg\";\n        milesIcon = \"electricMiles.svg\";\n      } else {\n        fuelIcon = \"gas.svg\";\n        milesIcon = \"mpg.svg\";\n      }\n      state.carToViewGeneralInfo = [{\n        icon: \"miles.svg\",\n        iconInfo: `${state.carToView[0].miles} Miles`\n      }, {\n        icon: \"transmission.svg\",\n        iconInfo: state.carToView.transmission\n      }, {\n        icon: \"drivetrain.svg\",\n        iconInfo: state.carToView[0].driveTrain\n      }, {\n        icon: \"engine.svg\",\n        iconInfo: state.carToView[0].engine\n      }, {\n        icon: fuelIcon,\n        iconInfo: state.carToView[0].fuel\n      }, {\n        icon: milesIcon,\n        iconInfo: `${state.carToView[0].mileage} MPG`\n      }, {\n        icon: \"excolor.svg\",\n        iconInfo: state.carToView[0].colorEx\n      }, {\n        icon: \"incolor.svg\",\n        iconInfo: state.carToView[0].colorIn\n      }, {\n        icon: ownerIcon,\n        iconInfo: owner\n      }];\n    },\n    setCarToviewDetails(state) {\n      state.carToViewDetails = [{\n        key: \"Location\",\n        val: state.carToView[0].location\n      }, {\n        key: \"Engine\",\n        val: state.carToView[0].engine\n      }, {\n        key: \"Miles\",\n        val: state.carToView[0].miles\n      }, {\n        key: \"MPG\",\n        val: state.carToView[0].mileage\n      }, {\n        key: \"Fuel\",\n        val: state.carToView[0].fuel\n      }, {\n        key: \"transmission\",\n        val: state.carToView[0].transmission\n      }, {\n        key: \"Car type\",\n        val: state.carToView[0].carType\n      }, {\n        key: \"Drivetrain\",\n        val: state.carToView[0].driveTrain\n      }, {\n        key: \"Color Exterior\",\n        val: state.carToView[0].colorEx\n      }, {\n        key: \"Color Interior\",\n        val: state.carToView[0].colorIn\n      }, {\n        key: \"Vin\",\n        val: state.carToView[0].vin\n      }];\n    },\n    //gets the dealer according to the car selected\n    saveCarToViewDealerToLocalS(state, dealerId) {\n      let dealer = state.dealersData.find(one => dealerId === one.dealerId);\n      let dealerInventory = state.allModels.filter(one => one.dealerId === dealerId);\n      dealer[\"inventory\"] = dealerInventory;\n      if (localStorage.getItem(\"carToViewDealer\") === null) {\n        localStorage.setItem(\"carToViewDealer\", JSON.stringify(dealer));\n      } else {\n        localStorage.setItem(\"carToViewDealer\", JSON.stringify(dealer));\n      }\n    },\n    setCarToViewDealer(state) {\n      state.carToViewDealer = JSON.parse(localStorage.getItem(\"carToViewDealer\"));\n    },\n    // receives the data of the current car to view and sets the car history of the current vehicle in the carToViewHistory prop that is in the state.\n    setVehicleHistory(state) {\n      let owner, accidents, titleCheck, iconOwner, bgOwner, bgAccidents, bgTitle;\n      if (state.carToView[0].owner == 0) {\n        owner = \"Never owned\";\n        bgOwner = \"green\";\n        iconOwner = \"fas fa-user\";\n      } else if (state.carToView[0].owner == 1) {\n        owner = \"One owner\";\n        bgOwner = \"green\";\n        iconOwner = \"fas fa-user\";\n      } else {\n        owner = `${state.carToView[0].owner} onwers`;\n        bgOwner = \"#333\";\n        iconOwner = \"fas fa-users\";\n      }\n      if (state.carToView[0].accidents == 0) {\n        accidents = \"No issues reported\";\n        bgAccidents = \"green\";\n      } else if (state.carToView[0].accidents == 1) {\n        accidents = \"One accident reported\";\n        bgAccidents = \"#FFCC1D\";\n      } else {\n        accidents = `${state.carToView[0].accidents} accidents reported`;\n        bgAccidents = \"#FFCC1D\";\n      }\n      if (state.carToView[0].titleCheck == \"No issues\") {\n        titleCheck = \"No issues reported\";\n        bgTitle = \"green\";\n      } else {\n        titleCheck = state.carToView[0].titleCheck;\n        bgTitle = \"#FFCC1D\";\n      }\n      state.carToViewHistory = [{\n        key: \"Owners\",\n        val: owner,\n        icon: iconOwner,\n        iconBg: bgOwner\n      }, {\n        key: \"Accidents\",\n        val: accidents,\n        icon: \"fas fa-car\",\n        iconBg: bgAccidents\n      }, {\n        key: \"Title check\",\n        val: titleCheck,\n        icon: \"far fa-check-square \",\n        iconBg: bgTitle\n      }];\n    },\n    setCarsData(state, vehicles) {\n      if (vehicles) {\n        state.carsData = vehicles;\n      }\n    },\n    setDealersData(state, data) {\n      if (data) {\n        state.dealersData = data;\n      }\n    },\n    //  shuffles the vehicleDisplay array\n    shuffleHomeDisplayCars(state) {\n      let shuffledCars = JSON.parse(localStorage.getItem(\"allModels\"));\n      let arrLength = shuffledCars.length,\n        temp,\n        ranNum;\n      while (arrLength-- > 0) {\n        ranNum = Math.round(Math.random() * (arrLength + 1));\n        temp = shuffledCars[ranNum];\n        shuffledCars[ranNum] = shuffledCars[arrLength];\n        shuffledCars[arrLength] = temp;\n        state.vehiclesDisplay = shuffledCars;\n      }\n    },\n    // keeps track of the index of the priceFrom property selected, to disable prices below this index in the priceTo options\n    disablePricesYears(state, data) {\n      if (data.id == \"priceFrom\") state.pricesUnavailable = data.key;\n      if (data.id == \"yearFrom\") state.yearsUnavailable = data.key;\n    },\n    //sets the content in every array named 'type' of every filter prop object.\n    setItemsInArrayOfEveryPropType(state) {\n      let content = JSON.parse(localStorage.getItem(\"allModels\"));\n      state.filters.make.type = [\"All Makes\", ...new Set(content.map(one => one.make))];\n      state.filters.priceFrom.type = [...new Set(content.map(one => one.price))].sort((a, b) => a - b);\n      state.filters.priceTo.type = [...new Set(content.map(one => one.price))].sort((a, b) => a - b);\n      state.filters.yearFrom.type = [...new Set(content.map(one => one.year))].sort((a, b) => a - b);\n      state.filters.yearTo.type = [...new Set(content.map(one => one.year))].sort((a, b) => a - b);\n      state.filters.carType.type = [...new Set(content.map(one => one.carType))];\n      state.filters.carCondition.type = [\"New/Used\", \"New\", \"Used\"];\n      state.filters.engine.type = [\"All\", \"I4\", \"V6\", \"V8\"];\n      // comeback see how to filter by mileage\n      state.filters.mileage.type = [\"All\", \"0 to 10k\", \"10 to 25k\", \"25k to 50k\", \"50k to 75k\", \"75k to 100k\", \"100k +\"];\n      // state.filters.mileage.type = [\n      // \t{min: \"All\"},\n      // \t{range: \"0 to 10k\", min: 0, max: 10000},\n      // \t{range: \"10 to 25k\", min: 10000, max: 25000},\n      // \t{range: \"25k to 50k\", min: 10000, max: 25000},\n      // \t{range: \"50k to 75k\", min: 50000, max: 75000},\n      // \t{range: \"75k to 100k\", min: 75000, max: 100000},\n      // \t{range: \"100k +\", min: 100000},\n      // ];\n      state.filters.fuel.type = [\"All\", ...new Set(content.map(one => one.fuel))];\n      state.filters.transmission.type = [\"All\", ...new Set(content.map(one => one.transmission))];\n      state.filters.driveTrain.type = [\"All\", ...new Set(content.map(one => one.driveTrain))];\n      state.filters.color.type = [\"All\", ...new Set(content.map(one => one.colorEx))].sort();\n    },\n    clearFilters(state) {\n      state.filters.make.typeSelected = \"\";\n      state.filters.models.typeSelected = \"\";\n      state.filters.priceFrom.typeSelected = 0;\n      state.filters.priceTo.typeSelected = 0;\n      state.filters.yearFrom.typeSelected = 0;\n      state.filters.yearTo.typeSelected = 0;\n      state.filters.carType.typeSelected = \"\";\n      state.filters.carCondition.typeSelected = \"\";\n      state.filters.fuel.typeSelected = \"\";\n      state.filters.transmission.typeSelected = \"\";\n      state.filters.driveTrain.typeSelected = \"\";\n      state.filters.engine.typeSelected = \"\";\n      state.filters.color.typeSelected = \"\";\n      state.inputTextUser = \"\";\n      state.filters.pricesUnavailable = null;\n      state.filters.yearsUnavailable = null;\n\n      // after clearing all props, all models are loaded to be displayed as default\n      state.vehiclesDisplay = JSON.parse(localStorage.getItem(\"allModels\"));\n    },\n    clearPropsVal(state) {\n      state.filters.make.typeSelected = \"\";\n      state.filters.models.typeSelected = \"\";\n      state.filters.priceFrom.typeSelected = 0;\n      state.filters.priceTo.typeSelected = 0;\n      state.filters.yearFrom.typeSelected = 0;\n      state.filters.yearTo.typeSelected = 0;\n      state.filters.carType.typeSelected = \"\";\n      state.filters.carCondition.typeSelected = \"\";\n      state.filters.fuel.typeSelected = \"\";\n      state.filters.transmission.typeSelected = \"\";\n      state.filters.driveTrain.typeSelected = \"\";\n      state.filters.engine.typeSelected = \"\";\n      state.filters.color.typeSelected = \"\";\n      state.filters.pricesUnavailable = null;\n      state.filters.yearsUnavailable = null;\n    },\n    clearMakeModel(state, id) {\n      if (id === \"clear-models\") {\n        state.filters.models.typeSelected = \"\";\n      } else {\n        state.filters.make.typeSelected = \"\";\n        state.filters.models.typeSelected = \"\";\n      }\n    },\n    clearInputTextUser(state, id) {\n      if (id == \"clear-models\") {\n        state.inputTextUser = state.inputTextUser.replace(state.filters.models.typeSelected, \"\").trim();\n      }\n      if (id == \"clear-makes\") {\n        state.inputTextUser = \"\";\n      }\n    },\n    updateInputTextUser(state) {\n      let make = state.filters.make.typeSelected,\n        model = state.filters.models.typeSelected,\n        type = state.filters.carType.typeSelected;\n      if (make) {\n        state.inputTextUser = make;\n      }\n      if (make && model && !model.includes(\"All\")) {\n        state.inputTextUser = `${make} ${model}`;\n      }\n      if (type) {\n        state.inputTextUser = type;\n      }\n    },\n    toggleMobileMenu(state) {\n      state.mobileMenuToggler = !state.mobileMenuToggler;\n    },\n    // togggles on and off to show the card with the options  of the selected field\n    toggleOptionsCard(state, e) {\n      if (e.target.classList.contains(\"selected-field-options\") || e.target.classList.contains(\"selected-field-options-card-content\") || e.target.classList.contains(\"search-fields-container-field\")) {\n        state.optionsCardToggler = !state.optionsCardToggler;\n      }\n    },\n    closeSelectionCard(state, e) {\n      if (e.target.classList.contains(\"modal-clear-card-content\") || e.target.classList.contains(\"search-fields-container-field\")) {\n        state.modalToggler = false;\n      }\n    },\n    // determines which content card will be display according to which search field is clicked on in the mobile view\n    whichFieldContent(state, field) {\n      state.fieldContent = field.id;\n    },\n    assignValueToTypeSelected(state, event) {\n      let filters = Object.values(state.filters);\n      let selectedField = filters.find(one => {\n        // did the following if statement like this, so that i can add a string id + key to radio btn in the sidebarsearch component, so i can match the id to the label of the radio btn, and still be able to filter here,using the id coming from the selection\n        if (event.target.id.toLowerCase().includes(one.id.toLowerCase())) {\n          return one;\n        }\n      });\n\n      //in mobile view the fields selections are textcontent of event target because  they are divs. In desktop the fields selections are value of event target, they come from inputs\n\n      // checks to use event.target.value\n      if (event.type == \"input\") {\n        if ((selectedField.id === \"priceFrom\" || selectedField.id === \"priceTo\") && event.target.value) {\n          selectedField.typeSelected = parseFloat(event.target.value.replace(/\\$|,/g, \"\"));\n        } else if ((selectedField.id === \"priceFrom\" || selectedField.id === \"priceTo\") && !event.target.value) {\n          selectedField.typeSelected = 0;\n        } else {\n          selectedField.typeSelected = event.target.value;\n        }\n      }\n      // checks to use event.target.textcontent, instead\n      else {\n        if ((selectedField.id === \"priceFrom\" || selectedField.id === \"priceTo\") && event.target.textContent) {\n          selectedField.typeSelected = parseFloat(event.target.textContent.replace(/\\$|,/g, \"\"));\n        } else if ((selectedField.id === \"priceFrom\" || selectedField.id === \"priceTo\") && !event.target.textContent) {\n          selectedField.typeSelected = 0;\n        } else {\n          selectedField.typeSelected = event.target.textContent;\n        }\n      }\n    },\n    // receives the id of the clicked field, compares it to the id of car description data to decide which content to show in the card\n    updateClickedFieldContent(state, id) {\n      let filters = Object.values(state.filters);\n      if (id == \"model\" && state.filters.make.typeSelected == \"\" || id == \"model\" && state.filters.make.typeSelected == \"All Makes\") {\n        state.clickedFieldContent = {\n          id: \"model\",\n          type: [\"Select Make First\"]\n        };\n      } else {\n        state.clickedFieldContent = filters.find(one => one.id.toLowerCase() === id.toLowerCase());\n      }\n    },\n    // selects the car models to show according to the make selected\n\n    selectModelByMake(state, data) {\n      if (data.id == \"make\") {\n        state.carsData.forEach(one => {\n          if (state.filters.make.typeSelected == one.make) {\n            state.filters.models.type = one.model.map(one => {\n              return one.model;\n            });\n          }\n        });\n        // adds the option (all makes) and puts it in the first position in the array\n        if (state.filters.make.typeSelected != \"All Makes\") {\n          state.filters.models.type.unshift(`All ${state.filters.make.typeSelected}`);\n        }\n      }\n    },\n    selectPriceAndYear(state, data) {\n      let priceYear = [state.filters.priceFrom, state.filters.priceTo, state.filters.yearFrom, state.filters.yearTo];\n      priceYear.forEach(one => {\n        if (one.id == data.clickedFieldContent.id) {\n          one.typeSelected = data.$event.currentTarget.textContent;\n        }\n      });\n    },\n    // sorts the vehicles that are displaying\n    sortBy(state, event) {\n      switch (event.target.value) {\n        case \"lowestPrice\":\n          state.vehiclesDisplay.sort((a, b) => a.price - b.price);\n          break;\n        case \"highestPrice\":\n          state.vehiclesDisplay.sort((a, b) => b.price - a.price);\n          break;\n        case \"lowestMileage\":\n          state.vehiclesDisplay.sort((a, b) => {\n            return +a.miles.replace(/,/g, \"\") - +b.miles.replace(/,/g, \"\");\n          });\n          break;\n        case \"highestMileage\":\n          state.vehiclesDisplay.sort((a, b) => {\n            return +b.miles.replace(/,/g, \"\") - +a.miles.replace(/,/g, \"\");\n          });\n          break;\n        case \"newest\":\n          state.vehiclesDisplay.sort((a, b) => b.year - a.year);\n          break;\n        case \"oldest\":\n          state.vehiclesDisplay.sort((a, b) => a.year - b.year);\n          break;\n        default:\n          return;\n      }\n    }\n  },\n  actions: {\n    //fetches the cars data, then commits mutations in charge of setting data in the state.\n    async getCarsData({\n      commit,\n      state\n    }) {\n      // try {\n      // \tconst response = await fetch(state.endPoints.carsUrl);\n      // \tconst vehicles = await response.json();\n\n      // \tcommit(\"setCarsData\", vehicles);\n      // \t// commit(\"setMakes\", vehicles);\n      // \tcommit(\"saveAllModelsToLocal\", vehicles);\n      // \tcommit(\"getAllModelsFromLocal\");\n      // \tcommit(\"setItemsInArrayOfEveryPropType\");\n      // } catch (error) {\n      // \tconsole.log(error);\n      // }\n    },\n    async getDealersData({\n      commit,\n      state\n    }) {\n      try {\n        const response = await fetch(state.endPoints.dealersUrl);\n        const carDealers = await response.json();\n        commit(\"setDealersData\", carDealers);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  getters: {\n    carsDataReady(state) {\n      return state.carsData;\n    },\n    carToViewComputed(state) {\n      return state.carToView;\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","vehicles","filters","use","Store","modules","state","searchMobileModal","modalToggler","optionsCardToggler","searchBtnPosition","fieldContent","msg","carsData","dealersData","vehiclesDisplay","allModels","carToView","carToViewGeneralInfo","carToViewDetails","carToViewHistory","carToViewDealer","inputTextUser","dropDownErrorMsg","showDropDownTextField","pricesUnavailable","yearsUnavailable","searchMobileModalContent","mobileMenuToggler","make","id","type","typeSelected","models","priceFrom","priceTo","yearFrom","yearTo","carType","carCondition","fuel","transmission","driveTrain","mileage","engine","color","typeOfCar","clickedFieldContent","desktopNav","link","name","icon","subList","mutations","setDataInVehiclesDisplayFromLocal","JSON","parse","localStorage","getItem","set_typeOfCar","val","searchVehicles","results","filter","one","undefined","toLowerCase","includes","reg","nums","match","min","max","miles","replace","colorEx","trim","price","year","model","setItem","stringify","searchByInputText","e","target","value","find","length","selectElectricCars","routeName","selectDealerInventory","inventory","saveCarToViewToLocalStore","data","getCarToViewFromLocalStore","saveAllModelsToLocal","forEach","push","getAllModelsFromLocal","setCarToViewGeneralInfo","owner","ownerIcon","fuelIcon","milesIcon","iconInfo","colorIn","setCarToviewDetails","key","location","vin","saveCarToViewDealerToLocalS","dealerId","dealer","dealerInventory","setCarToViewDealer","setVehicleHistory","accidents","titleCheck","iconOwner","bgOwner","bgAccidents","bgTitle","iconBg","setCarsData","setDealersData","shuffleHomeDisplayCars","shuffledCars","arrLength","temp","ranNum","Math","round","random","disablePricesYears","setItemsInArrayOfEveryPropType","content","Set","map","sort","a","b","clearFilters","clearPropsVal","clearMakeModel","clearInputTextUser","updateInputTextUser","toggleMobileMenu","toggleOptionsCard","classList","contains","closeSelectionCard","whichFieldContent","field","assignValueToTypeSelected","event","Object","values","selectedField","parseFloat","textContent","updateClickedFieldContent","selectModelByMake","unshift","selectPriceAndYear","priceYear","$event","currentTarget","sortBy","actions","getCarsData","commit","getDealersData","response","fetch","endPoints","dealersUrl","carDealers","json","error","console","log","getters","carsDataReady","carToViewComputed"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport vehicles from './modules/vehicles'\r\nimport filters from './modules/filterOptions'\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n\tmodules: {\r\n\t\tvehicles,\r\n\t\tfilters,\r\n\t},\r\n\tstate: {\r\n\t\t// Global\r\n\t\tsearchMobileModal: false,\r\n\t\tmodalToggler: false,\r\n\t\toptionsCardToggler: false,\r\n\t\tsearchBtnPosition: false,\r\n\t\tfieldContent: null,\r\n\t\tmsg: true,\r\n\r\n\t\tcarsData: [],\r\n\t\tdealersData: [],\r\n\t\tvehiclesDisplay: [],\r\n\t\tallModels: [],\r\n\t\t// receives the data of the clicked car\r\n\t\tcarToView: {},\r\n\t\tcarToViewGeneralInfo: [],\r\n\t\tcarToViewDetails: [],\r\n\t\tcarToViewHistory: [],\r\n\t\tcarToViewDealer: {},\r\n\t\t// sidebarsearch component\r\n\t\tinputTextUser: \"\",\r\n\t\tdropDownErrorMsg: \"\",\r\n\t\tshowDropDownTextField: false,\r\n\t\t// End sidebarsearch component\r\n\t\tpricesUnavailable: null,\r\n\t\tyearsUnavailable: null,\r\n\r\n\t\t//Search mobile component\r\n\r\n\t\tsearchMobileModalContent: null,\r\n\r\n\t\t// endPoints\r\n\t\t// endPoints: {\r\n\t\t// \tcarsUrl: \"http://localhost:3000/car_selection\",\r\n\t\t// \tdealersUrl: \"http://localhost:3000/dealers\",\r\n\t\t// \tcarsInventoryUrl: \"http://localhost:3000/cars_inventory\",\r\n\t\t// },\r\n\r\n\t\t// mobile nav links\r\n\t\tmobileMenuToggler: false,\r\n\t\t// filter props\r\n\t\tfilters: {\r\n\t\t\tmake: {\r\n\t\t\t\tid: \"make\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tmodels: {\r\n\t\t\t\tid: \"model\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tpriceFrom: {\r\n\t\t\t\tid: \"priceFrom\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: 0,\r\n\t\t\t},\r\n\t\t\tpriceTo: {\r\n\t\t\t\tid: \"priceTo\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: 0,\r\n\t\t\t},\r\n\t\t\tyearFrom: {\r\n\t\t\t\tid: \"yearFrom\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: 0,\r\n\t\t\t},\r\n\t\t\tyearTo: {\r\n\t\t\t\tid: \"yearTo\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: 0,\r\n\t\t\t},\r\n\t\t\tcarType: {\r\n\t\t\t\tid: \"carType\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tcarCondition: {\r\n\t\t\t\tid: \"condition\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tfuel: {\r\n\t\t\t\tid: \"fuel\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\ttransmission: {\r\n\t\t\t\tid: \"transmission\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tdriveTrain: {\r\n\t\t\t\tid: \"driveTrain\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tmileage: {\r\n\t\t\t\tid: \"mileage\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tengine: {\r\n\t\t\t\tid: \"engine\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\tid: \"color\",\r\n\t\t\t\ttype: [],\r\n\t\t\t\ttypeSelected: \"\",\r\n\t\t\t},\r\n\t\t},\r\n\t\t// ends filter props\r\n\r\n\t\ttypeOfCar: \"All Vehicles\",\r\n\t\tclickedFieldContent: {},\r\n\r\n\t\tdesktopNav: [\r\n\t\t\t{\r\n\t\t\t\tlink: \"Home\",\r\n\t\t\t\tname: \"Home\",\r\n\t\t\t\ticon: \"fas fa-home\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlink: \"Vehicles\",\r\n\t\t\t\tname: \"searchResults\",\r\n\t\t\t\ticon: \"fas fa-car\",\r\n\t\t\t\tsubList: [\r\n\t\t\t\t\t\"Carros\",\r\n\t\t\t\t\t\"Motores\",\r\n\t\t\t\t\t\"Barcos\",\r\n\t\t\t\t\t\"Vehiculos Pesados\",\r\n\t\t\t\t\t\"Otros\",\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlink: \"Electric Cars\",\r\n\t\t\t\tname: \"Electric\",\r\n\t\t\t\ticon: \"fas fa-charging-station\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlink: \"Contacto\",\r\n\t\t\t\tname: \"Contact\",\r\n\t\t\t\ticon: \"fas fa-phone-volume\",\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\tmutations: {\r\n\t\t// when the app is created, this function get the data  that is at the moment in the  searchResults prop in local storage and sets it to the vehicleDisplay prop that is in the state. this allows the data to stay rendered when the page is reloaded.\r\n\t\tsetDataInVehiclesDisplayFromLocal(state) {\r\n\t\t\tstate.vehiclesDisplay = JSON.parse(\r\n\t\t\t\tlocalStorage.getItem(\"searchResults\")\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tset_typeOfCar(state, val) {\r\n\t\t\tstate.typeOfCar = val;\r\n\t\t},\r\n\t\t// bug. when in sidebarserach component, clicking the different makes on the left sidebar, program wont display them.\r\n\t\tsearchVehicles(state) {\r\n\t\t\tlet results = state.allModels;\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.carCondition.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.carCondition.typeSelected !== \"New/Used\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) =>\r\n\t\t\t\t\t\tone.carCondition === state.filters.carCondition.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.fuel.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.fuel.typeSelected !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.fuel === state.filters.fuel.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.transmission.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.transmission.typeSelected !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) =>\r\n\t\t\t\t\t\tone.transmission === state.filters.transmission.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.driveTrain.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.driveTrain.typeSelected !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.driveTrain === state.filters.driveTrain.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.engine.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.engine.typeSelected !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter((one) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tone.engine != undefined &&\r\n\t\t\t\t\t\tone.engine\r\n\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t.includes(state.filters.engine.typeSelected.toLowerCase())\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn one;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.mileage.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.mileage.typeSelected !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tlet reg = /\\d+/g;\r\n\t\t\t\t// finds the numbers in a string and returns them in an array.\r\n\t\t\t\tlet nums = state.filters.mileage.typeSelected.match(reg);\r\n\t\t\t\t// setting numbers at position zero and one to min and max respectively and converting them to thousands.\r\n\t\t\t\tlet min = +nums[0] * 1000;\r\n\t\t\t\tlet max = +nums[1] * 1000;\r\n\r\n\t\t\t\tresults = results.filter((one) => {\r\n\t\t\t\t\tlet miles = +one.miles.replace(\",\", \"\");\r\n\r\n\t\t\t\t\tif (max) {\r\n\t\t\t\t\t\treturn miles > min && miles < max;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn miles > min;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.color.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.color.typeSelected !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.colorEx === state.filters.color.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (state.filters.carType.typeSelected !== \"\") {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.carType\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(\r\n\t\t\t\t\t\t\tstate.filters.carType.typeSelected.toLowerCase().trim()\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// state.inputTextUser = state.filters.carType.typeSelected;\r\n\t\t\t}\r\n\t\t\tif (state.filters.priceFrom.typeSelected != 0) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.price >= state.filters.priceFrom.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (state.filters.priceTo.typeSelected != 0) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.price <= state.filters.priceTo.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (state.filters.yearFrom.typeSelected > 0) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.year >= state.filters.yearFrom.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (state.filters.yearTo.typeSelected > 0) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.year <= state.filters.yearTo.typeSelected\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// the following condition ensures to show selected make, and in case all makes is selected, it doesnt get into the condition which makes the program run as if nothing was selected and shows all makes avalables.\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.make.typeSelected !== \"\" &&\r\n\t\t\t\tstate.filters.make.typeSelected !== \"All Makes\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.make\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(\r\n\t\t\t\t\t\t\tstate.filters.make.typeSelected.toLowerCase().trim()\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.models.typeSelected != \"\" &&\r\n\t\t\t\tstate.filters.models.typeSelected !=\r\n\t\t\t\t\t`All ${state.filters.make.typeSelected}`\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.model\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(\r\n\t\t\t\t\t\t\tstate.filters.models.typeSelected.toLowerCase().trim()\r\n\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlocalStorage.setItem(\"searchResults\", JSON.stringify(results));\r\n\t\t\tstate.showDropDownTextField = false;\r\n\r\n\t\t},\r\n\r\n\t\t//prepares user type in input on side search to be used in mutation assignValueToTypeSelected\r\n\t\tsearchByInputText(state, e) {\r\n\t\t\tstate.inputTextUser = e.target.value;\r\n\t\t\tlet make, model, type;\r\n\t\t\t// finds the make model and type of car the user put in\r\n\t\t\tstate.allModels.find((one) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tstate.inputTextUser\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(one.make.toLowerCase())\r\n\t\t\t\t) {\r\n\t\t\t\t\tmake = one.make;\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\tstate.inputTextUser\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(one.model.toLowerCase())\r\n\t\t\t\t) {\r\n\t\t\t\t\tmake = one.make;\r\n\t\t\t\t\tmodel = one.model;\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\tstate.inputTextUser\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(one.carType.toLowerCase())\r\n\t\t\t\t) {\r\n\t\t\t\t\ttype = one.carType;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (state.inputTextUser == \"\") {\r\n\t\t\t\tstate.vehiclesDisplay = state.allModels;\r\n\r\n\t\t\t\tstate.filters.make.typeSelected = \"\";\r\n\t\t\t\tstate.filters.models.type = [];\r\n\t\t\t\tstate.filters.carType.typeSelected = \"\";\r\n\t\t\t\tstate.dropDownErrorMsg = \"\";\r\n\t\t\t\tstate.showDropDownTextField = false;\r\n\t\t\t} else {\r\n\t\t\t\tstate.filters.models.type = state.allModels.filter((one) => {\r\n\t\t\t\t\tif (make && !model) {\r\n\t\t\t\t\t\tstate.filters.make.typeSelected = make;\r\n\t\t\t\t\t\treturn one.make === make;\r\n\t\t\t\t\t} else if (model) {\r\n\t\t\t\t\t\tstate.filters.make.typeSelected = make;\r\n\t\t\t\t\t\treturn one.model === model;\r\n\t\t\t\t\t} else if (type) {\r\n\t\t\t\t\t\tstate.filters.carType.typeSelected = type;\r\n\t\t\t\t\t\treturn one.carType === type;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (state.filters.models.type.length == 0) {\r\n\t\t\t\t\tstate.dropDownErrorMsg = \" Invalid Make | Model | Type\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.dropDownErrorMsg = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (e.target.id === \"userInputId\")\r\n\t\t\t\t\tstate.showDropDownTextField = true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectElectricCars(state, routeName) {\r\n\t\t\tif (routeName == \"Electric\") {\r\n\t\t\t\tlet allModels = JSON.parse(localStorage.getItem(\"allModels\"));\r\n\r\n\t\t\t\tstate.vehiclesDisplay = allModels.filter(\r\n\t\t\t\t\t(one) => one.fuel == \"Electric\" || one.fuel == \"Hybrid\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectDealerInventory(state, routeName) {\r\n\t\t\tif (routeName == \"dealerInventory\") {\r\n\t\t\t\tlet inventory = JSON.parse(localStorage.getItem(\"carToViewDealer\"));\r\n\t\t\t\tstate.vehiclesDisplay = inventory.inventory;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// receive the data of the current car selected and saves it to local storage\r\n\t\tsaveCarToViewToLocalStore(state, data) {\r\n\t\t\tlocalStorage.setItem(data.name, JSON.stringify(data.data));\r\n\t\t},\r\n\r\n\t\t// get the data of current car from local storage and assigns it to the prop carToView.\r\n\t\tgetCarToViewFromLocalStore(state) {\r\n\t\t\tstate.carToView = [JSON.parse(localStorage.getItem(\"carToView\"))];\r\n\t\t},\r\n\r\n\t\t// saves all models availables to local storage when the app component is created\r\n\t\tsaveAllModelsToLocal(state, vehicles) {\r\n\t\t\t// the nested loop gets all the models contained in the model array  of each car object\r\n\t\t\tlet allModels = [];\r\n\t\t\tvehicles.forEach((one) => {\r\n\t\t\t\tone.model.forEach((one) => {\r\n\t\t\t\t\tallModels.push(one);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tlocalStorage.setItem(\"allModels\", JSON.stringify(allModels));\r\n\t\t},\r\n\t\t// gets all models from local storage and set them in the state prop allModels when the app component is created\r\n\t\tgetAllModelsFromLocal(state) {\r\n\t\t\tstate.allModels = JSON.parse(localStorage.getItem(\"allModels\"));\r\n\t\t},\r\n\r\n\t\t// receives the data of the current car to view and sets the specifications in the setCarToViewGeneralInfo prop that is  in the state.\r\n\t\tsetCarToViewGeneralInfo(state) {\r\n\t\t\tlet owner, ownerIcon, fuelIcon, milesIcon;\r\n\t\t\tif (state.carToView[0].owner == 0) {\r\n\t\t\t\towner = \"Never owned\";\r\n\t\t\t\townerIcon = \"owner.svg\";\r\n\t\t\t}\r\n\t\t\tif (state.carToView[0].owner == 1) {\r\n\t\t\t\towner = `${state.carToView[0].owner} owner`;\r\n\t\t\t\townerIcon = \"owner.svg\";\r\n\t\t\t}\r\n\t\t\tif (state.carToView[0].owner == 2) {\r\n\t\t\t\townerIcon = \"owners2.svg\";\r\n\t\t\t}\r\n\t\t\tif (state.carToView[0].owner > 2) {\r\n\t\t\t\towner = `${state.carToView[0].owner} owners`;\r\n\t\t\t\townerIcon = \"ownersMany.svg\";\r\n\t\t\t}\r\n\r\n\t\t\tif (state.carToView[0].fuel == \"Electric\") {\r\n\t\t\t\tfuelIcon = \"battery.svg\";\r\n\t\t\t\tmilesIcon = \"electricMiles.svg\";\r\n\t\t\t} else {\r\n\t\t\t\tfuelIcon = \"gas.svg\";\r\n\t\t\t\tmilesIcon = \"mpg.svg\";\r\n\t\t\t}\r\n\r\n\t\t\tstate.carToViewGeneralInfo = [\r\n\t\t\t\t{\r\n\t\t\t\t\ticon: \"miles.svg\",\r\n\t\t\t\t\ticonInfo: `${state.carToView[0].miles} Miles`,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ticon: \"transmission.svg\",\r\n\t\t\t\t\ticonInfo: state.carToView.transmission,\r\n\t\t\t\t},\r\n\t\t\t\t{icon: \"drivetrain.svg\", iconInfo: state.carToView[0].driveTrain},\r\n\t\t\t\t{icon: \"engine.svg\", iconInfo: state.carToView[0].engine},\r\n\t\t\t\t{icon: fuelIcon, iconInfo: state.carToView[0].fuel},\r\n\t\t\t\t{icon: milesIcon, iconInfo: `${state.carToView[0].mileage} MPG`},\r\n\t\t\t\t{icon: \"excolor.svg\", iconInfo: state.carToView[0].colorEx},\r\n\t\t\t\t{icon: \"incolor.svg\", iconInfo: state.carToView[0].colorIn},\r\n\t\t\t\t{icon: ownerIcon, iconInfo: owner},\r\n\t\t\t];\r\n\t\t},\r\n\r\n\t\tsetCarToviewDetails(state) {\r\n\t\t\tstate.carToViewDetails = [\r\n\t\t\t\t{key: \"Location\", val: state.carToView[0].location},\r\n\t\t\t\t{key: \"Engine\", val: state.carToView[0].engine},\r\n\t\t\t\t{key: \"Miles\", val: state.carToView[0].miles},\r\n\t\t\t\t{key: \"MPG\", val: state.carToView[0].mileage},\r\n\t\t\t\t{key: \"Fuel\", val: state.carToView[0].fuel},\r\n\t\t\t\t{key: \"transmission\", val: state.carToView[0].transmission},\r\n\t\t\t\t{key: \"Car type\", val: state.carToView[0].carType},\r\n\t\t\t\t{key: \"Drivetrain\", val: state.carToView[0].driveTrain},\r\n\t\t\t\t{key: \"Color Exterior\", val: state.carToView[0].colorEx},\r\n\t\t\t\t{key: \"Color Interior\", val: state.carToView[0].colorIn},\r\n\t\t\t\t{key: \"Vin\", val: state.carToView[0].vin},\r\n\t\t\t];\r\n\t\t},\r\n\t\t//gets the dealer according to the car selected\r\n\t\tsaveCarToViewDealerToLocalS(state, dealerId) {\r\n\t\t\tlet dealer = state.dealersData.find(\r\n\t\t\t\t(one) => dealerId === one.dealerId\r\n\t\t\t);\r\n\t\t\tlet dealerInventory = state.allModels.filter(\r\n\t\t\t\t(one) => one.dealerId === dealerId\r\n\t\t\t);\r\n\t\t\tdealer[\"inventory\"] = dealerInventory;\r\n\t\t\tif (localStorage.getItem(\"carToViewDealer\") === null) {\r\n\t\t\t\tlocalStorage.setItem(\"carToViewDealer\", JSON.stringify(dealer));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(\"carToViewDealer\", JSON.stringify(dealer));\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCarToViewDealer(state) {\r\n\t\t\tstate.carToViewDealer = JSON.parse(\r\n\t\t\t\tlocalStorage.getItem(\"carToViewDealer\")\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t// receives the data of the current car to view and sets the car history of the current vehicle in the carToViewHistory prop that is in the state.\r\n\t\tsetVehicleHistory(state) {\r\n\t\t\tlet owner,\r\n\t\t\t\taccidents,\r\n\t\t\t\ttitleCheck,\r\n\t\t\t\ticonOwner,\r\n\t\t\t\tbgOwner,\r\n\t\t\t\tbgAccidents,\r\n\t\t\t\tbgTitle;\r\n\r\n\t\t\tif (state.carToView[0].owner == 0) {\r\n\t\t\t\towner = \"Never owned\";\r\n\t\t\t\tbgOwner = \"green\";\r\n\t\t\t\ticonOwner = \"fas fa-user\";\r\n\t\t\t} else if (state.carToView[0].owner == 1) {\r\n\t\t\t\towner = \"One owner\";\r\n\t\t\t\tbgOwner = \"green\";\r\n\t\t\t\ticonOwner = \"fas fa-user\";\r\n\t\t\t} else {\r\n\t\t\t\towner = `${state.carToView[0].owner} onwers`;\r\n\t\t\t\tbgOwner = \"#333\";\r\n\t\t\t\ticonOwner = \"fas fa-users\";\r\n\t\t\t}\r\n\r\n\t\t\tif (state.carToView[0].accidents == 0) {\r\n\t\t\t\taccidents = \"No issues reported\";\r\n\t\t\t\tbgAccidents = \"green\";\r\n\t\t\t} else if (state.carToView[0].accidents == 1) {\r\n\t\t\t\taccidents = \"One accident reported\";\r\n\t\t\t\tbgAccidents = \"#FFCC1D\";\r\n\t\t\t} else {\r\n\t\t\t\taccidents = `${state.carToView[0].accidents} accidents reported`;\r\n\t\t\t\tbgAccidents = \"#FFCC1D\";\r\n\t\t\t}\r\n\r\n\t\t\tif (state.carToView[0].titleCheck == \"No issues\") {\r\n\t\t\t\ttitleCheck = \"No issues reported\";\r\n\t\t\t\tbgTitle = \"green\";\r\n\t\t\t} else {\r\n\t\t\t\ttitleCheck = state.carToView[0].titleCheck;\r\n\t\t\t\tbgTitle = \"#FFCC1D\";\r\n\t\t\t}\r\n\r\n\t\t\tstate.carToViewHistory = [\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"Owners\",\r\n\t\t\t\t\tval: owner,\r\n\t\t\t\t\ticon: iconOwner,\r\n\t\t\t\t\ticonBg: bgOwner,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"Accidents\",\r\n\t\t\t\t\tval: accidents,\r\n\t\t\t\t\ticon: \"fas fa-car\",\r\n\t\t\t\t\ticonBg: bgAccidents,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: \"Title check\",\r\n\t\t\t\t\tval: titleCheck,\r\n\t\t\t\t\ticon: \"far fa-check-square \",\r\n\t\t\t\t\ticonBg: bgTitle,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\t},\r\n\r\n\t\tsetCarsData(state, vehicles) {\r\n\t\t\tif (vehicles) {\r\n\t\t\t\tstate.carsData = vehicles;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetDealersData(state, data) {\r\n\t\t\tif (data) {\r\n\t\t\t\tstate.dealersData = data;\r\n\t\t\t}\r\n\t\t},\r\n\t\t//  shuffles the vehicleDisplay array\r\n\t\tshuffleHomeDisplayCars(state) {\r\n\t\t\tlet shuffledCars = JSON.parse(localStorage.getItem(\"allModels\"));\r\n\t\t\tlet arrLength = shuffledCars.length,\r\n\t\t\t\ttemp,\r\n\t\t\t\tranNum;\r\n\t\t\twhile (arrLength-- > 0) {\r\n\t\t\t\tranNum = Math.round(Math.random() * (arrLength + 1));\r\n\t\t\t\ttemp = shuffledCars[ranNum];\r\n\t\t\t\tshuffledCars[ranNum] = shuffledCars[arrLength];\r\n\t\t\t\tshuffledCars[arrLength] = temp;\r\n\r\n\t\t\t\tstate.vehiclesDisplay = shuffledCars;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// keeps track of the index of the priceFrom property selected, to disable prices below this index in the priceTo options\r\n\t\tdisablePricesYears(state, data) {\r\n\t\t\tif (data.id == \"priceFrom\") state.pricesUnavailable = data.key;\r\n\t\t\tif (data.id == \"yearFrom\") state.yearsUnavailable = data.key;\r\n\t\t},\r\n\t\t//sets the content in every array named 'type' of every filter prop object.\r\n\t\tsetItemsInArrayOfEveryPropType(state) {\r\n\t\t\tlet content = JSON.parse(localStorage.getItem(\"allModels\"));\r\n\r\n\t\t\tstate.filters.make.type = [\r\n\t\t\t\t\"All Makes\",\r\n\t\t\t\t...new Set(content.map((one) => one.make)),\r\n\t\t\t];\r\n\t\t\tstate.filters.priceFrom.type = [\r\n\t\t\t\t...new Set(content.map((one) => one.price)),\r\n\t\t\t].sort((a, b) => a - b);\r\n\t\t\tstate.filters.priceTo.type = [\r\n\t\t\t\t...new Set(content.map((one) => one.price)),\r\n\t\t\t].sort((a, b) => a - b);\r\n\t\t\tstate.filters.yearFrom.type = [\r\n\t\t\t\t...new Set(content.map((one) => one.year)),\r\n\t\t\t].sort((a, b) => a - b);\r\n\t\t\tstate.filters.yearTo.type = [\r\n\t\t\t\t...new Set(content.map((one) => one.year)),\r\n\t\t\t].sort((a, b) => a - b);\r\n\t\t\tstate.filters.carType.type = [\r\n\t\t\t\t...new Set(content.map((one) => one.carType)),\r\n\t\t\t];\r\n\t\t\tstate.filters.carCondition.type = [\"New/Used\", \"New\", \"Used\"];\r\n\t\t\tstate.filters.engine.type = [\"All\", \"I4\", \"V6\", \"V8\"];\r\n\t\t\t// comeback see how to filter by mileage\r\n\t\t\tstate.filters.mileage.type = [\r\n\t\t\t\t\"All\",\r\n\t\t\t\t\"0 to 10k\",\r\n\t\t\t\t\"10 to 25k\",\r\n\t\t\t\t\"25k to 50k\",\r\n\t\t\t\t\"50k to 75k\",\r\n\t\t\t\t\"75k to 100k\",\r\n\t\t\t\t\"100k +\",\r\n\t\t\t];\r\n\t\t\t// state.filters.mileage.type = [\r\n\t\t\t// \t{min: \"All\"},\r\n\t\t\t// \t{range: \"0 to 10k\", min: 0, max: 10000},\r\n\t\t\t// \t{range: \"10 to 25k\", min: 10000, max: 25000},\r\n\t\t\t// \t{range: \"25k to 50k\", min: 10000, max: 25000},\r\n\t\t\t// \t{range: \"50k to 75k\", min: 50000, max: 75000},\r\n\t\t\t// \t{range: \"75k to 100k\", min: 75000, max: 100000},\r\n\t\t\t// \t{range: \"100k +\", min: 100000},\r\n\t\t\t// ];\r\n\t\t\tstate.filters.fuel.type = [\r\n\t\t\t\t\"All\",\r\n\t\t\t\t...new Set(content.map((one) => one.fuel)),\r\n\t\t\t];\r\n\t\t\tstate.filters.transmission.type = [\r\n\t\t\t\t\"All\",\r\n\t\t\t\t...new Set(content.map((one) => one.transmission)),\r\n\t\t\t];\r\n\t\t\tstate.filters.driveTrain.type = [\r\n\t\t\t\t\"All\",\r\n\t\t\t\t...new Set(content.map((one) => one.driveTrain)),\r\n\t\t\t];\r\n\t\t\tstate.filters.color.type = [\r\n\t\t\t\t\"All\",\r\n\t\t\t\t...new Set(content.map((one) => one.colorEx)),\r\n\t\t\t].sort();\r\n\t\t},\r\n\r\n\t\tclearFilters(state) {\r\n\t\t\tstate.filters.make.typeSelected = \"\";\r\n\t\t\tstate.filters.models.typeSelected = \"\";\r\n\t\t\tstate.filters.priceFrom.typeSelected = 0;\r\n\t\t\tstate.filters.priceTo.typeSelected = 0;\r\n\t\t\tstate.filters.yearFrom.typeSelected = 0;\r\n\t\t\tstate.filters.yearTo.typeSelected = 0;\r\n\t\t\tstate.filters.carType.typeSelected = \"\";\r\n\t\t\tstate.filters.carCondition.typeSelected = \"\";\r\n\t\t\tstate.filters.fuel.typeSelected = \"\";\r\n\t\t\tstate.filters.transmission.typeSelected = \"\";\r\n\t\t\tstate.filters.driveTrain.typeSelected = \"\";\r\n\t\t\tstate.filters.engine.typeSelected = \"\";\r\n\t\t\tstate.filters.color.typeSelected = \"\";\r\n\t\t\tstate.inputTextUser = \"\";\r\n\t\t\tstate.filters.pricesUnavailable = null;\r\n\t\t\tstate.filters.yearsUnavailable = null;\r\n\r\n\t\t\t// after clearing all props, all models are loaded to be displayed as default\r\n\t\t\tstate.vehiclesDisplay = JSON.parse(localStorage.getItem(\"allModels\"));\r\n\t\t},\r\n\r\n\t\tclearPropsVal(state) {\r\n\t\t\tstate.filters.make.typeSelected = \"\";\r\n\t\t\tstate.filters.models.typeSelected = \"\";\r\n\t\t\tstate.filters.priceFrom.typeSelected = 0;\r\n\t\t\tstate.filters.priceTo.typeSelected = 0;\r\n\t\t\tstate.filters.yearFrom.typeSelected = 0;\r\n\t\t\tstate.filters.yearTo.typeSelected = 0;\r\n\t\t\tstate.filters.carType.typeSelected = \"\";\r\n\t\t\tstate.filters.carCondition.typeSelected = \"\";\r\n\t\t\tstate.filters.fuel.typeSelected = \"\";\r\n\t\t\tstate.filters.transmission.typeSelected = \"\";\r\n\t\t\tstate.filters.driveTrain.typeSelected = \"\";\r\n\t\t\tstate.filters.engine.typeSelected = \"\";\r\n\t\t\tstate.filters.color.typeSelected = \"\";\r\n\t\t\tstate.filters.pricesUnavailable = null;\r\n\t\t\tstate.filters.yearsUnavailable = null;\r\n\t\t},\r\n\t\tclearMakeModel(state, id) {\r\n\t\t\tif (id === \"clear-models\") {\r\n\t\t\t\tstate.filters.models.typeSelected = \"\";\r\n\t\t\t} else {\r\n\t\t\t\tstate.filters.make.typeSelected = \"\";\r\n\t\t\t\tstate.filters.models.typeSelected = \"\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tclearInputTextUser(state, id) {\r\n\t\t\tif (id == \"clear-models\") {\r\n\t\t\t\tstate.inputTextUser = state.inputTextUser\r\n\t\t\t\t\t.replace(state.filters.models.typeSelected, \"\")\r\n\t\t\t\t\t.trim();\r\n\t\t\t}\r\n\t\t\tif (id == \"clear-makes\") {\r\n\t\t\t\tstate.inputTextUser = \"\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateInputTextUser(state) {\r\n\t\t\tlet make = state.filters.make.typeSelected,\r\n\t\t\t\tmodel = state.filters.models.typeSelected,\r\n\t\t\t\ttype = state.filters.carType.typeSelected;\r\n\r\n\t\t\tif (make) {\r\n\t\t\t\tstate.inputTextUser = make;\r\n\t\t\t}\r\n\t\t\tif (make && model && !model.includes(\"All\")) {\r\n\t\t\t\tstate.inputTextUser = `${make} ${model}`;\r\n\t\t\t}\r\n\t\t\tif (type) {\r\n\t\t\t\tstate.inputTextUser = type;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoggleMobileMenu(state) {\r\n\t\t\tstate.mobileMenuToggler = !state.mobileMenuToggler;\r\n\t\t},\r\n\r\n\t\t// togggles on and off to show the card with the options  of the selected field\r\n\t\ttoggleOptionsCard(state, e) {\r\n\t\t\tif (\r\n\t\t\t\te.target.classList.contains(\"selected-field-options\") ||\r\n\t\t\t\te.target.classList.contains(\r\n\t\t\t\t\t\"selected-field-options-card-content\"\r\n\t\t\t\t) ||\r\n\t\t\t\te.target.classList.contains(\"search-fields-container-field\")\r\n\t\t\t) {\r\n\t\t\t\tstate.optionsCardToggler = !state.optionsCardToggler;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcloseSelectionCard(state, e) {\r\n\t\t\tif (\r\n\t\t\t\te.target.classList.contains(\"modal-clear-card-content\") ||\r\n\t\t\t\te.target.classList.contains(\"search-fields-container-field\")\r\n\t\t\t) {\r\n\t\t\t\tstate.modalToggler = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// determines which content card will be display according to which search field is clicked on in the mobile view\r\n\t\twhichFieldContent(state, field) {\r\n\t\t\tstate.fieldContent = field.id;\r\n\t\t},\r\n\r\n\t\tassignValueToTypeSelected(state, event) {\r\n\r\n\t\t\tlet filters = Object.values(state.filters);\r\n\t\t\tlet selectedField = filters.find((one) => {\r\n\t\t\t\t// did the following if statement like this, so that i can add a string id + key to radio btn in the sidebarsearch component, so i can match the id to the label of the radio btn, and still be able to filter here,using the id coming from the selection\r\n\t\t\t\tif (event.target.id.toLowerCase().includes(one.id.toLowerCase())) {\r\n\t\t\t\t\treturn one;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//in mobile view the fields selections are textcontent of event target because  they are divs. In desktop the fields selections are value of event target, they come from inputs\r\n\r\n\t\t\t// checks to use event.target.value\r\n\t\t\tif (event.type == \"input\") {\r\n\t\t\t\tif (\r\n\t\t\t\t\t(selectedField.id === \"priceFrom\" ||\r\n\t\t\t\t\t\tselectedField.id === \"priceTo\") &&\r\n\t\t\t\t\tevent.target.value\r\n\t\t\t\t) {\r\n\t\t\t\t\tselectedField.typeSelected = parseFloat(\r\n\t\t\t\t\t\tevent.target.value.replace(/\\$|,/g, \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t(selectedField.id === \"priceFrom\" ||\r\n\t\t\t\t\t\tselectedField.id === \"priceTo\") &&\r\n\t\t\t\t\t!event.target.value\r\n\t\t\t\t) {\r\n\t\t\t\t\tselectedField.typeSelected = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselectedField.typeSelected = event.target.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// checks to use event.target.textcontent, instead\r\n\t\t\telse {\r\n\t\t\t\tif (\r\n\t\t\t\t\t(selectedField.id === \"priceFrom\" ||\r\n\t\t\t\t\t\tselectedField.id === \"priceTo\") &&\r\n\t\t\t\t\tevent.target.textContent\r\n\t\t\t\t) {\r\n\t\t\t\t\tselectedField.typeSelected = parseFloat(\r\n\t\t\t\t\t\tevent.target.textContent.replace(/\\$|,/g, \"\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t(selectedField.id === \"priceFrom\" ||\r\n\t\t\t\t\t\tselectedField.id === \"priceTo\") &&\r\n\t\t\t\t\t!event.target.textContent\r\n\t\t\t\t) {\r\n\t\t\t\t\tselectedField.typeSelected = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselectedField.typeSelected = event.target.textContent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// receives the id of the clicked field, compares it to the id of car description data to decide which content to show in the card\r\n\t\tupdateClickedFieldContent(state, id) {\r\n\t\t\tlet filters = Object.values(state.filters);\r\n\t\t\tif (\r\n\t\t\t\t(id == \"model\" && state.filters.make.typeSelected == \"\") ||\r\n\t\t\t\t(id == \"model\" && state.filters.make.typeSelected == \"All Makes\")\r\n\t\t\t) {\r\n\t\t\t\tstate.clickedFieldContent = {\r\n\t\t\t\t\tid: \"model\",\r\n\t\t\t\t\ttype: [\"Select Make First\"],\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tstate.clickedFieldContent = filters.find(\r\n\t\t\t\t\t(one) => one.id.toLowerCase() === id.toLowerCase()\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// selects the car models to show according to the make selected\r\n\r\n\t\tselectModelByMake(state, data) {\r\n\t\t\tif (data.id == \"make\") {\r\n\t\t\t\tstate.carsData.forEach((one) => {\r\n\t\t\t\t\tif (state.filters.make.typeSelected == one.make) {\r\n\t\t\t\t\t\tstate.filters.models.type = one.model.map((one) => {\r\n\t\t\t\t\t\t\treturn one.model;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// adds the option (all makes) and puts it in the first position in the array\r\n\t\t\t\tif (state.filters.make.typeSelected != \"All Makes\") {\r\n\t\t\t\t\tstate.filters.models.type.unshift(\r\n\t\t\t\t\t\t`All ${state.filters.make.typeSelected}`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectPriceAndYear(state, data) {\r\n\t\t\tlet priceYear = [\r\n\t\t\t\tstate.filters.priceFrom,\r\n\t\t\t\tstate.filters.priceTo,\r\n\t\t\t\tstate.filters.yearFrom,\r\n\t\t\t\tstate.filters.yearTo,\r\n\t\t\t];\r\n\t\t\tpriceYear.forEach((one) => {\r\n\t\t\t\tif (one.id == data.clickedFieldContent.id) {\r\n\t\t\t\t\tone.typeSelected = data.$event.currentTarget.textContent;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t// sorts the vehicles that are displaying\r\n\t\tsortBy(state, event) {\r\n\t\t\tswitch (event.target.value) {\r\n\t\t\t\tcase \"lowestPrice\":\r\n\t\t\t\t\tstate.vehiclesDisplay.sort((a, b) => a.price - b.price);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"highestPrice\":\r\n\t\t\t\t\tstate.vehiclesDisplay.sort((a, b) => b.price - a.price);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lowestMileage\":\r\n\t\t\t\t\tstate.vehiclesDisplay.sort((a, b) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t+a.miles.replace(/,/g, \"\") - +b.miles.replace(/,/g, \"\")\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highestMileage\":\r\n\t\t\t\t\tstate.vehiclesDisplay.sort((a, b) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t+b.miles.replace(/,/g, \"\") - +a.miles.replace(/,/g, \"\")\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"newest\":\r\n\t\t\t\t\tstate.vehiclesDisplay.sort((a, b) => b.year - a.year);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oldest\":\r\n\t\t\t\t\tstate.vehiclesDisplay.sort((a, b) => a.year - b.year);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tactions: {\r\n\t\t//fetches the cars data, then commits mutations in charge of setting data in the state.\r\n\t\tasync getCarsData({commit, state}) {\r\n\t\t\t// try {\r\n\t\t\t// \tconst response = await fetch(state.endPoints.carsUrl);\r\n\t\t\t// \tconst vehicles = await response.json();\r\n\r\n\t\t\t// \tcommit(\"setCarsData\", vehicles);\r\n\t\t\t// \t// commit(\"setMakes\", vehicles);\r\n\t\t\t// \tcommit(\"saveAllModelsToLocal\", vehicles);\r\n\t\t\t// \tcommit(\"getAllModelsFromLocal\");\r\n\t\t\t// \tcommit(\"setItemsInArrayOfEveryPropType\");\r\n\t\t\t// } catch (error) {\r\n\t\t\t// \tconsole.log(error);\r\n\t\t\t// }\r\n\t\t},\r\n\r\n\t\tasync getDealersData({commit, state}) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(state.endPoints.dealersUrl);\r\n\t\t\t\tconst carDealers = await response.json();\r\n\r\n\t\t\t\tcommit(\"setDealersData\", carDealers);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tgetters: {\r\n\t\tcarsDataReady(state) {\r\n\t\t\treturn state.carsData;\r\n\t\t},\r\n\t\tcarToViewComputed(state) {\r\n\t\t\treturn state.carToView;\r\n\t\t},\r\n\t},\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}