{"ast":null,"code":"import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\n// Create a reference to the storage service\nconst storage = getStorage();\n\n// Retrieve the image URL from Firebase Firestore or Realtime Database\n\nexport default {\n  async getCarsImages(imagesData) {\n    try {\n      const carsUrl = await Promise.all(imagesData.map(one => {\n        const promisedUrls = one.pics.map(pic => {\n          const imageRef = ref(storage, pic);\n          return getDownloadURL(imageRef);\n        });\n        return Promise.all(promisedUrls).then(urls => {\n          return {\n            id: one.id,\n            imagesUrl: urls\n          };\n        });\n      }));\n      return carsUrl;\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n      throw error;\n    }\n    // try {\n    // \tlet carsUrl = await Promise.all(\n\n    // \t)\n    // \timagesData.map((one) => {\n    // \t\tconst promisedUrls = one.pics.map((pic) => {\n    // \t\t\tconst imageRef = ref(storage, pic);\n    // \t\t\treturn getDownloadURL(imageRef);\n    // \t\t});\n    // \t\treturn Promise.all(promisedUrls).then(urls => {\n    // \t\t\treturn {id:one.id, imagesUrl:urls}\n    // \t\t})\n    // \t});\n    //   console.log(carsUrl,'arr')\n\n    // \treturn carsUrl;\n    // } catch (error) {\n    // \tconsole.error(\"Error fetching images:\", error);\n    // \tthrow error;\n    // }\n  },\n\n  async getImageById(imagePaths) {\n    let imagesUrls = [];\n    try {\n      imagePaths.forEach(path => {});\n      const imageRef = ref(storage, imagePath);\n      const imageUrl = await getDownloadURL(imageRef);\n      return imageUrl;\n    } catch (error) {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["getStorage","ref","getDownloadURL","storage","getCarsImages","imagesData","carsUrl","Promise","all","map","one","promisedUrls","pics","pic","imageRef","then","urls","id","imagesUrl","error","console","getImageById","imagePaths","imagesUrls","forEach","path","imagePath","imageUrl"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiCarsImages.js"],"sourcesContent":["import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n// Create a reference to the storage service\r\nconst storage = getStorage();\r\n\r\n// Retrieve the image URL from Firebase Firestore or Realtime Database\r\n\r\nexport default {\r\n\tasync getCarsImages(imagesData) {\r\n\t\ttry {\r\n\t\t\tconst carsUrl = await Promise.all(\r\n\t\t\t\timagesData.map((one) => {\r\n\t\t\t\t\tconst promisedUrls = one.pics.map((pic) => {\r\n\t\t\t\t\t\tconst imageRef = ref(storage, pic);\r\n\t\t\t\t\t\treturn getDownloadURL(imageRef);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn Promise.all(promisedUrls).then((urls) => {\r\n\t\t\t\t\t\treturn { id: one.id, imagesUrl: urls };\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\treturn carsUrl;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error fetching images:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\t// try {\r\n\t\t// \tlet carsUrl = await Promise.all(\r\n\r\n\t\t// \t)\r\n\t\t// \timagesData.map((one) => {\r\n\t\t// \t\tconst promisedUrls = one.pics.map((pic) => {\r\n\t\t// \t\t\tconst imageRef = ref(storage, pic);\r\n\t\t// \t\t\treturn getDownloadURL(imageRef);\r\n\t\t// \t\t});\r\n\t\t// \t\treturn Promise.all(promisedUrls).then(urls => {\r\n\t\t// \t\t\treturn {id:one.id, imagesUrl:urls}\r\n\t\t// \t\t})\r\n\t\t// \t});\r\n\t\t//   console.log(carsUrl,'arr')\r\n\r\n\t\t// \treturn carsUrl;\r\n\t\t// } catch (error) {\r\n\t\t// \tconsole.error(\"Error fetching images:\", error);\r\n\t\t// \tthrow error;\r\n\t\t// }\r\n\t},\r\n\tasync getImageById(imagePaths) {\r\n\t\tlet imagesUrls =[ ]\r\n\t\ttry {\r\n\t\t\timagePaths.forEach(path => {\r\n\t\t\t\t\r\n\r\n\t\t\t});\r\n\t\t\tconst imageRef = ref(storage, imagePath);\r\n\t\t\tconst imageUrl = await getDownloadURL(imageRef);\r\n\t\t\treturn imageUrl;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;;AAElE;AACA,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;;AAE5B;;AAEA,eAAe;EACd,MAAMI,aAAaA,CAACC,UAAU,EAAE;IAC/B,IAAI;MACH,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAChCH,UAAU,CAACI,GAAG,CAAEC,GAAG,IAAK;QACvB,MAAMC,YAAY,GAAGD,GAAG,CAACE,IAAI,CAACH,GAAG,CAAEI,GAAG,IAAK;UAC1C,MAAMC,QAAQ,GAAGb,GAAG,CAACE,OAAO,EAAEU,GAAG,CAAC;UAClC,OAAOX,cAAc,CAACY,QAAQ,CAAC;QAChC,CAAC,CAAC;QACF,OAAOP,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC,CAACI,IAAI,CAAEC,IAAI,IAAK;UAC/C,OAAO;YAAEC,EAAE,EAAEP,GAAG,CAACO,EAAE;YAAEC,SAAS,EAAEF;UAAK,CAAC;QACvC,CAAC,CAAC;MACH,CAAC,CACF,CAAC;MAED,OAAOV,OAAO;IACf,CAAC,CAAC,OAAOa,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACZ;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EACD,CAAC;;EACD,MAAME,YAAYA,CAACC,UAAU,EAAE;IAC9B,IAAIC,UAAU,GAAE,EAAG;IACnB,IAAI;MACHD,UAAU,CAACE,OAAO,CAACC,IAAI,IAAI,CAG3B,CAAC,CAAC;MACF,MAAMX,QAAQ,GAAGb,GAAG,CAACE,OAAO,EAAEuB,SAAS,CAAC;MACxC,MAAMC,QAAQ,GAAG,MAAMzB,cAAc,CAACY,QAAQ,CAAC;MAC/C,OAAOa,QAAQ;IAChB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}