{"ast":null,"code":"import { required } from \"vuelidate/lib/validators\";\nexport default {\n  data() {\n    return {\n      user_name: \"\",\n      password: \"\",\n      submitted: false\n    };\n  },\n  validations: {\n    user_name: {\n      required\n    },\n    password: {\n      required\n    }\n  },\n  methods: {\n    async tryToLogIn() {\n      console.log(\"trying login\");\n      this.submitted = true;\n      // stop here if form is invalid\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      } else {\n        if (process.env.VUE_APP_DEFAULT_AUTH === \"aws\") {\n          this.CLEAR_ALERT();\n          try {\n            let user = await this.$store.dispatch(\"auth/signIn\", {\n              username: this.user_name,\n              password: this.password\n            });\n            let cog_id = user.attributes.sub;\n            let userData = await ApiUser.getUserById(cog_id);\n            let allowed = false;\n            // console.log(user, \"user from sign in\");\n            // console.log(user.username, \"user from sign in\");\n            // console.log(user.storage.username, \"user from sign in\");\n            // console.log(user, \"user from sign in\");\n            if (Object.keys(userData).length == 0) {\n              let response = await ApiUser.createUser({\n                user_name: this.user_name,\n                email: user.attributes.email,\n                cog_id: cog_id,\n                Confirmed: 1\n              });\n              console.log(response, \"after created\");\n              allowed = true;\n            } else {\n              if (userData.active == 1 && userData.Confirmed == 1) {\n                allowed = true;\n              }\n            }\n            if (allowed) {\n              this.$router.replace({\n                name: \"dashboard\"\n              });\n            } else {\n              this.$store.dispatch(\"auth/signOut\");\n              this.$store.commit(\"auth/ALERT\", {\n                isSuccess: false,\n                isError: true,\n                alertMsg: \"account may be cancelled, unconfirmed, or it doesn't exist\"\n              });\n            }\n          } catch (error) {\n            this.$store.commit(\"auth/ALERT\", {\n              isSuccess: false,\n              isError: true,\n              alertMsg: error\n            });\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["required","data","user_name","password","submitted","validations","methods","tryToLogIn","console","log","$v","$touch","$invalid","process","env","VUE_APP_DEFAULT_AUTH","CLEAR_ALERT","user","$store","dispatch","username","cog_id","attributes","sub","userData","ApiUser","getUserById","allowed","Object","keys","length","response","createUser","email","Confirmed","active","$router","replace","name","commit","isSuccess","isError","alertMsg","error"],"sources":["src/views/joinus/login-page.vue"],"sourcesContent":["<script>\r\nimport { required } from \"vuelidate/lib/validators\";\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user_name: \"\",\r\n      password: \"\",\r\n      submitted: false,\r\n    };\r\n  },\r\n  validations: {\r\n    user_name: { required },\r\n    password: { required },\r\n  },\r\n  methods: {\r\n\r\n    async tryToLogIn() {\r\n      console.log(\"trying login\");\r\n      this.submitted = true;\r\n      // stop here if form is invalid\r\n      this.$v.$touch();\r\n\r\n      if (this.$v.$invalid) {\r\n        return;\r\n      } else {\r\n        if (process.env.VUE_APP_DEFAULT_AUTH === \"aws\") {\r\n          this.CLEAR_ALERT();\r\n          try {\r\n            let user = await this.$store.dispatch(\"auth/signIn\", {\r\n              username: this.user_name,\r\n              password: this.password,\r\n            });\r\n            let cog_id = user.attributes.sub;\r\n            let userData = await ApiUser.getUserById(cog_id);\r\n            let allowed = false;\r\n            // console.log(user, \"user from sign in\");\r\n            // console.log(user.username, \"user from sign in\");\r\n            // console.log(user.storage.username, \"user from sign in\");\r\n            // console.log(user, \"user from sign in\");\r\n            if (Object.keys(userData).length == 0) {\r\n              let response = await ApiUser.createUser({\r\n                user_name: this.user_name,\r\n                email: user.attributes.email,\r\n                cog_id: cog_id,\r\n                Confirmed: 1,\r\n              });\r\n              console.log(response, \"after created\");\r\n              allowed = true;\r\n            } else {\r\n              if (userData.active == 1 && userData.Confirmed == 1) {\r\n                allowed = true;\r\n              }\r\n            }\r\n            if (allowed) {\r\n              this.$router.replace({ name: \"dashboard\" });\r\n            } else {\r\n              this.$store.dispatch(\"auth/signOut\");\r\n              this.$store.commit(\"auth/ALERT\", {\r\n                isSuccess: false,\r\n                isError: true,\r\n                alertMsg: \"account may be cancelled, unconfirmed, or it doesn't exist\",\r\n              });\r\n            }\r\n          } catch (error) {\r\n            this.$store.commit(\"auth/ALERT\", {\r\n              isSuccess: false,\r\n              isError: true,\r\n              alertMsg: error,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<template>\r\n  <div>\r\n    <div v-if=\"isError\" class=\"mt-3 alert alert-danger\" @click=\"CLEAR_ALERT\">\r\n      {{ alertMsg }}\r\n    </div>\r\n    <form class=\"p-2\" @submit.prevent=\"tryToLogIn\">\r\n      <div class=\"mb-3\" id=\"input-group-1\">\r\n        <label for=\"input-1\" class=\"form-label\">User Name</label>\r\n        <input\r\n          id=\"input-1\"\r\n          v-model=\"user_name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter username\"\r\n          :class=\"{ 'is-invalid': submitted && !$v.user_name.required }\"\r\n        />\r\n        <div v-if=\"submitted && !$v.user_name.required\" class=\"invalid-feedback\">\r\n          Username is required.\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\" id=\"input-group-2\">\r\n        <label for=\"input-2\" class=\"form-label\">Password</label>\r\n        <input\r\n          id=\"input-2\"\r\n          v-model=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          :class=\"{ 'is-invalid': submitted && !$v.password.required }\"\r\n        />\r\n        <div v-if=\"submitted && !$v.password.required\" class=\"invalid-feedback\">\r\n          Password is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-check mb-3\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          id=\"customControlInline\"\r\n          name=\"checkbox-1\"\r\n          value=\"accepted\"\r\n          :unchecked-value=\"not_accepted\"\r\n          type=\"checkbox\"\r\n        />\r\n        <label class=\"form-check-label\" for=\"customControlInline\">\r\n          Remember me\r\n        </label>\r\n      </div>\r\n      <div class=\"mt-3 d-grid\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-block\">Log In</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n.invalid-feedback {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"AACA,SAAAA,QAAA;AAGA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,QAAA;MACAC,SAAA;IACA;EACA;EACAC,WAAA;IACAH,SAAA;MAAAF;IAAA;IACAG,QAAA;MAAAH;IAAA;EACA;EACAM,OAAA;IAEA,MAAAC,WAAA;MACAC,OAAA,CAAAC,GAAA;MACA,KAAAL,SAAA;MACA;MACA,KAAAM,EAAA,CAAAC,MAAA;MAEA,SAAAD,EAAA,CAAAE,QAAA;QACA;MACA;QACA,IAAAC,OAAA,CAAAC,GAAA,CAAAC,oBAAA;UACA,KAAAC,WAAA;UACA;YACA,IAAAC,IAAA,cAAAC,MAAA,CAAAC,QAAA;cACAC,QAAA,OAAAlB,SAAA;cACAC,QAAA,OAAAA;YACA;YACA,IAAAkB,MAAA,GAAAJ,IAAA,CAAAK,UAAA,CAAAC,GAAA;YACA,IAAAC,QAAA,SAAAC,OAAA,CAAAC,WAAA,CAAAL,MAAA;YACA,IAAAM,OAAA;YACA;YACA;YACA;YACA;YACA,IAAAC,MAAA,CAAAC,IAAA,CAAAL,QAAA,EAAAM,MAAA;cACA,IAAAC,QAAA,SAAAN,OAAA,CAAAO,UAAA;gBACA9B,SAAA,OAAAA,SAAA;gBACA+B,KAAA,EAAAhB,IAAA,CAAAK,UAAA,CAAAW,KAAA;gBACAZ,MAAA,EAAAA,MAAA;gBACAa,SAAA;cACA;cACA1B,OAAA,CAAAC,GAAA,CAAAsB,QAAA;cACAJ,OAAA;YACA;cACA,IAAAH,QAAA,CAAAW,MAAA,SAAAX,QAAA,CAAAU,SAAA;gBACAP,OAAA;cACA;YACA;YACA,IAAAA,OAAA;cACA,KAAAS,OAAA,CAAAC,OAAA;gBAAAC,IAAA;cAAA;YACA;cACA,KAAApB,MAAA,CAAAC,QAAA;cACA,KAAAD,MAAA,CAAAqB,MAAA;gBACAC,SAAA;gBACAC,OAAA;gBACAC,QAAA;cACA;YACA;UACA,SAAAC,KAAA;YACA,KAAAzB,MAAA,CAAAqB,MAAA;cACAC,SAAA;cACAC,OAAA;cACAC,QAAA,EAAAC;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}