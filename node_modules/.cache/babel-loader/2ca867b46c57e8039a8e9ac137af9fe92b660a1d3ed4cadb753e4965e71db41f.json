{"ast":null,"code":"import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\n// Create a reference to the storage service\nconst storage = getStorage();\n\n// Retrieve the image URL from Firebase Firestore or Realtime Database\n\nexport default {\n  async getCarsImages(imagesData) {\n    try {\n      const promisedUrls = imagesData.map(pic => {\n        const imageRef = ref(storage, pic);\n        return getDownloadURL(imageRef);\n      });\n      const carsUrl = await Promise.all(promisedUrls);\n      console.log(carsUrl, \"the URLs\");\n      return carsUrl;\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n      throw error;\n    }\n  }\n\n  // async getCarsImages(imagesData) {\n  // \t// let carsUrl = [];\n  // \t// const urlList = [];\n  // \ttry {\n  // \tlet promisedUrls = \timagesData.map((pic) => {\n  // \t\t\tconst imageRef = ref(storage, pic);\n  // \t\t\treturn getDownloadURL(imageRef)\n  // \t\t\t\t// .then((url) => {\n  // \t\t\t\t// \tcarsUrl.push(url);\n  // \t\t\t\t// })\n  // \t\t\t\t// .catch((error) => {\n  // \t\t\t\t// \t// Handle any errors that occurred during fetching the image\n  // \t\t\t\t// \tconsole.error(\"Error fetching image:\", error);\n  // \t\t\t\t// });\n\n  // \t\t\t// carsImages.push({ carId: id, carImagesUrl: urlList });\n  // \t});\n  // \t\tconsole.log(promisedUrls,'promises')\n  // \tlet carsUrl = \tawait Promise.all(promisedUrls)\n  // \t\tconsole.log(carsUrl, \"la url\")\n  // \t\treturn carsUrl;\n  // \t} catch (error) {\n  // \t\tthrow error;\n  // \t}\n  // },\n};","map":{"version":3,"names":["getStorage","ref","getDownloadURL","storage","getCarsImages","imagesData","promisedUrls","map","pic","imageRef","carsUrl","Promise","all","console","log","error"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiCarsImages.js"],"sourcesContent":["import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n// Create a reference to the storage service\r\nconst storage = getStorage();\r\n\r\n// Retrieve the image URL from Firebase Firestore or Realtime Database\r\n\r\nexport default {\r\n\tasync getCarsImages(imagesData) {\r\n\t\ttry {\r\n\t\t\tconst promisedUrls = imagesData.map((pic) => {\r\n\t\t\t\tconst imageRef = ref(storage, pic);\r\n\t\t\t\treturn getDownloadURL(imageRef);\r\n\t\t\t});\r\n\r\n\r\n\t\t\tconst carsUrl = await Promise.all(promisedUrls);\r\n\t\t\tconsole.log(carsUrl, \"the URLs\");\r\n\r\n\t\t\treturn carsUrl;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error fetching images:\", error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\r\n\t// async getCarsImages(imagesData) {\r\n\t// \t// let carsUrl = [];\r\n\t// \t// const urlList = [];\r\n\t// \ttry {\r\n\t// \tlet promisedUrls = \timagesData.map((pic) => {\r\n\t// \t\t\tconst imageRef = ref(storage, pic);\r\n\t// \t\t\treturn getDownloadURL(imageRef)\r\n\t// \t\t\t\t// .then((url) => {\r\n\t// \t\t\t\t// \tcarsUrl.push(url);\r\n\t// \t\t\t\t// })\r\n\t// \t\t\t\t// .catch((error) => {\r\n\t// \t\t\t\t// \t// Handle any errors that occurred during fetching the image\r\n\t// \t\t\t\t// \tconsole.error(\"Error fetching image:\", error);\r\n\t// \t\t\t\t// });\r\n\r\n\t// \t\t\t// carsImages.push({ carId: id, carImagesUrl: urlList });\r\n\t// \t});\r\n\t// \t\tconsole.log(promisedUrls,'promises')\r\n\t// \tlet carsUrl = \tawait Promise.all(promisedUrls)\r\n\t// \t\tconsole.log(carsUrl, \"la url\")\r\n\t// \t\treturn carsUrl;\r\n\t// \t} catch (error) {\r\n\t// \t\tthrow error;\r\n\t// \t}\r\n\t// },\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;;AAElE;AACA,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;;AAE5B;;AAEA,eAAe;EACd,MAAMI,aAAaA,CAACC,UAAU,EAAE;IAC/B,IAAI;MACH,MAAMC,YAAY,GAAGD,UAAU,CAACE,GAAG,CAAEC,GAAG,IAAK;QAC5C,MAAMC,QAAQ,GAAGR,GAAG,CAACE,OAAO,EAAEK,GAAG,CAAC;QAClC,OAAON,cAAc,CAACO,QAAQ,CAAC;MAChC,CAAC,CAAC;MAGF,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;MAC/CO,OAAO,CAACC,GAAG,CAACJ,OAAO,EAAE,UAAU,CAAC;MAEhC,OAAOA,OAAO;IACf,CAAC,CAAC,OAAOK,KAAK,EAAE;MACfF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACZ;EACD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}