{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\n// Create a reference to the storage service\nconst storage = getStorage();\n\n// Retrieve the image URL from Firebase Firestore or Realtime Database\n\nexport default {\n  async getCarsImages(data) {\n    let carsUrl = [];\n    // const urlList = [];\n    try {\n      console.log(data.flatmap(pic => pic.pics));\n      data.forEach(one => {\n        const {\n          pics\n        } = one;\n        pics.forEach(pic => {\n          const imageRef = ref(storage, pic);\n          getDownloadURL(imageRef).then(url => {\n            carsUrl.push(url);\n          }).catch(error => {\n            // Handle any errors that occurred during fetching the image\n            console.error(\"Error fetching image:\", error);\n          });\n        });\n\n        // carsImages.push({ carId: id, carImagesUrl: urlList });\n      });\n\n      console.log(carsUrl, 'la url');\n      return carsUrl;\n    } catch (error) {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["getStorage","ref","getDownloadURL","storage","getCarsImages","data","carsUrl","console","log","flatmap","pic","pics","forEach","one","imageRef","then","url","push","catch","error"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/helpers/apiCarsImages.js"],"sourcesContent":["import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n// Create a reference to the storage service\r\nconst storage = getStorage();\r\n\r\n// Retrieve the image URL from Firebase Firestore or Realtime Database\r\n\r\nexport default {\r\n\tasync getCarsImages(data) {\r\n\t\tlet carsUrl = [];\r\n\t\t// const urlList = [];\r\n\t\ttry {\r\n\t\t\tconsole.log(data.flatmap(pic => pic.pics))\r\n\t\t\t data.forEach((one) => {\r\n\t\t\t\tconst { pics } = one;\r\n\t\t\t\tpics.forEach((pic) => {\r\n\t\t\t\t\tconst imageRef = ref(storage, pic);\r\n\r\n\t\t\t\t\tgetDownloadURL(imageRef)\r\n\t\t\t\t\t\t.then((url) => {\r\n\t\t\t\t\t\t\tcarsUrl.push(url);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t// Handle any errors that occurred during fetching the image\r\n\t\t\t\t\t\t\tconsole.error(\"Error fetching image:\", error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// carsImages.push({ carId: id, carImagesUrl: urlList });\r\n\t\t\t});\r\n\t\t\r\n\t\t\tconsole.log(carsUrl,'la url')\r\n\t\t\treturn carsUrl;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n};\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;;AAElE;AACA,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;;AAE5B;;AAEA,eAAe;EACd,MAAMI,aAAaA,CAACC,IAAI,EAAE;IACzB,IAAIC,OAAO,GAAG,EAAE;IAChB;IACA,IAAI;MACHC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC;MACzCN,IAAI,CAACO,OAAO,CAAEC,GAAG,IAAK;QACtB,MAAM;UAAEF;QAAK,CAAC,GAAGE,GAAG;QACpBF,IAAI,CAACC,OAAO,CAAEF,GAAG,IAAK;UACrB,MAAMI,QAAQ,GAAGb,GAAG,CAACE,OAAO,EAAEO,GAAG,CAAC;UAElCR,cAAc,CAACY,QAAQ,CAAC,CACtBC,IAAI,CAAEC,GAAG,IAAK;YACdV,OAAO,CAACW,IAAI,CAACD,GAAG,CAAC;UAClB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;YACjB;YACAZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC9C,CAAC,CAAC;QACH,CAAC,CAAC;;QAEH;MACD,CAAC,CAAC;;MAEFZ,OAAO,CAACC,GAAG,CAACF,OAAO,EAAC,QAAQ,CAAC;MAC7B,OAAOA,OAAO;IACf,CAAC,CAAC,OAAOa,KAAK,EAAE;MACf,MAAMA,KAAK;IACZ;EACD;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}