{"ast":null,"code":"import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport profile from \"./profile\";\n\n//global timer for expiration token\nlet timer;\nexport default {\n  namespaced: true,\n  state: {\n    user: null,\n    alert: {}\n  },\n  mutations: {\n    SET_USER(state, payload) {\n      state.user = payload;\n      console.log(payload);\n    },\n    SET_ALERT_MSG(state, payload) {\n      state.alert = payload;\n      console.log(state.alert, \"el test\");\n    },\n    SHOULD_SHOW_NAV(link) {\n      let showNav = true;\n      if (link == \"DASHBOARD\" && !this.isLoggedIn || link == \"JOIN US\" && this.isLoggedIn || link == \"SIGN OUT\" && !this.isLoggedIn) {\n        showNav = false;\n      }\n      return showNav;\n    }\n  },\n  actions: {\n    async signUp({\n      commit\n    }, {\n      email,\n      password\n    }) {\n      try {\n        let response = await createUserWithEmailAndPassword(getAuth(), email, password);\n        return response.user;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async signIn({\n      commit,\n      dispatch\n    }, {\n      email,\n      password\n    }) {\n      try {\n        let response = await signInWithEmailAndPassword(getAuth(), email, password);\n        const currentUser = response._tokenResponse.email;\n        const token = response._tokenResponse.idToken;\n        const expiresIn = response._tokenResponse.expiresIn;\n        const userProfile = await profile.fetchByAuthId(response.uid);\n        const isActive = !!userProfile.active;\n        timer = setTimeout(() => {\n          dispatch(\"singOutUser\");\n        }, expiresIn);\n        commit(\"SET_USER\", {\n          currentUser,\n          token,\n          isActive\n        });\n        localStorage.setItem(\"currentUserDealer\", JSON.stringify({\n          currentUser,\n          token,\n          isActive\n        }));\n        return response.user;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async singOutUser(_) {\n      try {\n        await signOut(getAuth());\n        localStorage.removeItem(\"currentUserDealer\");\n        this.user = null;\n        clearTimeout(timer);\n      } catch (error) {}\n    }\n  },\n  getters: {\n    isLoggedIn: state => state.user && state.user.i\n  }\n};","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","profile","timer","namespaced","state","user","alert","mutations","SET_USER","payload","console","log","SET_ALERT_MSG","SHOULD_SHOW_NAV","link","showNav","isLoggedIn","actions","signUp","commit","email","password","response","error","signIn","dispatch","currentUser","_tokenResponse","token","idToken","expiresIn","userProfile","fetchByAuthId","uid","isActive","active","setTimeout","localStorage","setItem","JSON","stringify","singOutUser","_","removeItem","clearTimeout","getters","i"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/modules/auth.js"],"sourcesContent":["import {\r\n\tgetAuth,\r\n\tcreateUserWithEmailAndPassword,\r\n\tsignInWithEmailAndPassword,\r\n\tsignOut\r\n} from \"firebase/auth\";\r\nimport profile  from \"./profile\";\r\n\r\n//global timer for expiration token\r\nlet timer;\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate: {\r\n\t\tuser: null,\r\n\t\talert: {},\r\n\t},\r\n\tmutations: {\r\n\t\tSET_USER(state, payload) {\r\n\t\t\tstate.user = payload;\r\n\t\t\tconsole.log(payload);\r\n\t\t},\r\n\t\tSET_ALERT_MSG(state, payload) {\r\n\t\t\tstate.alert = payload;\r\n\t\t\tconsole.log(state.alert, \"el test\");\r\n\t\t},\r\n\t\tSHOULD_SHOW_NAV(link) {\r\n\t\t\tlet showNav = true;\r\n\t\t\tif (\r\n\t\t\t\t(link == \"DASHBOARD\" && !this.isLoggedIn) ||\r\n\t\t\t\t(link == \"JOIN US\" && this.isLoggedIn) ||\r\n\t\t\t\t(link == \"SIGN OUT\" && !this.isLoggedIn)\r\n\t\t\t) {\r\n\t\t\t\tshowNav = false;\r\n\t\t\t}\r\n\t\t\treturn showNav;\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tasync signUp({ commit }, { email, password }) {\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await createUserWithEmailAndPassword(\r\n\t\t\t\t\tgetAuth(),\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword\r\n\t\t\t\t);\r\n\t\t\t\treturn response.user;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync signIn({ commit,dispatch }, { email, password }) {\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await signInWithEmailAndPassword(\r\n\t\t\t\t\tgetAuth(),\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword\r\n\t\t\t\t);\r\n\t\t\t\tconst currentUser = response._tokenResponse.email;\r\n\t\t\t\tconst token = response._tokenResponse.idToken;\r\n\t\t\t\tconst expiresIn = response._tokenResponse.expiresIn;\r\n\t\t\t\tconst userProfile = await profile.fetchByAuthId(response.uid);\r\n\t\t\t\tconst isActive = !!userProfile.active\r\n\r\n\t\t\t\ttimer = setTimeout(() => {\r\n\t\t\t\t\tdispatch(\"singOutUser\");\r\n\t\t\t\t}, expiresIn);\r\n\t\t\t\t\r\n\t\t\t\tcommit(\"SET_USER\", { currentUser, token, isActive });\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t\"currentUserDealer\",\r\n\t\t\t\t\tJSON.stringify({ currentUser, token, isActive  })\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn response.user;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync singOutUser(_) {\r\n\t\t\ttry {\r\n\t\t\t\tawait signOut(getAuth())\r\n\t\t\t\tlocalStorage.removeItem(\"currentUserDealer\")\r\n\t\t\t\tthis.user = null\r\n\t\t\t\tclearTimeout(timer)\r\n\t\t\t} catch (error) {\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetters: {\r\n\tisLoggedIn:(state) => state.user && state.user.i\r\n\t},\r\n};\r\n"],"mappings":"AAAA,SACCA,OAAO,EACPC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,QACD,eAAe;AACtB,OAAOC,OAAO,MAAO,WAAW;;AAEhC;AACA,IAAIC,KAAK;AACT,eAAe;EACdC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACNC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,CAAC;EACT,CAAC;EACDC,SAAS,EAAE;IACVC,QAAQA,CAACJ,KAAK,EAAEK,OAAO,EAAE;MACxBL,KAAK,CAACC,IAAI,GAAGI,OAAO;MACpBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACrB,CAAC;IACDG,aAAaA,CAACR,KAAK,EAAEK,OAAO,EAAE;MAC7BL,KAAK,CAACE,KAAK,GAAGG,OAAO;MACrBC,OAAO,CAACC,GAAG,CAACP,KAAK,CAACE,KAAK,EAAE,SAAS,CAAC;IACpC,CAAC;IACDO,eAAeA,CAACC,IAAI,EAAE;MACrB,IAAIC,OAAO,GAAG,IAAI;MAClB,IACED,IAAI,IAAI,WAAW,IAAI,CAAC,IAAI,CAACE,UAAU,IACvCF,IAAI,IAAI,SAAS,IAAI,IAAI,CAACE,UAAW,IACrCF,IAAI,IAAI,UAAU,IAAI,CAAC,IAAI,CAACE,UAAW,EACvC;QACDD,OAAO,GAAG,KAAK;MAChB;MACA,OAAOA,OAAO;IACf;EACD,CAAC;EACDE,OAAO,EAAE;IACR,MAAMC,MAAMA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEC,KAAK;MAAEC;IAAS,CAAC,EAAE;MAC7C,IAAI;QACH,IAAIC,QAAQ,GAAG,MAAMxB,8BAA8B,CAClDD,OAAO,CAAC,CAAC,EACTuB,KAAK,EACLC,QACD,CAAC;QACD,OAAOC,QAAQ,CAACjB,IAAI;MACrB,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ;IACD,CAAC;IACD,MAAMC,MAAMA,CAAC;MAAEL,MAAM;MAACM;IAAS,CAAC,EAAE;MAAEL,KAAK;MAAEC;IAAS,CAAC,EAAE;MACtD,IAAI;QACH,IAAIC,QAAQ,GAAG,MAAMvB,0BAA0B,CAC9CF,OAAO,CAAC,CAAC,EACTuB,KAAK,EACLC,QACD,CAAC;QACD,MAAMK,WAAW,GAAGJ,QAAQ,CAACK,cAAc,CAACP,KAAK;QACjD,MAAMQ,KAAK,GAAGN,QAAQ,CAACK,cAAc,CAACE,OAAO;QAC7C,MAAMC,SAAS,GAAGR,QAAQ,CAACK,cAAc,CAACG,SAAS;QACnD,MAAMC,WAAW,GAAG,MAAM9B,OAAO,CAAC+B,aAAa,CAACV,QAAQ,CAACW,GAAG,CAAC;QAC7D,MAAMC,QAAQ,GAAG,CAAC,CAACH,WAAW,CAACI,MAAM;QAErCjC,KAAK,GAAGkC,UAAU,CAAC,MAAM;UACxBX,QAAQ,CAAC,aAAa,CAAC;QACxB,CAAC,EAAEK,SAAS,CAAC;QAEbX,MAAM,CAAC,UAAU,EAAE;UAAEO,WAAW;UAAEE,KAAK;UAAEM;QAAS,CAAC,CAAC;QACpDG,YAAY,CAACC,OAAO,CACnB,mBAAmB,EACnBC,IAAI,CAACC,SAAS,CAAC;UAAEd,WAAW;UAAEE,KAAK;UAAEM;QAAU,CAAC,CACjD,CAAC;QAED,OAAOZ,QAAQ,CAACjB,IAAI;MACrB,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACf,MAAMA,KAAK;MACZ;IACD,CAAC;IACD,MAAMkB,WAAWA,CAACC,CAAC,EAAE;MACpB,IAAI;QACH,MAAM1C,OAAO,CAACH,OAAO,CAAC,CAAC,CAAC;QACxBwC,YAAY,CAACM,UAAU,CAAC,mBAAmB,CAAC;QAC5C,IAAI,CAACtC,IAAI,GAAG,IAAI;QAChBuC,YAAY,CAAC1C,KAAK,CAAC;MACpB,CAAC,CAAC,OAAOqB,KAAK,EAAE,CAEhB;IACD;EACD,CAAC;EACDsB,OAAO,EAAE;IACT7B,UAAU,EAAEZ,KAAK,IAAKA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACyC;EAC/C;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}