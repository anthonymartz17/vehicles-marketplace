{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Your Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAwIN2cWNmZlb_jZBjhHeJVS3UymQAGc4M\",\n  authDomain: \"vehicles-marketplace.firebaseapp.com\",\n  projectId: \"vehicles-marketplace\",\n  storageBucket: \"vehicles-marketplace.appspot.com\",\n  messagingSenderId: \"775154818578\",\n  appId: \"1:775154818578:web:d182643d23d2c6c0d182cb\",\n  measurementId: \"G-5PT2T0VZB5\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\n//initialize service\nconst db = getFirestore();\n// collection refference\n\nconst colRef = collection(db, \"cars\");\nfunction uploadImages() {\n  const imageContext = require.context(\"../public/images/cars\", false, /\\.(png|jpe?g|gif|svg)$/);\n  const imageFiles = imageContext.keys().map(key => key.replace(\"./\", \"\"));\n  let uniqueFilenames = [];\n  imageFiles.forEach(filename => {\n    const uniqueId = uuidv4();\n    const originalImageName = filename.split('.').shift();\n    const extension = filename.split(\".\").pop();\n    uniqueFilenames.push(`${originalImageName}_${uniqueId}.${extension}`);\n  });\n  console.log(uniqueFilenames);\n  localStorage.setItem('imageId', JSON.stringify(uniqueFilenames));\n}\n// uploadImages();\n\n// Now you have an array of file names in the `imageFiles` variable\n// You can use this array to upload the images to Firebase Storage\n\n//get collection data\n\n// getDocs(colRef).then((snapshot) => {\n// \tsnapshot.docs.forEach((one) => {\n// \t\tconsole.log({ ...one.data(), id: one.id });\n// \t});\n// });\n\n// Function to add a car document to Firestore\n\nconst addDealer = async car => {\n  try {\n    const docRef = await addDoc(colRef, car);\n    console.log(\"Document written with ID: \", docRef.id);\n  } catch (error) {\n    console.error(\"Error adding document: \", error);\n  }\n};\n// // Fetch the JSON file\nfetch(\"http://localhost:3000/cars\").then(response => response.json()).then(dealersData => {\n  dealersData.forEach(dealer => {\n    addDealer(dealer);\n  });\n}).catch(error => {\n  console.error(\"Error fetching dealer data:\", error);\n});\nexport default app;","map":{"version":3,"names":["initializeApp","getFirestore","collection","getDocs","addDoc","v4","uuidv4","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","colRef","uploadImages","imageContext","require","context","imageFiles","keys","map","key","replace","uniqueFilenames","forEach","filename","uniqueId","originalImageName","split","shift","extension","pop","push","console","log","localStorage","setItem","JSON","stringify","addDealer","car","docRef","id","error","fetch","then","response","json","dealersData","dealer","catch","app"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/firebase.config.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Your Firebase configuration\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyAwIN2cWNmZlb_jZBjhHeJVS3UymQAGc4M\",\r\n\tauthDomain: \"vehicles-marketplace.firebaseapp.com\",\r\n\tprojectId: \"vehicles-marketplace\",\r\n\tstorageBucket: \"vehicles-marketplace.appspot.com\",\r\n\tmessagingSenderId: \"775154818578\",\r\n\tappId: \"1:775154818578:web:d182643d23d2c6c0d182cb\",\r\n\tmeasurementId: \"G-5PT2T0VZB5\",\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\n//initialize service\r\nconst db = getFirestore();\r\n// collection refference\r\n\r\nconst colRef = collection(db, \"cars\");\r\n\r\nfunction uploadImages() {\r\n\tconst imageContext = require.context(\r\n\t\t\"../public/images/cars\",\r\n\t\tfalse,\r\n\t\t/\\.(png|jpe?g|gif|svg)$/\r\n\t);\r\n\tconst imageFiles = imageContext.keys().map((key) => key.replace(\"./\", \"\"));\r\n\tlet uniqueFilenames = [];\r\n\timageFiles.forEach((filename) => {\r\n\t\tconst uniqueId = uuidv4();\r\n\t\tconst originalImageName = filename.split('.').shift()\r\n\t\tconst extension = filename.split(\".\").pop();\r\n\t\r\n\t\tuniqueFilenames.push(`${originalImageName}_${uniqueId}.${extension}`);\r\n\t});\r\n\tconsole.log(uniqueFilenames)\r\n\tlocalStorage.setItem('imageId',JSON.stringify(uniqueFilenames))\r\n\r\n}\r\n// uploadImages();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Now you have an array of file names in the `imageFiles` variable\r\n// You can use this array to upload the images to Firebase Storage\r\n\r\n//get collection data\r\n\r\n// getDocs(colRef).then((snapshot) => {\r\n// \tsnapshot.docs.forEach((one) => {\r\n// \t\tconsole.log({ ...one.data(), id: one.id });\r\n// \t});\r\n// });\r\n\r\n// Function to add a car document to Firestore\r\n\r\nconst addDealer = async (car) => {\r\n\ttry {\r\n\t\tconst docRef = await addDoc(colRef, car);\r\n\t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Error adding document: \", error);\r\n\t}\r\n};\r\n// // Fetch the JSON file\r\nfetch(\"http://localhost:3000/cars\")\r\n\t.then((response) => response.json())\r\n\t.then((dealersData) => {\r\n\t\tdealersData.forEach((dealer) => {\r\n\t\t\taddDealer(dealer);\r\n\t\t});\r\n\t})\r\n\t.catch((error) => {\r\n\t\tconsole.error(\"Error fetching dealer data:\", error);\r\n\t});\r\n\r\nexport default app;\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AAC9E,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;;AAEnC;AACA,MAAMC,cAAc,GAAG;EACtBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,sCAAsC;EAClDC,SAAS,EAAE,sBAAsB;EACjCC,aAAa,EAAE,kCAAkC;EACjDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AAChB,CAAC;;AAED;AACAd,aAAa,CAACO,cAAc,CAAC;;AAE7B;AACA,MAAMQ,EAAE,GAAGd,YAAY,CAAC,CAAC;AACzB;;AAEA,MAAMe,MAAM,GAAGd,UAAU,CAACa,EAAE,EAAE,MAAM,CAAC;AAErC,SAASE,YAAYA,CAAA,EAAG;EACvB,MAAMC,YAAY,GAAGC,OAAO,CAACC,OAAO,CACnC,uBAAuB,EACvB,KAAK,EACL,wBACD,CAAC;EACD,MAAMC,UAAU,GAAGH,YAAY,CAACI,IAAI,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EAC1E,IAAIC,eAAe,GAAG,EAAE;EACxBL,UAAU,CAACM,OAAO,CAAEC,QAAQ,IAAK;IAChC,MAAMC,QAAQ,GAAGvB,MAAM,CAAC,CAAC;IACzB,MAAMwB,iBAAiB,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC;IACrD,MAAMC,SAAS,GAAGL,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAAC,CAAC;IAE3CR,eAAe,CAACS,IAAI,CAAE,GAAEL,iBAAkB,IAAGD,QAAS,IAAGI,SAAU,EAAC,CAAC;EACtE,CAAC,CAAC;EACFG,OAAO,CAACC,GAAG,CAACX,eAAe,CAAC;EAC5BY,YAAY,CAACC,OAAO,CAAC,SAAS,EAACC,IAAI,CAACC,SAAS,CAACf,eAAe,CAAC,CAAC;AAEhE;AACA;;AAaA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMgB,SAAS,GAAG,MAAOC,GAAG,IAAK;EAChC,IAAI;IACH,MAAMC,MAAM,GAAG,MAAMxC,MAAM,CAACY,MAAM,EAAE2B,GAAG,CAAC;IACxCP,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEO,MAAM,CAACC,EAAE,CAAC;EACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfV,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EAChD;AACD,CAAC;AACD;AACAC,KAAK,CAAC,4BAA4B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,WAAW,IAAK;EACtBA,WAAW,CAACxB,OAAO,CAAEyB,MAAM,IAAK;IAC/BV,SAAS,CAACU,MAAM,CAAC;EAClB,CAAC,CAAC;AACH,CAAC,CAAC,CACDC,KAAK,CAAEP,KAAK,IAAK;EACjBV,OAAO,CAACU,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;AACpD,CAAC,CAAC;AAEH,eAAeQ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}