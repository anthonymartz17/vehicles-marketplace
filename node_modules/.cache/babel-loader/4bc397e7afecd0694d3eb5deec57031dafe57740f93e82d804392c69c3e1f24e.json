{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiVehicles from \"../../helpers/apiVehicles\";\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\nexport default {\n  namespaced: true,\n  state: {\n    priceFromOptions: [],\n    vehicles: [],\n    dealers: [],\n    vehiclesToDisplay: [],\n    filters: {\n      make: \"\",\n      model: \"\",\n      priceFrom: 0,\n      priceTo: 0,\n      yearFrom: 0,\n      yearTo: 0,\n      carType: \"\",\n      carCondition: \"\",\n      fuel: \"\",\n      transmission: \"\",\n      driveTrain: \"\",\n      mileage: \"\",\n      engine: \"\",\n      color: \"\",\n      dealerId: \"\"\n    },\n    showMobileMenue: false,\n    searchMenuToggler: false\n  },\n  mutations: {\n    SET_FILTERS_OPTIONS(state, payload) {\n      state.priceFromOptions = [...new Set(payload.map(one => one.price))].sort((a, b) => a - b);\n      state.priceToOptions = [...new Set(payload.map(one => one.price))].sort((a, b) => a - b);\n      state.yearFromOptions = [...new Set(payload.map(one => one.year))].sort((a, b) => a - b);\n      state.yearToOptions = [...new Set(payload.map(one => one.year))].sort((a, b) => a - b);\n    },\n    SET_VEHICLES(state, payload) {\n      state.vehicles = payload;\n    },\n    SET_DEALERS(state, payload) {\n      state.dealers = payload;\n    },\n    UPDATE_FILTERS(state, payload) {\n      if (payload == null) {\n        state.filters = {\n          make: \"\",\n          model: \"\",\n          priceFrom: 0,\n          priceTo: 0,\n          yearFrom: 0,\n          yearTo: 0,\n          carType: \"\",\n          carCondition: \"\",\n          fuel: \"\",\n          transmission: \"\",\n          driveTrain: \"\",\n          mileage: \"\",\n          engine: \"\",\n          color: \"\",\n          dealerId: \"\"\n        };\n      } else {\n        state.filters = {\n          ...state.filters,\n          ...payload\n        };\n      }\n    },\n    FILTER_VEHICLES(state) {\n      let results = state.vehicles;\n      if (state.filters.carCondition !== \"\" && state.filters.carCondition !== \"New/Used\") {\n        results = results.filter(one => one.carCondition === state.filters.carCondition);\n      }\n      if (state.filters.fuel !== \"\" && state.filters.fuel !== \"All\") {\n        results = results.filter(one => one.fuel === state.filters.fuel);\n      }\n      if (state.filters.dealerId !== \"\" && state.filters.dealerId !== \"All\") {\n        results = results.filter(one => one.dealerId === state.filters.dealerId);\n      }\n      if (state.filters.transmission !== \"\" && state.filters.transmission !== \"All\") {\n        results = results.filter(one => one.transmission === state.filters.transmission);\n      }\n      if (state.filters.driveTrain !== \"\" && state.filters.driveTrain !== \"All\") {\n        results = results.filter(one => one.driveTrain === state.filters.driveTrain);\n      }\n      if (state.filters.engine !== \"\" && state.filters.engine !== \"All\") {\n        results = results.filter(one => {\n          if (one.engine != undefined && one.engine.toLowerCase().includes(state.filters.engine.toLowerCase())) {\n            return one;\n          }\n        });\n      }\n      if (state.filters.mileage !== \"\" && state.filters.mileage !== \"All\") {\n        let reg = /\\d+/g;\n        // finds the numbers in a string and returns them in an array.\n        let nums = state.filters.mileage.match(reg);\n        // setting numbers at position zero and one to min and max respectively and converting them to thousands.\n        let min = +nums[0] * 1000;\n        let max = +nums[1] * 1000;\n        results = results.filter(one => {\n          let miles = +one.miles.replace(\",\", \"\");\n          if (max) {\n            return miles > min && miles < max;\n          } else {\n            return miles > min;\n          }\n        });\n      }\n      if (state.filters.color !== \"\" && state.filters.color !== \"All\") {\n        results = results.filter(one => one.colorEx === state.filters.color);\n      }\n      if (state.filters.carType !== \"\") {\n        results = results.filter(one => one.carType.toLowerCase().includes(state.filters.carType.toLowerCase().trim()));\n\n        // state.inputTextUser = state.filters.carType;\n      }\n\n      if (state.filters.priceFrom != 0) {\n        results = results.filter(one => one.price >= state.filters.priceFrom);\n      }\n      if (state.filters.priceTo != 0) {\n        results = results.filter(one => one.price <= state.filters.priceTo);\n      }\n      if (state.filters.yearFrom > 0) {\n        results = results.filter(one => one.year >= state.filters.yearFrom);\n      }\n      if (state.filters.yearTo > 0) {\n        results = results.filter(one => one.year <= state.filters.yearTo);\n      }\n      // the following condition ensures to show selected make, and in case all makes is selected, it doesnt get into the condition which makes the program run as if nothing was selected and shows all makes avalables.\n      if (state.filters.make !== \"\" && state.filters.make !== \"All Makes\") {\n        results = results.filter(one => one.make.toLowerCase().includes(state.filters.make.toLowerCase().trim()));\n      }\n      if (state.filters.model != \"\" && state.filters.model != `All ${state.filters.make}`) {\n        results = results.filter(one => one.model.toLowerCase().includes(state.filters.model.toLowerCase().trim()));\n      }\n      localStorage.setItem(\"searchResults\", JSON.stringify(results));\n      state.vehiclesToDisplay = results;\n      state.showDropDownTextField = false;\n    },\n    TOGGLE_MOBILE_MENUE(state) {\n      state.showMobileMenue = !state.showMobileMenue;\n    },\n    TOGGLE_SEARCH_MENU(state) {\n      state.showSearchMenu = !state.showSearchMenu;\n    },\n    // sorts the vehicles that are displaying\n    SORT_VEHICLES(state, id) {\n      switch (id) {\n        case \"lowestPrice\":\n          state.vehiclesToDisplay.sort((a, b) => a.price - b.price);\n          break;\n        case \"highestPrice\":\n          state.vehiclesToDisplay.sort((a, b) => b.price - a.price);\n          break;\n        case \"lowestMileage\":\n          state.vehiclesToDisplay.sort((a, b) => {\n            return +a.miles.replace(/,/g, \"\") - +b.miles.replace(/,/g, \"\");\n          });\n          break;\n        case \"highestMileage\":\n          state.vehiclesToDisplay.sort((a, b) => {\n            return +b.miles.replace(/,/g, \"\") - +a.miles.replace(/,/g, \"\");\n          });\n          break;\n        case \"newest\":\n          state.vehiclesToDisplay.sort((a, b) => b.year - a.year);\n          break;\n        case \"oldest\":\n          state.vehiclesToDisplay.sort((a, b) => a.year - b.year);\n          break;\n        default:\n          return;\n      }\n    }\n  },\n  getters: {\n    priceOptions: state => {\n      let from = [];\n      let to = [];\n      //  prepares data to be used in vue multiselect with a custom label attribute, to display currency format in dropdown, but send num type in v-model.\n      state.priceFromOptions.forEach(price => {\n        let formatted = price.toLocaleString(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\"\n        });\n        from.push({\n          fromFormatted: formatted,\n          fromNumType: price\n        });\n        to.push({\n          toFormatted: formatted,\n          toNumType: price\n        });\n      });\n      return {\n        from,\n        to\n      };\n    },\n    vehiclesList(state) {\n      if (state.vehicles) {\n        return state.vehicles;\n      }\n    },\n    dealersList(state) {\n      if (state.dealers) {\n        return state.dealers;\n      }\n    }\n    // vehiclesToDisplayList(state) {\n    // \treturn state.vehiclesToDisplay = JSON.parse(localStorage.getItem(\"searchResults\"));\n    // }\n  },\n\n  actions: {\n    async fetchVehicles({\n      commit\n    }) {\n      // shows loading animation while getting the data\n      // commit(\"SWITCH_LOADING\");\n      try {\n        let data = await apiVehicles.getVehicles();\n        // fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\n        let dataUrl = await apiCarsImages.getCarsImages(data);\n        data.forEach(one => {\n          let imagesUrl = dataUrl.find(x => x.id == one.id).imagesUrl;\n          one.carPicsUrls = imagesUrl;\n        });\n        commit(\"SET_VEHICLES\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async fetchVehicleById(_, vehicleId) {\n      try {\n        let vehicle = await apiVehicles.getVehicleById(vehicleId);\n        let imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\n        vehicle.carPicsUrls = imagesUrl;\n        return vehicle;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async fetchDealers({\n      commit\n    }) {\n      // shows loading animation while getting the data\n      // commit(\"SWITCH_LOADING\");\n      try {\n        let data = await apiVehicles.getDealers();\n        commit(\"SET_DEALERS\", data);\n        return data;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    },\n    async fetchDealerById(_, dealerId) {\n      try {\n        let dealer = await apiVehicles.getDealerById(dealerId);\n        return dealer;\n      } catch (error) {\n        throw error;\n      } finally {\n        // turns loading to false\n        // commit(\"SWITCH_LOADING\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiVehicles","apiCarsImages","namespaced","state","priceFromOptions","vehicles","dealers","vehiclesToDisplay","filters","make","model","priceFrom","priceTo","yearFrom","yearTo","carType","carCondition","fuel","transmission","driveTrain","mileage","engine","color","dealerId","showMobileMenue","searchMenuToggler","mutations","SET_FILTERS_OPTIONS","payload","Set","map","one","price","sort","a","b","priceToOptions","yearFromOptions","year","yearToOptions","SET_VEHICLES","SET_DEALERS","UPDATE_FILTERS","FILTER_VEHICLES","results","filter","undefined","toLowerCase","includes","reg","nums","match","min","max","miles","replace","colorEx","trim","localStorage","setItem","JSON","stringify","showDropDownTextField","TOGGLE_MOBILE_MENUE","TOGGLE_SEARCH_MENU","showSearchMenu","SORT_VEHICLES","id","getters","priceOptions","from","to","forEach","formatted","toLocaleString","style","currency","push","fromFormatted","fromNumType","toFormatted","toNumType","vehiclesList","dealersList","actions","fetchVehicles","commit","data","getVehicles","dataUrl","getCarsImages","imagesUrl","find","x","carPicsUrls","error","fetchVehicleById","_","vehicleId","vehicle","getVehicleById","getImagesById","pics","fetchDealers","getDealers","fetchDealerById","dealer","getDealerById"],"sources":["D:/Cursos programacion/Projects Only/vehicles-marketplace/src/store/modules/vehicles.js"],"sourcesContent":["import apiVehicles from \"../../helpers/apiVehicles\";\r\nimport apiCarsImages from \"../../helpers/apiCarsImages\";\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\r\n\tstate: {\r\n\t\tpriceFromOptions: [],\r\n\t\tvehicles: [],\r\n\t\tdealers: [],\r\n\t\tvehiclesToDisplay: [],\r\n\t\tfilters: {\r\n\t\t\tmake: \"\",\r\n\t\t\tmodel: \"\",\r\n\t\t\tpriceFrom: 0,\r\n\t\t\tpriceTo: 0,\r\n\t\t\tyearFrom: 0,\r\n\t\t\tyearTo: 0,\r\n\t\t\tcarType: \"\",\r\n\t\t\tcarCondition: \"\",\r\n\t\t\tfuel: \"\",\r\n\t\t\ttransmission: \"\",\r\n\t\t\tdriveTrain: \"\",\r\n\t\t\tmileage: \"\",\r\n\t\t\tengine: \"\",\r\n\t\t\tcolor: \"\",\r\n\t\t\tdealerId: \"\",\r\n\t\t},\r\n\t\tshowMobileMenue: false,\r\n\t\tsearchMenuToggler: false,\r\n\t},\r\n\tmutations: {\r\n\t\tSET_FILTERS_OPTIONS(state, payload) {\r\n\t\t\tstate.priceFromOptions = [\r\n\t\t\t\t...new Set(payload.map((one) => one.price)),\r\n\t\t\t].sort((a, b) => a - b);\r\n\t\t\tstate.priceToOptions = [...new Set(payload.map((one) => one.price))].sort(\r\n\t\t\t\t(a, b) => a - b\r\n\t\t\t);\r\n\t\t\tstate.yearFromOptions = [...new Set(payload.map((one) => one.year))].sort(\r\n\t\t\t\t(a, b) => a - b\r\n\t\t\t);\r\n\t\t\tstate.yearToOptions = [...new Set(payload.map((one) => one.year))].sort(\r\n\t\t\t\t(a, b) => a - b\r\n\t\t\t);\r\n\t\t},\r\n\t\tSET_VEHICLES(state, payload) {\r\n\t\t\tstate.vehicles = payload;\r\n\t\t},\r\n\t\tSET_DEALERS(state, payload) {\r\n\t\t\tstate.dealers = payload;\r\n\t\t},\r\n\r\n\t\tUPDATE_FILTERS(state, payload) {\r\n\t\t\tif (payload == null) {\r\n\t\t\t\tstate.filters = {\r\n\t\t\t\t\tmake: \"\",\r\n\t\t\t\t\tmodel: \"\",\r\n\t\t\t\t\tpriceFrom: 0,\r\n\t\t\t\t\tpriceTo: 0,\r\n\t\t\t\t\tyearFrom: 0,\r\n\t\t\t\t\tyearTo: 0,\r\n\t\t\t\t\tcarType: \"\",\r\n\t\t\t\t\tcarCondition: \"\",\r\n\t\t\t\t\tfuel: \"\",\r\n\t\t\t\t\ttransmission: \"\",\r\n\t\t\t\t\tdriveTrain: \"\",\r\n\t\t\t\t\tmileage: \"\",\r\n\t\t\t\t\tengine: \"\",\r\n\t\t\t\t\tcolor: \"\",\r\n\t\t\t\t\tdealerId: \"\",\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tstate.filters = { ...state.filters, ...payload };\r\n\t\t\t}\r\n\t\t},\r\n\t\tFILTER_VEHICLES(state) {\r\n\t\t\tlet results = state.vehicles;\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.carCondition !== \"\" &&\r\n\t\t\t\tstate.filters.carCondition !== \"New/Used\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.carCondition === state.filters.carCondition\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (state.filters.fuel !== \"\" && state.filters.fuel !== \"All\") {\r\n\t\t\t\tresults = results.filter((one) => one.fuel === state.filters.fuel);\r\n\t\t\t}\r\n\r\n\t\t\tif (state.filters.dealerId !== \"\" && state.filters.dealerId !== \"All\") {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.dealerId === state.filters.dealerId\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.transmission !== \"\" &&\r\n\t\t\t\tstate.filters.transmission !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.transmission === state.filters.transmission\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.driveTrain !== \"\" &&\r\n\t\t\t\tstate.filters.driveTrain !== \"All\"\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter(\r\n\t\t\t\t\t(one) => one.driveTrain === state.filters.driveTrain\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (state.filters.engine !== \"\" && state.filters.engine !== \"All\") {\r\n\t\t\t\tresults = results.filter((one) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tone.engine != undefined &&\r\n\t\t\t\t\t\tone.engine\r\n\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t.includes(state.filters.engine.toLowerCase())\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn one;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (state.filters.mileage !== \"\" && state.filters.mileage !== \"All\") {\r\n\t\t\t\tlet reg = /\\d+/g;\r\n\t\t\t\t// finds the numbers in a string and returns them in an array.\r\n\t\t\t\tlet nums = state.filters.mileage.match(reg);\r\n\t\t\t\t// setting numbers at position zero and one to min and max respectively and converting them to thousands.\r\n\t\t\t\tlet min = +nums[0] * 1000;\r\n\t\t\t\tlet max = +nums[1] * 1000;\r\n\r\n\t\t\t\tresults = results.filter((one) => {\r\n\t\t\t\t\tlet miles = +one.miles.replace(\",\", \"\");\r\n\r\n\t\t\t\t\tif (max) {\r\n\t\t\t\t\t\treturn miles > min && miles < max;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn miles > min;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (state.filters.color !== \"\" && state.filters.color !== \"All\") {\r\n\t\t\t\tresults = results.filter((one) => one.colorEx === state.filters.color);\r\n\t\t\t}\r\n\t\t\tif (state.filters.carType !== \"\") {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.carType\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(state.filters.carType.toLowerCase().trim())\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// state.inputTextUser = state.filters.carType;\r\n\t\t\t}\r\n\t\t\tif (state.filters.priceFrom != 0) {\r\n\t\t\t\tresults = results.filter((one) => one.price >= state.filters.priceFrom);\r\n\t\t\t}\r\n\t\t\tif (state.filters.priceTo != 0) {\r\n\t\t\t\tresults = results.filter((one) => one.price <= state.filters.priceTo);\r\n\t\t\t}\r\n\t\t\tif (state.filters.yearFrom > 0) {\r\n\t\t\t\tresults = results.filter((one) => one.year >= state.filters.yearFrom);\r\n\t\t\t}\r\n\t\t\tif (state.filters.yearTo > 0) {\r\n\t\t\t\tresults = results.filter((one) => one.year <= state.filters.yearTo);\r\n\t\t\t}\r\n\t\t\t// the following condition ensures to show selected make, and in case all makes is selected, it doesnt get into the condition which makes the program run as if nothing was selected and shows all makes avalables.\r\n\t\t\tif (state.filters.make !== \"\" && state.filters.make !== \"All Makes\") {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.make\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(state.filters.make.toLowerCase().trim())\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.filters.model != \"\" &&\r\n\t\t\t\tstate.filters.model != `All ${state.filters.make}`\r\n\t\t\t) {\r\n\t\t\t\tresults = results.filter((one) =>\r\n\t\t\t\t\tone.model\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.includes(state.filters.model.toLowerCase().trim())\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlocalStorage.setItem(\"searchResults\", JSON.stringify(results));\r\n\t\t\tstate.vehiclesToDisplay = results;\r\n\t\t\tstate.showDropDownTextField = false;\r\n\t\t},\r\n\r\n\t\tTOGGLE_MOBILE_MENUE(state) {\r\n\t\t\tstate.showMobileMenue = !state.showMobileMenue;\r\n\t\t},\r\n\t\tTOGGLE_SEARCH_MENU(state) {\r\n\t\t\tstate.showSearchMenu = !state.showSearchMenu;\r\n\t\t},\r\n\t\t// sorts the vehicles that are displaying\r\n\t\tSORT_VEHICLES(state, id) {\r\n\t\t\tswitch (id) {\r\n\t\t\t\tcase \"lowestPrice\":\r\n\t\t\t\t\tstate.vehiclesToDisplay.sort((a, b) => a.price - b.price);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"highestPrice\":\r\n\t\t\t\t\tstate.vehiclesToDisplay.sort((a, b) => b.price - a.price);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lowestMileage\":\r\n\t\t\t\t\tstate.vehiclesToDisplay.sort((a, b) => {\r\n\t\t\t\t\t\treturn +a.miles.replace(/,/g, \"\") - +b.miles.replace(/,/g, \"\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highestMileage\":\r\n\t\t\t\t\tstate.vehiclesToDisplay.sort((a, b) => {\r\n\t\t\t\t\t\treturn +b.miles.replace(/,/g, \"\") - +a.miles.replace(/,/g, \"\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"newest\":\r\n\t\t\t\t\tstate.vehiclesToDisplay.sort((a, b) => b.year - a.year);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oldest\":\r\n\t\t\t\t\tstate.vehiclesToDisplay.sort((a, b) => a.year - b.year);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\tgetters: {\r\n\t\tpriceOptions: (state) => {\r\n\t\t\tlet from = [];\r\n\t\t\tlet to = [];\r\n//  prepares data to be used in vue multiselect with a custom label attribute, to display currency format in dropdown, but send num type in v-model.\r\n\t\t\tstate.priceFromOptions.forEach((price) => {\r\n\t\t\t\tlet formatted = price.toLocaleString(\"en-US\", {\r\n\t\t\t\t\tstyle: \"currency\",\r\n\t\t\t\t\tcurrency: \"USD\",\r\n\t\t\t\t});\r\n\t\t\t\tfrom.push({ fromFormatted: formatted, fromNumType: price });\r\n\t\t\t\tto.push({ toFormatted: formatted, toNumType: price });\r\n\t\t\t});\r\n\t\t\treturn {from,to}\r\n\t\t},\r\n\t\tvehiclesList(state) {\r\n\t\t\tif (state.vehicles) {\r\n\t\t\t\treturn state.vehicles;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdealersList(state) {\r\n\t\t\tif (state.dealers) {\r\n\t\t\t\treturn state.dealers;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// vehiclesToDisplayList(state) {\r\n\t\t// \treturn state.vehiclesToDisplay = JSON.parse(localStorage.getItem(\"searchResults\"));\r\n\t\t// }\r\n\t},\r\n\r\n\tactions: {\r\n\t\tasync fetchVehicles({ commit }) {\r\n\t\t\t// shows loading animation while getting the data\r\n\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiVehicles.getVehicles();\r\n\t\t\t\t// fetch images url in firestore storage & adds each corresponding list of urls to the proper car in cars list.\r\n\t\t\t\tlet dataUrl = await apiCarsImages.getCarsImages(data);\r\n\t\t\t\tdata.forEach((one) => {\r\n\t\t\t\t\tlet imagesUrl = dataUrl.find((x) => x.id == one.id).imagesUrl;\r\n\t\t\t\t\tone.carPicsUrls = imagesUrl;\r\n\t\t\t\t});\r\n\t\t\t\tcommit(\"SET_VEHICLES\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchVehicleById(_, vehicleId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet vehicle = await apiVehicles.getVehicleById(vehicleId);\r\n\t\t\t\tlet imagesUrl = await apiCarsImages.getImagesById(vehicle.pics);\r\n\t\t\t\tvehicle.carPicsUrls = imagesUrl;\r\n\t\t\t\treturn vehicle;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchDealers({ commit }) {\r\n\t\t\t// shows loading animation while getting the data\r\n\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\ttry {\r\n\t\t\t\tlet data = await apiVehicles.getDealers();\r\n\t\t\t\tcommit(\"SET_DEALERS\", data);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchDealerById(_, dealerId) {\r\n\t\t\ttry {\r\n\t\t\t\tlet dealer = await apiVehicles.getDealerById(dealerId);\r\n\t\t\t\treturn dealer;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow error;\r\n\t\t\t} finally {\r\n\t\t\t\t// turns loading to false\r\n\t\t\t\t// commit(\"SWITCH_LOADING\");\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}